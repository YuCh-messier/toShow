/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../../_chunks/dep-2baf8638.js';
import { useState, useEffect } from 'react';
import dayjs from 'dayjs';
import useControlled from '../../hooks/useControlled.js';
import { getDefaultFormat, isValidDate, formatDate, formatTime, parseToDayjs } from '../../_common/js/date-picker/format.js';
import { extractTimeFormat } from '../../_common/js/date-picker/utils.js';
import log from '../../_common/js/log/log.js';
import '../../_chunks/dep-24599104.js';
import '../../_chunks/dep-8f4dca99.js';
import '../../_chunks/dep-65354ae3.js';
import '../../_chunks/dep-4192679d.js';
import '../../_chunks/dep-2998e451.js';
import '../../_chunks/dep-cf61d761.js';
import '../../_chunks/dep-3627969a.js';
import '../../_chunks/dep-c393cab2.js';
import '../../_chunks/dep-893e0247.js';
import '../../_chunks/dep-090fa3b2.js';
import '../../_util/noop.js';
import '../../_chunks/dep-ebef14de.js';
import '../../_chunks/dep-df494df9.js';
import '../../_chunks/dep-d502af5f.js';
import '../../_chunks/dep-056b9d81.js';
import '../../_chunks/dep-873eecd0.js';
import '../../_chunks/dep-86599c44.js';
import '../../_chunks/dep-68ef3987.js';
import '../../_chunks/dep-00ad7a91.js';
import '../../_chunks/dep-f60756e1.js';
import '../../_chunks/dep-75ee7646.js';

var PARTIAL_MAP = {
  first: "start",
  second: "end"
};
function initYearMonthTime(_ref) {
  var value = _ref.value,
      _ref$mode = _ref.mode,
      mode = _ref$mode === void 0 ? "date" : _ref$mode,
      format = _ref.format,
      _ref$timeFormat = _ref.timeFormat,
      timeFormat = _ref$timeFormat === void 0 ? "HH:mm:ss" : _ref$timeFormat,
      enableTimePicker = _ref.enableTimePicker;
  var defaultYearMonthTime = {
    year: [dayjs().year(), dayjs().year()],
    month: [dayjs().month(), dayjs().month()],
    time: [dayjs().format(timeFormat), dayjs().format(timeFormat)]
  };

  if (mode === "year") {
    defaultYearMonthTime.year[1] += 10;
  } else if (mode === "month" || mode === "quarter") {
    defaultYearMonthTime.year[1] += 1;
  } else if ((mode === "date" || mode === "week") && !enableTimePicker) {
    defaultYearMonthTime.month[1] += 1;
  }

  if (!value || !Array.isArray(value) || !value.length) {
    return defaultYearMonthTime;
  }

  return {
    year: value.map(function (v) {
      return parseToDayjs(v, format).year();
    }),
    month: value.map(function (v) {
      return parseToDayjs(v, format).month();
    }),
    time: value.map(function (v) {
      return parseToDayjs(v, format).format(timeFormat);
    })
  };
}
function useRange(props) {
  var _useControlled = useControlled(props, "value", props.onChange),
      _useControlled2 = _slicedToArray(_useControlled, 2),
      value = _useControlled2[0],
      onChange = _useControlled2[1];

  var _getDefaultFormat = getDefaultFormat({
    mode: props.mode,
    format: props.format,
    enableTimePicker: props.enableTimePicker
  }),
      format = _getDefaultFormat.format,
      timeFormat = _getDefaultFormat.timeFormat;

  if (props.enableTimePicker) {
    if (!extractTimeFormat(format)) log.error("DatePicker", "format: ".concat(format, " \u4E0D\u89C4\u8303\uFF0C\u5305\u542B\u65F6\u95F4\u9009\u62E9\u5FC5\u987B\u8981\u6709\u65F6\u95F4\u683C\u5F0F\u5316 HH:mm:ss"));
  }

  if (!Array.isArray(value)) {
    log.error("DatePicker", "typeof value: ".concat(value, " must be Array!"));
  } else if (!isValidDate(value, format)) {
    log.error("DatePicker", "value: ".concat(value, " is invalid dateTime! Check whether the value is consistent with format: ").concat(format));
  }

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isFirstValueSelected = _useState2[0],
      setIsFirstValueSelected = _useState2[1];

  var _useState3 = useState(initYearMonthTime({
    value: value,
    mode: props.mode,
    format: format,
    timeFormat: timeFormat
  }).time),
      _useState4 = _slicedToArray(_useState3, 2),
      time = _useState4[0],
      setTime = _useState4[1];

  var _useState5 = useState(initYearMonthTime({
    value: value,
    mode: props.mode,
    format: format,
    enableTimePicker: props.enableTimePicker
  }).month),
      _useState6 = _slicedToArray(_useState5, 2),
      month = _useState6[0],
      setMonth = _useState6[1];

  var _useState7 = useState(initYearMonthTime({
    value: value,
    mode: props.mode,
    format: format
  }).year),
      _useState8 = _slicedToArray(_useState7, 2),
      year = _useState8[0],
      setYear = _useState8[1];

  var _useState9 = useState(formatDate(value, {
    format: format
  })),
      _useState10 = _slicedToArray(_useState9, 2),
      cacheValue = _useState10[0],
      setCacheValue = _useState10[1];

  useEffect(function () {
    if (!value) {
      setCacheValue([]);
      return;
    }

    if (!isValidDate(value, format)) return;
    setCacheValue(formatDate(value, {
      format: format
    }));
    setTime(formatTime(value, timeFormat));
  }, [value]);
  return {
    value: value,
    onChange: onChange,
    year: year,
    setYear: setYear,
    month: month,
    setMonth: setMonth,
    time: time,
    setTime: setTime,
    isFirstValueSelected: isFirstValueSelected,
    setIsFirstValueSelected: setIsFirstValueSelected,
    cacheValue: cacheValue,
    setCacheValue: setCacheValue
  };
}

export { PARTIAL_MAP, useRange as default, initYearMonthTime };
//# sourceMappingURL=useRangeValue.js.map
