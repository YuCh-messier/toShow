/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-ebef14de.js';
import { _ as _slicedToArray } from '../_chunks/dep-2baf8638.js';
import React, { useState, useEffect } from 'react';
import classNames from 'classnames';
import useConfig from '../hooks/useConfig.js';
import '../_chunks/dep-24599104.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-98b209dd.js';
import '../_chunks/dep-1304d812.js';
import '../_chunks/dep-339b0951.js';
import '../_chunks/dep-ba4fa05d.js';
import '../_chunks/dep-00ad7a91.js';
import '../_chunks/dep-cf61d761.js';
import '../_chunks/dep-3627969a.js';
import '../_chunks/dep-056b9d81.js';
import '../_chunks/dep-86599c44.js';
import '../_chunks/dep-de91e914.js';
import '../_chunks/dep-f60756e1.js';
import '../_chunks/dep-090fa3b2.js';
import '../_chunks/dep-a98a054e.js';
import '../_chunks/dep-7a725039.js';
import '../_chunks/dep-e48ce47b.js';
import '../_chunks/dep-d9495851.js';
import '../_chunks/dep-c393cab2.js';
import '../_chunks/dep-75ee7646.js';
import '../_chunks/dep-68ef3987.js';
import '../_chunks/dep-7237da98.js';
import '../_chunks/dep-d905b9e9.js';
import '../_chunks/dep-87e9108c.js';
import '../_chunks/dep-873eecd0.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';

var TabBar = function TabBar(props) {
  var _classNames;

  var tabPosition = props.tabPosition,
      activeId = props.activeId,
      containerRef = props.containerRef;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useState = useState({}),
      _useState2 = _slicedToArray(_useState, 2),
      barStyle = _useState2[0],
      setBarStyle = _useState2[1];

  var tabsClassPrefix = "".concat(classPrefix, "-tabs");

  var computeStyle = function computeStyle() {
    var isHorizontal = ["bottom", "top"].includes(tabPosition);
    var transformPosition = isHorizontal ? "translateX" : "translateY";
    var itemProp = isHorizontal ? "width" : "height";
    var barBorderProp = isHorizontal ? "width" : "height";
    var offset = 0;

    if (containerRef.current) {
      var _containerRef$current, _containerRef$current2;

      var itemsRef = (_containerRef$current = (_containerRef$current2 = containerRef.current).querySelectorAll) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.call(_containerRef$current2, ".".concat(tabsClassPrefix, "__nav-item"));

      if (itemsRef.length - 1 >= activeId) {
        itemsRef.forEach(function (item, itemIndex) {
          if (itemIndex < activeId) {
            offset += Number(getComputedStyle(item)[itemProp].replace("px", ""));
          }
        });
        var computedItem = itemsRef[activeId];

        if (!computedItem) {
          setBarStyle(_defineProperty({
            transform: "".concat(transformPosition, "(", 0, "px)")
          }, barBorderProp, 0));
          return;
        }

        var itemPropValue = getComputedStyle(computedItem)[itemProp];
        setBarStyle(_defineProperty({
          transform: "".concat(transformPosition, "(").concat(offset, "px)")
        }, barBorderProp, itemPropValue || 0));
      }
    }
  };

  useEffect(function () {
    if (containerRef.current) {
      setTimeout(function () {
        return computeStyle();
      });
    }
  }, [tabPosition, activeId, containerRef.current]);
  return /* @__PURE__ */React.createElement("div", {
    className: classNames((_classNames = {}, _defineProperty(_classNames, "".concat(tabsClassPrefix, "__bar"), true), _defineProperty(_classNames, "".concat(classPrefix, "-is-").concat(tabPosition), true), _classNames)),
    style: barStyle
  });
};

TabBar.displayName = "TabBar";

export { TabBar as default };
//# sourceMappingURL=TabBar.js.map
