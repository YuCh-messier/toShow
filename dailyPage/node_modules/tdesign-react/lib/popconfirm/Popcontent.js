/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-ebef14de.js';
import React from 'react';
import { i as isString_1 } from '../_chunks/dep-f3228585.js';
import classNames from 'classnames';
import { InfoCircleFilledIcon } from 'tdesign-icons-react';
import { Button } from '../button/index.js';
import noop from '../_util/noop.js';
import useConfig from '../hooks/useConfig.js';
import useGlobalIcon from '../hooks/useGlobalIcon.js';
import '../_chunks/dep-cf61d761.js';
import '../_chunks/dep-3627969a.js';
import '../_chunks/dep-c393cab2.js';
import '../_chunks/dep-090fa3b2.js';
import '../button/Button.js';
import '../_chunks/dep-fe234c83.js';
import '../_util/useRipple.js';
import '../_util/useAnimation.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-98b209dd.js';
import '../_chunks/dep-1304d812.js';
import '../_chunks/dep-339b0951.js';
import '../_chunks/dep-ba4fa05d.js';
import '../_chunks/dep-00ad7a91.js';
import '../_chunks/dep-056b9d81.js';
import '../_chunks/dep-86599c44.js';
import '../_chunks/dep-de91e914.js';
import '../_chunks/dep-f60756e1.js';
import '../_chunks/dep-a98a054e.js';
import '../_chunks/dep-7a725039.js';
import '../_chunks/dep-e48ce47b.js';
import '../_chunks/dep-d9495851.js';
import '../_chunks/dep-75ee7646.js';
import '../_chunks/dep-68ef3987.js';
import '../_chunks/dep-7237da98.js';
import '../_chunks/dep-d905b9e9.js';
import '../_chunks/dep-87e9108c.js';
import '../_chunks/dep-873eecd0.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../_util/setStyle.js';
import '../_util/dom.js';
import 'raf';
import '../_util/easing.js';
import '../loading/index.js';
import '../loading/Loading.js';
import '../_chunks/dep-2baf8638.js';
import '../_chunks/dep-24599104.js';
import '../common/Portal.js';
import 'react-dom';
import '../loading/gradient.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../_common/js/utils/helper.js';
import '../_chunks/dep-88be14a4.js';
import '../loading/defaultProps.js';
import '../loading/plugin.js';
import '../button/defaultProps.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var Popcontent = function Popcontent(props) {
  var content = props.content,
      cancelBtn = props.cancelBtn,
      confirmBtn = props.confirmBtn,
      icon = props.icon,
      theme = props.theme,
      _props$onCancel = props.onCancel,
      onCancel = _props$onCancel === void 0 ? noop : _props$onCancel,
      _props$onConfirm = props.onConfirm,
      onConfirm = _props$onConfirm === void 0 ? noop : _props$onConfirm,
      _props$onClose = props.onClose,
      onClose = _props$onClose === void 0 ? noop : _props$onClose;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useGlobalIcon = useGlobalIcon({
    InfoCircleFilledIcon: InfoCircleFilledIcon
  }),
      InfoCircleFilledIcon$1 = _useGlobalIcon.InfoCircleFilledIcon;

  var hideCancel = cancelBtn === null || cancelBtn === void 0;
  var hideConfirm = confirmBtn === null || confirmBtn === void 0;

  function renderIcon() {
    var color = "#0052D9";
    var defaultIcon = /* @__PURE__ */React.createElement(InfoCircleFilledIcon$1, null);

    switch (theme) {
      case "warning":
        color = "#FFAA00";
        break;

      case "danger":
        color = "#FF3E00";
        break;
    }

    var iconComponent = null;

    if ( /*#__PURE__*/React.isValidElement(icon)) {
      iconComponent = /*#__PURE__*/React.cloneElement(icon, _objectSpread({
        style: {
          color: color
        }
      }, icon.props));
    } else if (typeof icon === "function") {
      iconComponent = icon();
    } else if (defaultIcon) {
      iconComponent = /*#__PURE__*/React.cloneElement(defaultIcon, {
        style: {
          color: color
        }
      });
    }

    return iconComponent;
  }

  function renderCancel() {
    if ( /*#__PURE__*/React.isValidElement(cancelBtn)) {
      return /*#__PURE__*/React.cloneElement(cancelBtn, {
        onClick: function onClick(e) {
          var _cancelBtn$props, _cancelBtn$props$onCl;

          onClose({
            e: e,
            trigger: "cancel"
          });
          (_cancelBtn$props = cancelBtn.props) === null || _cancelBtn$props === void 0 ? void 0 : (_cancelBtn$props$onCl = _cancelBtn$props.onClick) === null || _cancelBtn$props$onCl === void 0 ? void 0 : _cancelBtn$props$onCl.call(_cancelBtn$props, e);
        }
      });
    }

    if (hideCancel) {
      return null;
    }

    return /* @__PURE__ */React.createElement(Button, {
      size: "small",
      theme: "default",
      variant: "base",
      onClick: function onClick(e) {
        onClose({
          e: e,
          trigger: "cancel"
        });
        onCancel({
          e: e
        });
      }
    }, isString_1(cancelBtn) && cancelBtn);
  }

  function renderConfirm() {
    if ( /*#__PURE__*/React.isValidElement(confirmBtn)) {
      return /*#__PURE__*/React.cloneElement(confirmBtn, {
        onClick: function onClick(e) {
          var _confirmBtn$props, _confirmBtn$props$onC;

          onClose({
            e: e,
            trigger: "confirm"
          });
          (_confirmBtn$props = confirmBtn.props) === null || _confirmBtn$props === void 0 ? void 0 : (_confirmBtn$props$onC = _confirmBtn$props.onClick) === null || _confirmBtn$props$onC === void 0 ? void 0 : _confirmBtn$props$onC.call(_confirmBtn$props, e);
        }
      });
    }

    if (hideConfirm) {
      return null;
    }

    return /* @__PURE__ */React.createElement(Button, {
      size: "small",
      theme: "primary",
      onClick: function onClick(e) {
        onClose({
          e: e,
          trigger: "confirm"
        });
        onConfirm({
          e: e
        });
      }
    }, isString_1(confirmBtn) && confirmBtn);
  }

  return /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-popconfirm__content")
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-popconfirm__body")
  }, renderIcon(), /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-popconfirm__inner")
  }, content)), /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-popconfirm__buttons")
  }, /* @__PURE__ */React.createElement("span", {
    className: classNames("".concat(classPrefix, "-popconfirm__cancel"))
  }, renderCancel()), /* @__PURE__ */React.createElement("span", {
    className: classNames("".concat(classPrefix, "-popconfirm__confirm"))
  }, renderConfirm())));
};

Popcontent.displayName = "Popcontent";

export { Popcontent as default };
//# sourceMappingURL=Popcontent.js.map
