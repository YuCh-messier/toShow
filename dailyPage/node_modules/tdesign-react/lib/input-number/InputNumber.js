/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-ebef14de.js';
import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { ChevronDownIcon, RemoveIcon, ChevronUpIcon, AddIcon } from 'tdesign-icons-react';
import classNames from 'classnames';
import { Input } from '../input/index.js';
import { Button } from '../button/index.js';
import useInputNumber from './useInputNumber.js';
import useGlobalIcon from '../hooks/useGlobalIcon.js';
import { inputNumberDefaultProps } from './defaultProps.js';
import '../input/Input.js';
import '../_chunks/dep-3627969a.js';
import '../_chunks/dep-fe234c83.js';
import '../_chunks/dep-2baf8638.js';
import '../_chunks/dep-24599104.js';
import '../_chunks/dep-00ad7a91.js';
import '../_chunks/dep-cf61d761.js';
import '../_chunks/dep-056b9d81.js';
import '../_util/useLayoutEffect.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-f3228585.js';
import '../_chunks/dep-c393cab2.js';
import '../_chunks/dep-090fa3b2.js';
import '../_util/easing.js';
import '../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../hooks/useConfig.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-98b209dd.js';
import '../_chunks/dep-1304d812.js';
import '../_chunks/dep-339b0951.js';
import '../_chunks/dep-ba4fa05d.js';
import '../_chunks/dep-86599c44.js';
import '../_chunks/dep-de91e914.js';
import '../_chunks/dep-f60756e1.js';
import '../_chunks/dep-a98a054e.js';
import '../_chunks/dep-7a725039.js';
import '../_chunks/dep-e48ce47b.js';
import '../_chunks/dep-d9495851.js';
import '../_chunks/dep-75ee7646.js';
import '../_chunks/dep-68ef3987.js';
import '../_chunks/dep-7237da98.js';
import '../_chunks/dep-d905b9e9.js';
import '../_chunks/dep-87e9108c.js';
import '../_chunks/dep-873eecd0.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../_common/js/utils/helper.js';
import '../_chunks/dep-88be14a4.js';
import '../input/InputGroup.js';
import '../hooks/useControlled.js';
import '../_chunks/dep-8f4dca99.js';
import '../_chunks/dep-65354ae3.js';
import '../_chunks/dep-4192679d.js';
import '../_chunks/dep-2998e451.js';
import '../_chunks/dep-893e0247.js';
import '../_util/noop.js';
import '../locale/LocalReceiver.js';
import '../input/defaultProps.js';
import '../button/Button.js';
import '../_util/useRipple.js';
import '../_util/useAnimation.js';
import '../_util/setStyle.js';
import '../loading/index.js';
import '../loading/Loading.js';
import '../common/Portal.js';
import 'react-dom';
import '../loading/gradient.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../loading/defaultProps.js';
import '../loading/plugin.js';
import '../button/defaultProps.js';
import '../_util/useCommonClassName.js';
import '../_common/js/input-number/number.js';
import '../_chunks/dep-04fa7e7c.js';
import '../_common/js/input-number/large-number.js';
import '../_common/js/log/log.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function TdInputNumber(props, ref) {
  var _useGlobalIcon = useGlobalIcon({
    ChevronDownIcon: ChevronDownIcon,
    RemoveIcon: RemoveIcon,
    ChevronUpIcon: ChevronUpIcon,
    AddIcon: AddIcon
  }),
      ChevronDownIcon$1 = _useGlobalIcon.ChevronDownIcon,
      RemoveIcon$1 = _useGlobalIcon.RemoveIcon,
      ChevronUpIcon$1 = _useGlobalIcon.ChevronUpIcon,
      AddIcon$1 = _useGlobalIcon.AddIcon;

  var _useInputNumber = useInputNumber(props),
      classPrefix = _useInputNumber.classPrefix,
      wrapClasses = _useInputNumber.wrapClasses,
      addClasses = _useInputNumber.addClasses,
      reduceClasses = _useInputNumber.reduceClasses,
      listeners = _useInputNumber.listeners,
      isError = _useInputNumber.isError,
      inputRef = _useInputNumber.inputRef,
      userInput = _useInputNumber.userInput,
      handleAdd = _useInputNumber.handleAdd,
      handleReduce = _useInputNumber.handleReduce,
      onInnerInputChange = _useInputNumber.onInnerInputChange;

  var wrapRef = useRef(null);
  var status = isError ? "error" : props.status;
  var addIcon = props.theme === "column" ? /* @__PURE__ */React.createElement(ChevronUpIcon$1, {
    size: props.size
  }) : /* @__PURE__ */React.createElement(AddIcon$1, {
    size: props.size
  });
  var reduceIcon = props.theme === "column" ? /* @__PURE__ */React.createElement(ChevronDownIcon$1, {
    size: props.size
  }) : /* @__PURE__ */React.createElement(RemoveIcon$1, {
    size: props.size
  });
  useImperativeHandle(ref, function () {
    return {
      currentElement: wrapRef.current,
      inputElement: inputRef.current
    };
  });
  return /* @__PURE__ */React.createElement("div", {
    className: classNames(wrapClasses, props.className),
    style: props.style,
    ref: wrapRef
  }, props.theme !== "normal" && /* @__PURE__ */React.createElement(Button, {
    className: reduceClasses,
    disabled: props.disabled,
    onClick: handleReduce,
    variant: "outline",
    shape: "square",
    icon: reduceIcon
  }), /* @__PURE__ */React.createElement(Input, _objectSpread(_objectSpread({
    ref: inputRef,
    autocomplete: "off",
    disabled: props.disabled,
    readonly: props.readonly,
    placeholder: props.placeholder,
    autoWidth: props.autoWidth,
    align: props.align || (props.theme === "row" ? "center" : void 0),
    status: status,
    label: props.label,
    suffix: props.suffix,
    value: userInput,
    onChange: onInnerInputChange,
    size: props.size
  }, listeners), props.inputProps || {})), props.theme !== "normal" && /* @__PURE__ */React.createElement(Button, {
    className: addClasses,
    disabled: props.disabled,
    onClick: handleAdd,
    variant: "outline",
    shape: "square",
    icon: addIcon
  }), props.tips && /* @__PURE__ */React.createElement("div", {
    className: classNames("".concat(classPrefix, "-input__tips"), "".concat(classPrefix, "-input__tips--").concat(status))
  }, props.tips));
}

var InputNumber = /*#__PURE__*/forwardRef(TdInputNumber);
InputNumber.displayName = "InputNumber";
InputNumber.defaultProps = inputNumberDefaultProps;

export { InputNumber as default };
//# sourceMappingURL=InputNumber.js.map
