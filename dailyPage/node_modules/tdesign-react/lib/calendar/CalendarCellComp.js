/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../_chunks/dep-2baf8638.js';
import React from 'react';
import useConfig from '../hooks/useConfig.js';
import usePrefixClass from './hooks/usePrefixClass.js';
import { useLocaleReceiver } from '../locale/LocalReceiver.js';
import { blockName } from './_util.js';
import '../_chunks/dep-24599104.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-ebef14de.js';
import '../_chunks/dep-98b209dd.js';
import '../_chunks/dep-1304d812.js';
import '../_chunks/dep-339b0951.js';
import '../_chunks/dep-ba4fa05d.js';
import '../_chunks/dep-00ad7a91.js';
import '../_chunks/dep-cf61d761.js';
import '../_chunks/dep-3627969a.js';
import '../_chunks/dep-056b9d81.js';
import '../_chunks/dep-86599c44.js';
import '../_chunks/dep-de91e914.js';
import '../_chunks/dep-f60756e1.js';
import '../_chunks/dep-090fa3b2.js';
import '../_chunks/dep-a98a054e.js';
import '../_chunks/dep-7a725039.js';
import '../_chunks/dep-e48ce47b.js';
import '../_chunks/dep-d9495851.js';
import '../_chunks/dep-c393cab2.js';
import '../_chunks/dep-75ee7646.js';
import '../_chunks/dep-68ef3987.js';
import '../_chunks/dep-7237da98.js';
import '../_chunks/dep-d905b9e9.js';
import '../_chunks/dep-87e9108c.js';
import '../_chunks/dep-873eecd0.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import 'dayjs';

var CalendarCellComp = function CalendarCellComp(props) {
  var mode = props.mode,
      cell = props.cell,
      cellAppend = props.cellAppend,
      theme = props.theme,
      _props$isDisabled = props.isDisabled,
      isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,
      cellData = props.cellData,
      isCurrent = props.isCurrent,
      isNow = props.isNow,
      fillWithZero = props.fillWithZero,
      createCalendarCell = props.createCalendarCell,
      onCellClick = props.onCellClick,
      onCellDoubleClick = props.onCellDoubleClick,
      onCellRightClick = props.onCellRightClick;

  var _useLocaleReceiver = useLocaleReceiver("calendar"),
      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
      local = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var monthLabelList = t(local.cellMonth).split(",");

  var getMonthCN = function getMonthCN(month) {
    return monthLabelList[month];
  };

  var _useConfig = useConfig(),
      calendarConfig = _useConfig.calendar;

  var fix0 = function fix0(num) {
    var _ref;

    var fillZero = num < 10 && ((_ref = fillWithZero !== null && fillWithZero !== void 0 ? fillWithZero : calendarConfig.fillWithZero) !== null && _ref !== void 0 ? _ref : true);
    return fillZero ? "0".concat(num) : num;
  };

  var prefixCls = usePrefixClass();
  return /* @__PURE__ */React.createElement("td", {
    className: prefixCls([blockName, "table-body-cell"], isDisabled ? "is-disabled" : null, isCurrent ? "is-checked" : null, isNow ? [blockName, "table-body-cell--now"] : null),
    onClick: onCellClick,
    onDoubleClick: onCellDoubleClick,
    onContextMenu: onCellRightClick
  }, function () {
    if (cell && typeof cell === "function") return cell(mode === "month" ? createCalendarCell(cellData) : cellData);
    if (cell && typeof cell !== "function") return cell;
    var cellCtx;

    if (mode === "year") {
      var mIndex = cellData.date.getMonth();
      cellCtx = theme === "full" ? getMonthCN(mIndex) : t(local.monthSelection, {
        month: "".concat(mIndex + 1)
      });
    } else {
      cellCtx = fix0(cellData.date.getDate());
    }

    return /* @__PURE__ */React.createElement("div", {
      className: prefixCls([blockName, "table-body-cell-display"])
    }, cellCtx);
  }(), function () {
    var cellCtx;

    if (cellAppend && typeof cellAppend === "function") {
      cellCtx = cellAppend(mode === "month" ? createCalendarCell(cellData) : cellData);
    }

    if (cellAppend && typeof cellAppend !== "function") {
      cellCtx = cellAppend;
    }

    return cellAppend && /* @__PURE__ */React.createElement("div", {
      className: prefixCls([blockName, "table-body-cell-content"])
    }, cellCtx);
  }());
};

export { CalendarCellComp as default };
//# sourceMappingURL=CalendarCellComp.js.map
