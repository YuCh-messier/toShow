{"version":3,"file":"xhr.js","sources":["../../../../src/_common/js/upload/xhr.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { UploadFile, XhrOptions } from './types';\nimport { getCurrentDate } from './utils';\n\nexport default function xhr({\n  method = 'POST',\n  action,\n  withCredentials = false,\n  headers = {},\n  data = {},\n  file,\n  files = [],\n  name = 'file',\n  useMockProgress = true,\n  formatRequest,\n  onError,\n  onProgress,\n  onSuccess,\n}: XhrOptions) {\n  // support files\n  const innerFiles: UploadFile[] = files || [];\n  let percent = 0;\n\n  // eslint-disable-next-line no-shadow\n  const xhr = new XMLHttpRequest();\n  if (withCredentials) {\n    xhr.withCredentials = true;\n  }\n\n  let timer1: NodeJS.Timeout;\n  let timer2: NodeJS.Timeout;\n  if (useMockProgress && files[0]?.status === 'progress') {\n    // 超过 500 毫秒再开启虚拟进度\n    const timer2 = setTimeout(() => {\n      // 只有真实进度一直不存在时才需要模拟进度\n      timer1 = setInterval(() => {\n        if (percent + 10 < 100) {\n          percent = Math.max(percent + 10, percent);\n          if (files[0] && percent !== files[0].percent) {\n            files[0].percent = percent;\n            onProgress({\n              percent,\n              file: file || innerFiles[0],\n              files: innerFiles.map((file) => ({ ...file, percent })),\n              type: 'mock',\n            });\n          }\n        } else {\n          clearInterval(timer1);\n        }\n      }, 300);\n      clearTimeout(timer2);\n    }, 300);\n  }\n\n  let requestData: { [key: string]: any } = {};\n  if (data) {\n    const extraData = typeof data === 'function' ? data(file) : data;\n    Object.assign(requestData, extraData);\n  }\n  innerFiles.forEach((file, index) => {\n    const fileField = innerFiles.length > 1 ? `${name}[${index}]` : name;\n    requestData[fileField] = file.raw;\n    requestData[name] = file.raw;\n  });\n\n  if (formatRequest) {\n    requestData = formatRequest(requestData);\n  }\n\n  // set send data\n  const formData = new FormData();\n  Object.keys(requestData).forEach((key) => {\n    formData.append(key, requestData[key]);\n  });\n\n  xhr.open(method, action, true);\n\n  // custom request headers\n  Object.keys(headers).forEach((key) => {\n    xhr.setRequestHeader(key, headers[key]);\n  });\n\n  xhr.onerror = (event: ProgressEvent) => {\n    onError({ event, file, files: innerFiles });\n    clearInterval(timer1);\n    clearTimeout(timer2);\n  };\n\n  if (xhr.upload) {\n    xhr.upload.onprogress = (event: ProgressEvent) => {\n      let realPercent = 0;\n      if (event.total > 0) {\n        realPercent = Math.round((event.loaded / event.total) * 100);\n      }\n      percent = Math.max(realPercent, percent);\n      if (percent !== realPercent && innerFiles[0]?.percent !== percent) {\n        const progressFiles = innerFiles.map((item) => ({ ...item, percent }));\n        onProgress({\n          event,\n          percent,\n          file: file || progressFiles[0],\n          files: progressFiles,\n          type: 'real',\n        });\n      }\n    };\n  }\n\n  // eslint-disable-next-line consistent-return\n  xhr.onload = (event: ProgressEvent) => {\n    let response: { [key: string]: any } = {};\n    const isFail = xhr.status < 200 || xhr.status >= 300;\n    if (isFail) {\n      return onError({\n        event, file, files: innerFiles, response\n      });\n    }\n    const text = xhr.responseText || xhr.response;\n    try {\n      response = JSON.parse(text);\n    } catch (e) {\n      response = text;\n    }\n    clearInterval(timer1);\n    clearTimeout(timer2);\n    innerFiles.forEach((file) => {\n      file.percent = 100;\n      file.status = 'success';\n      // 如果上传请求返回结果没有上传日期，则使用电脑当前日期显示\n      file.uploadTime = response?.uploadTime || getCurrentDate();\n    });\n    onSuccess({\n      event,\n      file: file || innerFiles[0],\n      files: [...innerFiles],\n      response,\n    });\n  };\n\n  xhr.send(formData);\n\n  return xhr;\n}\n"],"names":["xhr","method","action","withCredentials","headers","data","file","files","name","useMockProgress","formatRequest","onError","onProgress","onSuccess","innerFiles","percent","XMLHttpRequest","timer1","timer2","status","setTimeout","setInterval","Math","max","map","type","clearInterval","clearTimeout","requestData","extraData","Object","assign","forEach","index","fileField","length","raw","formData","FormData","keys","key","append","open","setRequestHeader","onerror","event","upload","onprogress","realPercent","total","round","loaded","progressFiles","item","onload","response","isFail","text","responseText","JSON","parse","e","uploadTime","getCurrentDate","send"],"mappings":";;;;;;;;;;;;;;;AAIA,SAAwBA,GAAxB,CAce,IAAA,EAAA;AAAA,EAAA,IAAA,OAAA,CAAA;;AAAA,EAAA,IAAA,WAAA,GAAA,IAAA,CAbbC,MAaa;MAbbA,MAaa,4BAbJ,MAaI,GAAA,WAAA;MAZbC,MAYa,QAZbA,MAYa;AAAA,MAAA,oBAAA,GAAA,IAAA,CAXbC,eAWa;MAXbA,eAWa,qCAXK,KAWL,GAAA,oBAAA;AAAA,MAAA,YAAA,GAAA,IAAA,CAVbC,OAUa;MAVbA,OAUa,6BAVH,EAUG,GAAA,YAAA;AAAA,MAAA,SAAA,GAAA,IAAA,CATbC,IASa;MATbA,IASa,0BATN,EASM,GAAA,SAAA;MARbC,IAQa,QARbA,IAQa;AAAA,MAAA,UAAA,GAAA,IAAA,CAPbC,KAOa;MAPbA,KAOa,2BAPL,EAOK,GAAA,UAAA;AAAA,MAAA,SAAA,GAAA,IAAA,CANbC,IAMa;MANbA,IAMa,0BANN,MAMM,GAAA,SAAA;AAAA,MAAA,oBAAA,GAAA,IAAA,CALbC,eAKa;MALbA,eAKa,qCALK,IAKL,GAAA,oBAAA;MAJbC,aAIa,QAJbA,aAIa;MAHbC,OAGa,QAHbA,OAGa;MAFbC,UAEa,QAFbA,UAEa;MADbC,SACa,QADbA,SACa,CAAA;AAEP,EAAA,IAAAC,UAAA,GAA2BP,SAAS,EAApC,CAAA;EACN,IAAIQ,OAAU,GAAA,CAAd,CAAA;AAGMf,EAAAA,IAAAA,IAAAA,GAAM,IAAIgB,cAAJ,EAANhB,CAAAA;;AACN,EAAA,IAAIG,eAAJ,EAAqB;IACnBH,KAAIG,eAAJH,GAAsB,IAAtBA,CAAAA;AACF,GAAA;;AAEI,EAAA,IAAAiB,MAAA,CAAA;AACA,EAAA,IAAAC,MAAA,CAAA;;EACJ,IAAIT,eAAmB,IAAA,CAAA,CAAA,OAAA,GAAAF,KAAA,CAAM,CAAN,CAAA,MAAUY,IAAAA,IAAAA,OAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAAA,CAAAA,MAAV,MAAqB,UAA5C,EAAwD;AAEhDD,IAAAA,IAAAA,OAAAA,GAASE,WAAW,YAAM;MAE9BH,MAAA,GAASI,YAAY,YAAM;AACrB,QAAA,IAAAN,OAAA,GAAU,EAAV,GAAe,GAAf,EAAoB;UACtBA,OAAA,GAAUO,IAAK,CAAAC,GAAL,CAASR,OAAU,GAAA,EAAnB,EAAuBA,OAAvB,CAAV,CAAA;;AACA,UAAA,IAAIR,KAAM,CAAA,CAAA,CAAN,IAAYQ,OAAY,KAAAR,KAAA,CAAM,CAAN,CAAA,CAASQ,OAArC,EAA8C;AAC5CR,YAAAA,KAAA,CAAM,CAAN,CAAA,CAASQ,OAAT,GAAmBA,OAAnB,CAAA;AACWH,YAAAA,UAAA,CAAA;AACTG,cAAAA,OAAA,EAAAA,OADS;AAETT,cAAAA,IAAA,EAAMA,QAAQQ,UAAW,CAAA,CAAA,CAFhB;AAGTP,cAAAA,KAAA,EAAOO,WAAWU,GAAX,CAAe,UAAClB,KAAD,EAAA;AAAA,gBAAA,OAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAgBA,KAAhB,CAAA,EAAA,EAAA,EAAA;AAAsBS,kBAAAA,OAAA,EAAAA,OAAAA;AAAtB,iBAAA,CAAA,CAAA;AAAA,eAAf,CAHE;AAITU,cAAAA,IAAM,EAAA,MAAA;AAJG,aAAA,CAAA,CAAA;AAMb,WAAA;AACK,SAXH,MAWG;UACLC,aAAA,CAAcT,MAAd,CAAA,CAAA;AACF,SAAA;SACC,IAfH,CAAA;MAgBAU,YAAA,CAAaT,OAAb,CAAA,CAAA;OACC,IAnBGA,CAAAA;AAoBR,GAAA;;EAEA,IAAIU,cAAsC,EAA1C,CAAA;;AACA,EAAA,IAAIvB,IAAJ,EAAU;AACR,IAAA,IAAMwB,YAAY,OAAOxB,IAAP,KAAgB,UAAhB,GAA6BA,IAAA,CAAKC,IAAL,CAA7B,GAA0CD,IAA5D,CAAA;AACOyB,IAAAA,MAAA,CAAAC,MAAA,CAAOH,WAAP,EAAoBC,SAApB,CAAA,CAAA;AACT,GAAA;;AACWf,EAAAA,UAAA,CAAAkB,OAAA,CAAQ,UAAC1B,KAAD,EAAO2B,KAAP,EAAiB;AAClC,IAAA,IAAMC,YAAYpB,UAAW,CAAAqB,MAAX,GAAoB,CAApB,GAAA,EAAA,CAAA,MAAA,CAA2B3B,IAA3B,EAAA,GAAA,CAAA,CAAA,MAAA,CAAmCyB,KAAnC,EAAA,GAAA,CAAA,GAA8CzB,IAAhE,CAAA;AACAoB,IAAAA,WAAA,CAAYM,SAAZ,CAAA,GAAyB5B,KAAK,CAAA8B,GAA9B,CAAA;AACAR,IAAAA,WAAA,CAAYpB,IAAZ,CAAA,GAAoBF,KAAK,CAAA8B,GAAzB,CAAA;GAHS,CAAA,CAAA;;AAMX,EAAA,IAAI1B,aAAJ,EAAmB;AACjBkB,IAAAA,WAAA,GAAclB,cAAckB,YAA5B,CAAA;AACF,GAAA;;AAGM,EAAA,IAAAS,QAAA,GAAW,IAAIC,QAAJ,EAAX,CAAA;EACNR,MAAA,CAAOS,IAAP,CAAYX,WAAZ,EAAyBI,OAAzB,CAAiC,UAACQ,GAAD,EAAS;IAC/BH,QAAA,CAAAI,MAAA,CAAOD,GAAP,EAAYZ,WAAA,CAAYY,GAAZ,CAAZ,CAAA,CAAA;GADX,CAAA,CAAA;AAIAxC,EAAAA,IAAI,CAAA0C,IAAJ1C,CAASC,MAATD,EAAiBE,MAAjBF,EAAyB,IAAzBA,CAAAA,CAAAA;EAGA8B,MAAA,CAAOS,IAAP,CAAYnC,OAAZ,EAAqB4B,OAArB,CAA6B,UAACQ,GAAD,EAAS;IACpCxC,IAAI,CAAA2C,gBAAJ3C,CAAqBwC,GAArBxC,EAA0BI,OAAA,CAAQoC,GAAR,CAA1BxC,CAAAA,CAAAA;GADF,CAAA,CAAA;;AAIAA,EAAAA,IAAAA,CAAI4C,OAAJ5C,GAAc,UAAC6C,KAAD,EAA0B;AACtClC,IAAAA,OAAA,CAAQ;AAAEkC,MAAAA,KAAA,EAAAA,KAAF;AAASvC,MAAAA,IAAM,EAANA,IAAT;AAAeC,MAAAA,KAAA,EAAOO,UAAAA;AAAtB,KAAR,CAAA,CAAA;IACAY,aAAA,CAAcT,MAAd,CAAA,CAAA;IACAU,YAAA,CAAaT,MAAb,CAAA,CAAA;GAHFlB,CAAAA;;EAMA,IAAIA,KAAI8C,MAAR,EAAgB;AACd9C,IAAAA,IAAI,CAAA8C,MAAJ9C,CAAW+C,UAAX/C,GAAwB,UAAC6C,KAAD,EAA0B;AAAA,MAAA,IAAA,YAAA,CAAA;;MAChD,IAAIG,WAAc,GAAA,CAAlB,CAAA;;AACI,MAAA,IAAAH,KAAA,CAAMI,KAAN,GAAc,CAAd,EAAiB;AACnBD,QAAAA,WAAA,GAAc1B,KAAK4B,KAAL,CAAYL,KAAA,CAAMM,MAAN,GAAeN,KAAA,CAAMI,KAArB,GAA8B,GAA1C,CAAd,CAAA;AACF,OAAA;;MACUlC,OAAA,GAAAO,IAAA,CAAKC,GAAL,CAASyB,WAAT,EAAsBjC,OAAtB,CAAA,CAAA;;AACV,MAAA,IAAIA,OAAY,KAAAiC,WAAZ,IAA2B,CAAAlC,CAAAA,YAAAA,GAAAA,UAAW,CAAA,CAAA,CAAX,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAA,CAAeC,OAAf,MAA2BA,OAA1D,EAAmE;AAC3D,QAAA,IAAAqC,aAAA,GAAgBtC,WAAWU,GAAX,CAAe,UAAC6B,IAAD,EAAA;AAAA,UAAA,OAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAgBA,IAAhB,CAAA,EAAA,EAAA,EAAA;AAAsBtC,YAAAA,OAAA,EAAAA,OAAAA;AAAtB,WAAA,CAAA,CAAA;AAAA,SAAf,CAAhB,CAAA;AACKH,QAAAA,UAAA,CAAA;AACTiC,UAAAA,KAAA,EAAAA,KADS;AAET9B,UAAAA,OAAA,EAAAA,OAFS;AAGTT,UAAAA,IAAA,EAAMA,QAAQ8C,aAAc,CAAA,CAAA,CAHnB;AAIT7C,UAAAA,KAAO,EAAA6C,aAJE;AAKT3B,UAAAA,IAAM,EAAA,MAAA;AALG,SAAA,CAAA,CAAA;AAOb,OAAA;KAfFzB,CAAAA;AAiBF,GAAA;;AAGAA,EAAAA,IAAAA,CAAIsD,MAAJtD,GAAa,UAAC6C,KAAD,EAA0B;IACrC,IAAIU,WAAmC,EAAvC,CAAA;AACA,IAAA,IAAMC,MAASxD,GAAAA,IAAAA,CAAImB,MAAJnB,GAAa,GAAbA,IAAoBA,KAAImB,MAAJnB,IAAc,GAAjD,CAAA;;AACA,IAAA,IAAIwD,MAAJ,EAAY;AACV,MAAA,OAAO7C,OAAQ,CAAA;AACbkC,QAAAA,KAAA,EAAAA,KADa;AACNvC,QAAAA,IAAA,EAAAA,IADM;AACAC,QAAAA,KAAO,EAAAO,UADP;AACmByC,QAAAA,QAAA,EAAAA,QAAAA;AADnB,OAAA,CAAf,CAAA;AAGF,KAAA;;IACM,IAAAE,IAAA,GAAOzD,IAAI,CAAA0D,YAAJ1D,IAAoBA,IAAI,CAAAuD,QAA/B,CAAA;;IACF,IAAA;AACSA,MAAAA,QAAA,GAAAI,IAAA,CAAKC,KAAL,CAAWH,IAAX,CAAA,CAAA;KADT,QAEKI,GAAP;AACWN,MAAAA,QAAA,GAAAE,IAAA,CAAA;AACb,KAAA;;IACA/B,aAAA,CAAcT,MAAd,CAAA,CAAA;IACAU,YAAA,CAAaT,MAAb,CAAA,CAAA;AACWJ,IAAAA,UAAA,CAAAkB,OAAA,CAAQ,UAAC1B,KAAD,EAAU;AAAA,MAAA,IAAA,SAAA,CAAA;;MAC3BA,MAAKS,OAALT,GAAe,GAAfA,CAAAA;MACAA,MAAKa,MAALb,GAAc,SAAdA,CAAAA;MAEAA,KAAK,CAAAwD,UAALxD,GAAkB,CAAAiD,CAAAA,SAAAA,GAAAA,QAAU,UAAV,IAAUO,SAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAAA,CAAAA,UAAV,KAAwBC,cAAe,EAAzDzD,CAAAA;KAJS,CAAA,CAAA;AAMDO,IAAAA,SAAA,CAAA;AACRgC,MAAAA,KAAA,EAAAA,KADQ;AAERvC,MAAAA,IAAA,EAAMA,QAAQQ,UAAW,CAAA,CAAA,CAFjB;MAGRP,KAAA,EAAA,kBAAA,CAAWO,UAAX,CAHQ;AAIRyC,MAAAA,QAAA,EAAAA,QAAAA;AAJQ,KAAA,CAAA,CAAA;GAtBZvD,CAAAA;;EA8BAA,IAAAA,CAAIgE,IAAJhE,CAASqC,QAATrC,CAAAA,CAAAA;AAEOA,EAAAA,OAAAA,IAAAA,CAAAA;AACT;;;;"}