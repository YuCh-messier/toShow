/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-ebef14de.js';
import React, { useRef, useEffect } from 'react';
import classNames from 'classnames';
import { CSSTransition } from 'react-transition-group';
import { useCollapseContext } from './CollapseContext.js';
import FakeArrow from '../common/FakeArrow.js';
import useConfig from '../hooks/useConfig.js';
import { collapsePanelDefaultProps } from './defaultProps.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-98b209dd.js';
import '../_chunks/dep-1304d812.js';
import '../_chunks/dep-339b0951.js';
import '../_chunks/dep-ba4fa05d.js';
import '../_chunks/dep-00ad7a91.js';
import '../_chunks/dep-cf61d761.js';
import '../_chunks/dep-3627969a.js';
import '../_chunks/dep-056b9d81.js';
import '../_chunks/dep-86599c44.js';
import '../_chunks/dep-de91e914.js';
import '../_chunks/dep-f60756e1.js';
import '../_chunks/dep-090fa3b2.js';
import '../_chunks/dep-a98a054e.js';
import '../_chunks/dep-7a725039.js';
import '../_chunks/dep-e48ce47b.js';
import '../_chunks/dep-d9495851.js';
import '../_chunks/dep-c393cab2.js';
import '../_chunks/dep-75ee7646.js';
import '../_chunks/dep-68ef3987.js';
import '../_chunks/dep-7237da98.js';
import '../_chunks/dep-d905b9e9.js';
import '../_chunks/dep-87e9108c.js';
import '../_chunks/dep-873eecd0.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var CollapsePanel = function CollapsePanel(props) {
  var value = props.value,
      disabled = props.disabled,
      destroyOnCollapse = props.destroyOnCollapse,
      expandIcon = props.expandIcon,
      className = props.className,
      style = props.style,
      header = props.header,
      headerRightContent = props.headerRightContent,
      children = props.children,
      index = props.index;

  var _useCollapseContext = useCollapseContext(),
      disableAll = _useCollapseContext.disabled,
      defaultExpandAll = _useCollapseContext.defaultExpandAll,
      expandIconPlacement = _useCollapseContext.expandIconPlacement,
      expandOnRowClick = _useCollapseContext.expandOnRowClick,
      expandIconAll = _useCollapseContext.expandIcon,
      updateCollapseValue = _useCollapseContext.updateCollapseValue,
      collapseValue = _useCollapseContext.collapseValue;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var componentName = "".concat(classPrefix, "-collapse-panel");
  var innerValue = value || index;
  var showExpandIcon = expandIcon === void 0 ? expandIconAll : expandIcon;
  var headRef = useRef();
  var contentRef = useRef();
  var bodyRef = useRef();
  var isDisabled = disabled || disableAll;
  useEffect(function () {
    if (defaultExpandAll) {
      updateCollapseValue(innerValue);
    }
  }, []);
  var isActive = Array.isArray(collapseValue) ? collapseValue.includes(innerValue) : collapseValue === innerValue;
  var classes = classNames(componentName, _defineProperty({}, "".concat(classPrefix, "-is-disabled"), isDisabled), className);

  var handleClick = function handleClick(e) {
    var canExpand = expandOnRowClick && e.target === headRef.current || ["svg", "path"].includes(e.target.tagName);

    if (canExpand && !isDisabled) {
      updateCollapseValue(innerValue);
    }
  };

  var renderIcon = function renderIcon(direction) {
    return /* @__PURE__ */React.createElement(FakeArrow, {
      style: {
        transform: isActive ? "rotate(180deg)" : "rotate(-90deg)"
      },
      isActive: isActive,
      overlayClassName: classNames("".concat(componentName, "__icon"), "".concat(componentName, "__icon--").concat(direction))
    });
  };

  var renderHeader = function renderHeader() {
    var cls = ["".concat(componentName, "__header"), _defineProperty({}, "".concat(classPrefix, "-is-clickable"), expandOnRowClick && !isDisabled)];
    return /* @__PURE__ */React.createElement("div", {
      ref: headRef,
      className: classNames(cls),
      onClick: handleClick
    }, showExpandIcon && expandIconPlacement === "left" ? renderIcon(expandIconPlacement) : null, header && header, /* @__PURE__ */React.createElement("div", {
      className: "".concat(componentName, "__header--blank")
    }), headerRightContent && headerRightContent, showExpandIcon && expandIconPlacement === "right" ? renderIcon(expandIconPlacement) : null);
  };

  var renderBody = function renderBody() {
    var transitionCallbacks = {
      onEnter: function onEnter() {
        bodyRef.current.style.height = "".concat(contentRef === null || contentRef === void 0 ? void 0 : contentRef.current.clientHeight, "px");
      },
      onEntered: function onEntered() {
        bodyRef.current.style.height = "auto";
      },
      onExit: function onExit() {
        bodyRef.current.style.height = "".concat(contentRef === null || contentRef === void 0 ? void 0 : contentRef.current.clientHeight, "px");
      },
      onExiting: function onExiting() {
        bodyRef.current.style.height = "0px";
      }
    };
    return /* @__PURE__ */React.createElement(CSSTransition, _objectSpread({
      "in": isActive,
      appear: true,
      timeout: 300,
      nodeRef: bodyRef,
      unmountOnExit: destroyOnCollapse
    }, transitionCallbacks), /* @__PURE__ */React.createElement("div", {
      style: {
        height: 0
      },
      className: classNames("".concat(componentName, "__body"), "".concat(classPrefix, "-slide-down-enter-active"), _defineProperty({}, "".concat(componentName, "__body--collapsed"), !isActive)),
      ref: bodyRef
    }, /* @__PURE__ */React.createElement("div", {
      className: "".concat(componentName, "__content"),
      ref: contentRef
    }, children)));
  };

  return /* @__PURE__ */React.createElement("div", {
    className: classes,
    style: _objectSpread({}, style)
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(componentName, "__wrapper")
  }, renderHeader(), renderBody()));
};

CollapsePanel.displayName = "CollapsePanel";
CollapsePanel.defaultProps = collapsePanelDefaultProps;

export { CollapsePanel as default };
//# sourceMappingURL=CollapsePanel.js.map
