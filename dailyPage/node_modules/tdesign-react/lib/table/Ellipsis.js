/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-ebef14de.js';
import { _ as _slicedToArray } from '../_chunks/dep-2baf8638.js';
import React, { useRef, useState } from 'react';
import classNames from 'classnames';
import { isNodeOverflow } from '../_util/dom.js';
import { Tooltip } from '../tooltip/index.js';
import useDebounce from '../hooks/useDebounce.js';
import '../_chunks/dep-24599104.js';
import 'raf';
import '../_chunks/dep-f3228585.js';
import '../_chunks/dep-cf61d761.js';
import '../_chunks/dep-3627969a.js';
import '../_chunks/dep-c393cab2.js';
import '../_chunks/dep-090fa3b2.js';
import '../_util/easing.js';
import '../tooltip/Tooltip.js';
import '../_chunks/dep-fe234c83.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../hooks/useControlled.js';
import '../_chunks/dep-8f4dca99.js';
import '../_chunks/dep-65354ae3.js';
import '../_chunks/dep-4192679d.js';
import '../_chunks/dep-2998e451.js';
import '../_chunks/dep-893e0247.js';
import '../_util/noop.js';
import '../_util/useAnimation.js';
import '../hooks/useConfig.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-98b209dd.js';
import '../_chunks/dep-1304d812.js';
import '../_chunks/dep-339b0951.js';
import '../_chunks/dep-ba4fa05d.js';
import '../_chunks/dep-00ad7a91.js';
import '../_chunks/dep-056b9d81.js';
import '../_chunks/dep-86599c44.js';
import '../_chunks/dep-de91e914.js';
import '../_chunks/dep-f60756e1.js';
import '../_chunks/dep-a98a054e.js';
import '../_chunks/dep-7a725039.js';
import '../_chunks/dep-e48ce47b.js';
import '../_chunks/dep-d9495851.js';
import '../_chunks/dep-75ee7646.js';
import '../_chunks/dep-68ef3987.js';
import '../_chunks/dep-7237da98.js';
import '../_chunks/dep-d905b9e9.js';
import '../_chunks/dep-87e9108c.js';
import '../_chunks/dep-873eecd0.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../common/Portal.js';
import 'react-dom';
import '../popup/hooks/useTrigger.js';
import 'react-is';
import '../popup/utils/ref.js';
import '../_util/composeRefs.js';
import '../popup/utils/transition.js';
import '../_util/useMutationObserver.js';
import '../_chunks/dep-1997a475.js';
import '../_chunks/dep-d502af5f.js';
import '../_util/useWindowSize.js';
import '../popup/defaultProps.js';
import '../tooltip/defaultProps.js';
import '../tooltip/TooltipLite.js';
import '../_util/useSwitch.js';
import '../_util/usePersistFn.js';
import '../_common/js/utils/getPosition.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function Ellipsis(props) {
  var classPrefix = props.classPrefix;
  var root = useRef();

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isOverflow = _useState2[0],
      setIsOverflow = _useState2[1];

  var ellipsisClasses = classNames(["".concat(classPrefix, "-table__ellipsis"), "".concat(classPrefix, "-text-ellipsis")]);
  var innerEllipsisClassName = ["".concat(classPrefix, "-table__ellipsis-content"), props.overlayClassName];

  var onTriggerMouseenter = function onTriggerMouseenter() {
    if (!root.current) return;
    setIsOverflow(isNodeOverflow(root.current));
  };

  var onTriggerMouseleave = function onTriggerMouseleave() {
    setIsOverflow(isNodeOverflow(root.current));
  };

  var onMouseAround = useDebounce(function (e) {
    e.type === "mouseleave" ? onTriggerMouseleave() : onTriggerMouseenter();
  }, 80);
  var cellNode = props.children || props.content;
  var ellipsisContent = /* @__PURE__ */React.createElement("div", {
    ref: root,
    className: ellipsisClasses,
    onMouseEnter: onMouseAround,
    onMouseLeave: onMouseAround
  }, cellNode);
  var content = null;
  var tooltipProps = props.tooltipProps;

  if (isOverflow) {
    var rProps = _objectSpread({
      content: props.popupContent || cellNode,
      destroyOnClose: true,
      zIndex: props.zIndex,
      attach: props.attach,
      placement: props.placement,
      overlayClassName: tooltipProps !== null && tooltipProps !== void 0 && tooltipProps.overlayClassName ? innerEllipsisClassName.concat(tooltipProps.overlayClassName) : innerEllipsisClassName
    }, props.tooltipProps || {});

    content = /* @__PURE__ */React.createElement(Tooltip, _objectSpread({}, rProps), ellipsisContent);
  } else {
    content = ellipsisContent;
  }

  return content;
}
Ellipsis.displayName = "Ellipsis";

export { Ellipsis as default };
//# sourceMappingURL=Ellipsis.js.map
