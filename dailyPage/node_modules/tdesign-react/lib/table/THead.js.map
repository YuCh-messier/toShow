{"version":3,"file":"THead.js","sources":["../../src/table/THead.tsx"],"sourcesContent":["import React, { useRef, MutableRefObject, CSSProperties, useMemo } from 'react';\nimport isFunction from 'lodash/isFunction';\nimport classNames from 'classnames';\nimport { getColumnFixedStyles } from './hooks/useFixed';\nimport { RowAndColFixedPosition } from './interface';\nimport { TableColumns, ThRowspanAndColspan } from './hooks/useMultiHeader';\nimport useClassName from './hooks/useClassName';\nimport { BaseTableCol, TableRowData } from './type';\nimport { renderTitle } from './hooks/useTableHeader';\nimport TEllipsis from './Ellipsis';\nimport { formatClassNames } from './utils';\n\nexport interface TheadProps {\n  classPrefix: string;\n  ellipsisOverlayClassName: string;\n  // 是否固定表头\n  isFixedHeader: boolean;\n  // 固定列 left/right 具体值\n  rowAndColFixedPosition: RowAndColFixedPosition;\n  // 虚拟滚动单独渲染表头；表头吸顶单独渲染表头\n  thWidthList?: { [colKey: string]: number };\n  bordered: boolean;\n  isMultipleHeader: boolean;\n  spansAndLeafNodes: {\n    rowspanAndColspanMap: ThRowspanAndColspan;\n    leafColumns: BaseTableCol<TableRowData>[];\n  };\n  thList: BaseTableCol<TableRowData>[][];\n  resizable?: boolean;\n  columnResizeParams?: {\n    resizeLineRef: MutableRefObject<HTMLDivElement>;\n    resizeLineStyle: CSSProperties;\n    onColumnMouseover: (e: MouseEvent, col: BaseTableCol<TableRowData>) => void;\n    onColumnMousedown: (e: MouseEvent, col: BaseTableCol<TableRowData>) => void;\n  };\n}\n\nexport default function THead(props: TheadProps) {\n  const { columnResizeParams, classPrefix } = props;\n  const theadRef = useRef<HTMLTableSectionElement>(null);\n  const classnames = useClassName();\n  const { tableHeaderClasses, tableBaseClass } = classnames;\n  const theadClasses = [\n    tableHeaderClasses.header,\n    {\n      [tableHeaderClasses.fixed]: props.isFixedHeader,\n      [tableBaseClass.bordered]: props.bordered && props.isMultipleHeader,\n      [tableHeaderClasses.multipleHeader]: props.isMultipleHeader,\n    },\n  ];\n\n  // 单行表格合并\n  const colspanSkipMap = useMemo(() => {\n    const map: { [key: string]: boolean } = {};\n    const list = props.thList[0];\n    for (let i = 0, len = list.length; i < len; i++) {\n      const item = list[i];\n      if (item.colspan > 1) {\n        for (let j = i + 1; j < i + item.colspan; j++) {\n          if (list[j]) {\n            map[list[j].colKey] = true;\n          }\n        }\n      }\n    }\n    return map;\n  }, [props.thList]);\n\n  const renderThNodeList = (rowAndColFixedPosition: RowAndColFixedPosition, thWidthList: TheadProps['thWidthList']) => {\n    // thBorderMap: rowspan 会影响 tr > th 是否为第一列表头，从而影响边框\n    const thBorderMap = new Map<any, boolean>();\n    const thRowspanAndColspan = props.spansAndLeafNodes.rowspanAndColspanMap;\n    return props.thList.map((row, rowIndex) => {\n      const thRow = row.map((col: TableColumns[0], index: number) => {\n        // 因合并单行表头，跳过\n        if (colspanSkipMap[col.colKey]) return null;\n        const rowspanAndColspan = thRowspanAndColspan.get(col);\n        if (index === 0 && rowspanAndColspan.rowspan > 1) {\n          for (let j = rowIndex + 1; j < rowIndex + rowspanAndColspan.rowspan; j++) {\n            thBorderMap.set(props.thList[j][0], true);\n          }\n        }\n        const thStyles = getColumnFixedStyles(col, index, rowAndColFixedPosition, classnames.tableColFixedClasses);\n        const colParams = {\n          col,\n          colIndex: index,\n          row: {},\n          rowIndex: -1,\n        };\n        const customClasses = formatClassNames(col.className, { ...colParams, type: 'th' });\n        const thClasses = [\n          thStyles.classes,\n          customClasses,\n          {\n            // 受 rowspan 影响，部分 tr > th:first-child 需要补足左边框\n            [tableHeaderClasses.thBordered]: thBorderMap.get(col),\n            [`${classPrefix}-table__th-${col.colKey}`]: col.colKey,\n            [classnames.tdAlignClasses[col.align]]: col.align && col.align !== 'left',\n          },\n        ];\n        const withoutChildren = !col.children?.length;\n        const width = withoutChildren && thWidthList?.[col.colKey] ? `${thWidthList?.[col.colKey]}px` : undefined;\n        const styles = { ...(thStyles.style || {}), width };\n        const innerTh = renderTitle(col, index);\n        if (!col.colKey) return null;\n        const resizeColumnListener = props.resizable\n          ? {\n              onMouseDown: (e) => columnResizeParams?.onColumnMousedown?.(e, col),\n              onMouseMove: (e) => columnResizeParams?.onColumnMouseover?.(e, col),\n            }\n          : {};\n        const content = isFunction(col.ellipsisTitle) ? col.ellipsisTitle({ col, colIndex: index }) : undefined;\n        const isEllipsis = col.ellipsisTitle !== undefined ? Boolean(col.ellipsisTitle) : Boolean(col.ellipsis);\n        const attrs = (isFunction(col.attrs) ? col.attrs({ ...colParams, type: 'th' }) : col.attrs) || {};\n        if (col.colspan > 1) {\n          attrs.colSpan = col.colspan;\n        }\n        return (\n          <th\n            key={col.colKey}\n            data-colkey={col.colKey}\n            className={classNames(thClasses)}\n            style={styles}\n            {...{ rowSpan: rowspanAndColspan.rowspan, colSpan: rowspanAndColspan.colspan }}\n            {...attrs}\n            {...resizeColumnListener}\n          >\n            <div className={tableBaseClass.thCellInner}>\n              {isEllipsis ? (\n                <TEllipsis\n                  placement=\"bottom\"\n                  attach={theadRef.current ? () => theadRef.current.parentNode.parentNode as HTMLElement : undefined}\n                  popupContent={content}\n                  tooltipProps={typeof col.ellipsisTitle === 'object' ? col.ellipsisTitle : undefined}\n                  overlayClassName={props.ellipsisOverlayClassName}\n                  classPrefix={props.classPrefix}\n                >\n                  {innerTh}\n                </TEllipsis>\n              ) : (\n                innerTh\n              )}\n            </div>\n          </th>\n        );\n      });\n      return <tr key={rowIndex}>{thRow}</tr>;\n    });\n  };\n\n  return (\n    <thead ref={theadRef} className={classNames(theadClasses)}>\n      {renderThNodeList(props.rowAndColFixedPosition, props.thWidthList)}\n    </thead>\n  );\n}\n"],"names":["THead","props","columnResizeParams","classPrefix","theadRef","useRef","classnames","useClassName","tableHeaderClasses","tableBaseClass","theadClasses","header","fixed","isFixedHeader","bordered","isMultipleHeader","multipleHeader","colspanSkipMap","useMemo","map","list","thList","i","len","length","item","colspan","j","colKey","renderThNodeList","rowAndColFixedPosition","thWidthList","thBorderMap","Map","thRowspanAndColspan","spansAndLeafNodes","rowspanAndColspanMap","row","rowIndex","thRow","col","index","rowspanAndColspan","get","rowspan","set","thStyles","getColumnFixedStyles","tableColFixedClasses","colParams","colIndex","customClasses","formatClassNames","className","type","thClasses","classes","thBordered","tdAlignClasses","align","withoutChildren","children","width","styles","style","innerTh","renderTitle","resizeColumnListener","resizable","onMouseDown","e","onColumnMousedown","onMouseMove","onColumnMouseover","content","isFunction","ellipsisTitle","isEllipsis","Boolean","ellipsis","attrs","colSpan","React","createElement","key","classNames","rowSpan","thCellInner","TEllipsis","placement","attach","current","parentNode","popupContent","tooltipProps","overlayClassName","ellipsisOverlayClassName","ref"],"mappings":"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"}