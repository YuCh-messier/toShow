/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _typeof } from '../../_chunks/dep-3627969a.js';
import { _ as _slicedToArray } from '../../_chunks/dep-2baf8638.js';
import { _ as _defineProperty } from '../../_chunks/dep-ebef14de.js';
import React, { useMemo } from 'react';
import { i as isFunction_1 } from '../../_chunks/dep-00ad7a91.js';
import classNames from 'classnames';
import { getThRowspanAndColspan, getThList } from './useMultiHeader.js';
import useClassName from './useClassName.js';
import Ellipsis from '../Ellipsis.js';
import '../../_chunks/dep-24599104.js';
import '../../_chunks/dep-cf61d761.js';
import '../../_chunks/dep-056b9d81.js';
import '../../hooks/useConfig.js';
import '../../config-provider/ConfigContext.js';
import '../../_chunks/dep-98b209dd.js';
import '../../_chunks/dep-1304d812.js';
import '../../_chunks/dep-339b0951.js';
import '../../_chunks/dep-ba4fa05d.js';
import '../../_chunks/dep-86599c44.js';
import '../../_chunks/dep-de91e914.js';
import '../../_chunks/dep-f60756e1.js';
import '../../_chunks/dep-090fa3b2.js';
import '../../_chunks/dep-a98a054e.js';
import '../../_chunks/dep-7a725039.js';
import '../../_chunks/dep-e48ce47b.js';
import '../../_chunks/dep-d9495851.js';
import '../../_chunks/dep-c393cab2.js';
import '../../_chunks/dep-75ee7646.js';
import '../../_chunks/dep-68ef3987.js';
import '../../_chunks/dep-7237da98.js';
import '../../_chunks/dep-d905b9e9.js';
import '../../_chunks/dep-87e9108c.js';
import '../../_chunks/dep-873eecd0.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../_common/js/global-config/default-config.js';
import '../../_util/dom.js';
import 'raf';
import '../../_chunks/dep-f3228585.js';
import '../../_util/easing.js';
import '../../tooltip/index.js';
import '../../tooltip/Tooltip.js';
import '../../_chunks/dep-fe234c83.js';
import '../../popup/index.js';
import '../../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../../hooks/useControlled.js';
import '../../_chunks/dep-8f4dca99.js';
import '../../_chunks/dep-65354ae3.js';
import '../../_chunks/dep-4192679d.js';
import '../../_chunks/dep-2998e451.js';
import '../../_chunks/dep-893e0247.js';
import '../../_util/noop.js';
import '../../_util/useAnimation.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../popup/hooks/useTrigger.js';
import 'react-is';
import '../../popup/utils/ref.js';
import '../../_util/composeRefs.js';
import '../../popup/utils/transition.js';
import '../../_util/useMutationObserver.js';
import '../../_chunks/dep-1997a475.js';
import '../../_chunks/dep-d502af5f.js';
import '../../_util/useWindowSize.js';
import '../../popup/defaultProps.js';
import '../../tooltip/defaultProps.js';
import '../../tooltip/TooltipLite.js';
import '../../_util/useSwitch.js';
import '../../_util/usePersistFn.js';
import '../../_common/js/utils/getPosition.js';
import '../../hooks/useDebounce.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function renderTitle(col, index) {
  var params = {
    col: col,
    colIndex: index
  };

  if (isFunction_1(col.title)) {
    return col.title(params);
  }

  if (isFunction_1(col.render)) {
    return col.render(_objectSpread(_objectSpread({}, params), {}, {
      row: {},
      rowIndex: -1,
      type: "title"
    }));
  }

  return col.title;
}
function useTableHeader(_ref) {
  var columns = _ref.columns;

  var _useClassName = useClassName(),
      tableSortClasses = _useClassName.tableSortClasses,
      tableFilterClasses = _useClassName.tableFilterClasses;

  var spansAndLeafNodes = useMemo(function () {
    return getThRowspanAndColspan(columns);
  }, [columns]);
  var thList = useMemo(function () {
    return getThList(columns);
  }, [columns]);
  var isMultipleHeader = useMemo(function () {
    return thList.length > 1;
  }, [thList]);

  var renderTitleWidthIcon = function renderTitleWidthIcon(_ref2, col, colIndex, ellipsisTitle, attach, extra) {
    var _classes;

    var _ref3 = _slicedToArray(_ref2, 3),
        title = _ref3[0],
        sortIcon = _ref3[1],
        filterIcon = _ref3[2];

    var classes = (_classes = {}, _defineProperty(_classes, tableSortClasses.sortable, !!sortIcon), _defineProperty(_classes, tableFilterClasses.filterable, !!filterIcon), _classes);
    var content = isFunction_1(ellipsisTitle) ? ellipsisTitle({
      col: col,
      colIndex: colIndex
    }) : void 0;
    var isEllipsis = ellipsisTitle !== void 0 ? Boolean(ellipsisTitle) : Boolean(col.ellipsis);
    return /* @__PURE__ */React.createElement("div", {
      className: classNames(classes)
    }, /* @__PURE__ */React.createElement("div", {
      className: tableSortClasses.title
    }, isEllipsis ? /* @__PURE__ */React.createElement(Ellipsis, {
      placement: "bottom",
      attach: attach ? function () {
        return attach;
      } : void 0,
      popupContent: content,
      tooltipProps: _typeof(ellipsisTitle) === "object" ? ellipsisTitle : void 0,
      classPrefix: extra === null || extra === void 0 ? void 0 : extra.classPrefix,
      overlayClassName: extra === null || extra === void 0 ? void 0 : extra.ellipsisOverlayClassName
    }, title) : /* @__PURE__ */React.createElement("div", null, title), Boolean(sortIcon || filterIcon) && /* @__PURE__ */React.createElement("div", {
      className: tableFilterClasses.iconWrap
    }, sortIcon, filterIcon)));
  };

  return {
    thList: thList,
    isMultipleHeader: isMultipleHeader,
    spansAndLeafNodes: spansAndLeafNodes,
    renderTitleWidthIcon: renderTitleWidthIcon
  };
}

export { useTableHeader as default, renderTitle };
//# sourceMappingURL=useTableHeader.js.map
