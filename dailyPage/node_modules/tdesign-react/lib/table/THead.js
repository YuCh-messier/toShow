/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _typeof } from '../_chunks/dep-3627969a.js';
import { _ as _defineProperty } from '../_chunks/dep-ebef14de.js';
import React, { useRef, useMemo } from 'react';
import { i as isFunction_1 } from '../_chunks/dep-00ad7a91.js';
import classNames from 'classnames';
import { getColumnFixedStyles } from './hooks/useFixed.js';
import useClassName from './hooks/useClassName.js';
import { renderTitle } from './hooks/useTableHeader.js';
import Ellipsis from './Ellipsis.js';
import { formatClassNames } from './utils.js';
import '../_chunks/dep-cf61d761.js';
import '../_chunks/dep-056b9d81.js';
import '../_chunks/dep-2baf8638.js';
import '../_chunks/dep-24599104.js';
import '../_chunks/dep-bca278f2.js';
import '../_chunks/dep-6a110e92.js';
import '../_chunks/dep-c393cab2.js';
import '../_chunks/dep-893e0247.js';
import '../_chunks/dep-090fa3b2.js';
import '../_chunks/dep-339b0951.js';
import '../_chunks/dep-ba4fa05d.js';
import '../_chunks/dep-86599c44.js';
import '../_chunks/dep-2998e451.js';
import '../_common/js/utils/helper.js';
import '../_chunks/dep-88be14a4.js';
import '../_chunks/dep-fe234c83.js';
import '../_common/js/log/log.js';
import '../_common/js/utils/getScrollbarWidth.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-f3228585.js';
import '../_util/easing.js';
import '../hooks/useDebounce.js';
import '../_chunks/dep-1997a475.js';
import '../_chunks/dep-d502af5f.js';
import '../_util/usePersistFn.js';
import '../hooks/useConfig.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-98b209dd.js';
import '../_chunks/dep-1304d812.js';
import '../_chunks/dep-de91e914.js';
import '../_chunks/dep-f60756e1.js';
import '../_chunks/dep-a98a054e.js';
import '../_chunks/dep-7a725039.js';
import '../_chunks/dep-e48ce47b.js';
import '../_chunks/dep-d9495851.js';
import '../_chunks/dep-75ee7646.js';
import '../_chunks/dep-68ef3987.js';
import '../_chunks/dep-7237da98.js';
import '../_chunks/dep-d905b9e9.js';
import '../_chunks/dep-87e9108c.js';
import '../_chunks/dep-873eecd0.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import './hooks/useMultiHeader.js';
import '../tooltip/index.js';
import '../tooltip/Tooltip.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../hooks/useControlled.js';
import '../_chunks/dep-8f4dca99.js';
import '../_chunks/dep-65354ae3.js';
import '../_chunks/dep-4192679d.js';
import '../_util/noop.js';
import '../_util/useAnimation.js';
import '../common/Portal.js';
import 'react-dom';
import '../popup/hooks/useTrigger.js';
import 'react-is';
import '../popup/utils/ref.js';
import '../_util/composeRefs.js';
import '../popup/utils/transition.js';
import '../_util/useMutationObserver.js';
import '../_util/useWindowSize.js';
import '../popup/defaultProps.js';
import '../tooltip/defaultProps.js';
import '../tooltip/TooltipLite.js';
import '../_util/useSwitch.js';
import '../_common/js/utils/getPosition.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function THead(props) {
  var _ref;

  var columnResizeParams = props.columnResizeParams,
      classPrefix = props.classPrefix;
  var theadRef = useRef(null);
  var classnames = useClassName();
  var tableHeaderClasses = classnames.tableHeaderClasses,
      tableBaseClass = classnames.tableBaseClass;
  var theadClasses = [tableHeaderClasses.header, (_ref = {}, _defineProperty(_ref, tableHeaderClasses.fixed, props.isFixedHeader), _defineProperty(_ref, tableBaseClass.bordered, props.bordered && props.isMultipleHeader), _defineProperty(_ref, tableHeaderClasses.multipleHeader, props.isMultipleHeader), _ref)];
  var colspanSkipMap = useMemo(function () {
    var map = {};
    var list = props.thList[0];

    for (var i = 0, len = list.length; i < len; i++) {
      var item = list[i];

      if (item.colspan > 1) {
        for (var j = i + 1; j < i + item.colspan; j++) {
          if (list[j]) {
            map[list[j].colKey] = true;
          }
        }
      }
    }

    return map;
  }, [props.thList]);

  var renderThNodeList = function renderThNodeList(rowAndColFixedPosition, thWidthList) {
    var thBorderMap = /* @__PURE__ */new Map();
    var thRowspanAndColspan = props.spansAndLeafNodes.rowspanAndColspanMap;
    return props.thList.map(function (row, rowIndex) {
      var thRow = row.map(function (col, index) {
        var _ref2, _col$children;

        if (colspanSkipMap[col.colKey]) return null;
        var rowspanAndColspan = thRowspanAndColspan.get(col);

        if (index === 0 && rowspanAndColspan.rowspan > 1) {
          for (var j = rowIndex + 1; j < rowIndex + rowspanAndColspan.rowspan; j++) {
            thBorderMap.set(props.thList[j][0], true);
          }
        }

        var thStyles = getColumnFixedStyles(col, index, rowAndColFixedPosition, classnames.tableColFixedClasses);
        var colParams = {
          col: col,
          colIndex: index,
          row: {},
          rowIndex: -1
        };
        var customClasses = formatClassNames(col.className, _objectSpread(_objectSpread({}, colParams), {}, {
          type: "th"
        }));
        var thClasses = [thStyles.classes, customClasses, (_ref2 = {}, _defineProperty(_ref2, tableHeaderClasses.thBordered, thBorderMap.get(col)), _defineProperty(_ref2, "".concat(classPrefix, "-table__th-").concat(col.colKey), col.colKey), _defineProperty(_ref2, classnames.tdAlignClasses[col.align], col.align && col.align !== "left"), _ref2)];
        var withoutChildren = !((_col$children = col.children) !== null && _col$children !== void 0 && _col$children.length);
        var width = withoutChildren && thWidthList !== null && thWidthList !== void 0 && thWidthList[col.colKey] ? "".concat(thWidthList === null || thWidthList === void 0 ? void 0 : thWidthList[col.colKey], "px") : void 0;

        var styles = _objectSpread(_objectSpread({}, thStyles.style || {}), {}, {
          width: width
        });

        var innerTh = renderTitle(col, index);
        if (!col.colKey) return null;
        var resizeColumnListener = props.resizable ? {
          onMouseDown: function onMouseDown(e) {
            var _columnResizeParams$o;

            return columnResizeParams === null || columnResizeParams === void 0 ? void 0 : (_columnResizeParams$o = columnResizeParams.onColumnMousedown) === null || _columnResizeParams$o === void 0 ? void 0 : _columnResizeParams$o.call(columnResizeParams, e, col);
          },
          onMouseMove: function onMouseMove(e) {
            var _columnResizeParams$o2;

            return columnResizeParams === null || columnResizeParams === void 0 ? void 0 : (_columnResizeParams$o2 = columnResizeParams.onColumnMouseover) === null || _columnResizeParams$o2 === void 0 ? void 0 : _columnResizeParams$o2.call(columnResizeParams, e, col);
          }
        } : {};
        var content = isFunction_1(col.ellipsisTitle) ? col.ellipsisTitle({
          col: col,
          colIndex: index
        }) : void 0;
        var isEllipsis = col.ellipsisTitle !== void 0 ? Boolean(col.ellipsisTitle) : Boolean(col.ellipsis);
        var attrs = (isFunction_1(col.attrs) ? col.attrs(_objectSpread(_objectSpread({}, colParams), {}, {
          type: "th"
        })) : col.attrs) || {};

        if (col.colspan > 1) {
          attrs.colSpan = col.colspan;
        }

        return /* @__PURE__ */React.createElement("th", _objectSpread(_objectSpread(_objectSpread({
          key: col.colKey,
          "data-colkey": col.colKey,
          className: classNames(thClasses),
          style: styles
        }, {
          rowSpan: rowspanAndColspan.rowspan,
          colSpan: rowspanAndColspan.colspan
        }), attrs), resizeColumnListener), /* @__PURE__ */React.createElement("div", {
          className: tableBaseClass.thCellInner
        }, isEllipsis ? /* @__PURE__ */React.createElement(Ellipsis, {
          placement: "bottom",
          attach: theadRef.current ? function () {
            return theadRef.current.parentNode.parentNode;
          } : void 0,
          popupContent: content,
          tooltipProps: _typeof(col.ellipsisTitle) === "object" ? col.ellipsisTitle : void 0,
          overlayClassName: props.ellipsisOverlayClassName,
          classPrefix: props.classPrefix
        }, innerTh) : innerTh));
      });
      return /* @__PURE__ */React.createElement("tr", {
        key: rowIndex
      }, thRow);
    });
  };

  return /* @__PURE__ */React.createElement("thead", {
    ref: theadRef,
    className: classNames(theadClasses)
  }, renderThNodeList(props.rowAndColFixedPosition, props.thWidthList));
}

export { THead as default };
//# sourceMappingURL=THead.js.map
