/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _toConsumableArray } from '../../_chunks/dep-88be14a4.js';
import { _ as _slicedToArray } from '../../_chunks/dep-2baf8638.js';
import React, { useRef, useCallback, useState, useMemo, useEffect } from 'react';
import { useLocaleReceiver } from '../../locale/LocalReceiver.js';
import useConfig from '../../hooks/useConfig.js';
import { Select } from '../../select/index.js';
import { Jumper } from '../../jumper/index.js';
import '../../_chunks/dep-24599104.js';
import '../../_chunks/dep-ebef14de.js';
import '../../config-provider/index.js';
import '../../config-provider/ConfigProvider.js';
import '../../_chunks/dep-a407cb09.js';
import '../../_chunks/dep-588efa4a.js';
import '../../_chunks/dep-dd4cd0af.js';
import '../../_chunks/dep-f162740d.js';
import '../../_chunks/dep-22eee49a.js';
import '../../_chunks/dep-f2b0265c.js';
import '../../_chunks/dep-91563b2d.js';
import '../../_chunks/dep-3627969a.js';
import '../../_chunks/dep-e10ccd97.js';
import '../../_chunks/dep-6f568a94.js';
import '../../_chunks/dep-646bb331.js';
import '../../_chunks/dep-1f71931a.js';
import '../../_chunks/dep-3b5c7604.js';
import '../../_chunks/dep-51566efd.js';
import '../../_chunks/dep-c6a2f197.js';
import '../../_chunks/dep-a6b91546.js';
import '../../_chunks/dep-5fef4495.js';
import '../../_chunks/dep-a97b932f.js';
import '../../_chunks/dep-9e2d72a2.js';
import '../../_chunks/dep-342e02ed.js';
import '../../_chunks/dep-a89633b7.js';
import '../../_chunks/dep-a91fe24d.js';
import '../../_chunks/dep-27e7ca24.js';
import '../../_chunks/dep-f40ed698.js';
import '../../_chunks/dep-ab50f53f.js';
import '../../_chunks/dep-9703c0d5.js';
import '../../config-provider/ConfigContext.js';
import '../../locale/zh_CN.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../_common/js/global-config/default-config.js';
import '../../select/base/Select.js';
import '../../_chunks/dep-fe234c83.js';
import 'classnames';
import '../../_chunks/dep-eaafd9b2.js';
import '../../_chunks/dep-41762eda.js';
import '../../_chunks/dep-1a0fcc8a.js';
import '../../_chunks/dep-8e8d0d95.js';
import '../../hooks/useControlled.js';
import '../../_chunks/dep-6f296cb1.js';
import '../../_chunks/dep-8b68327e.js';
import '../../_chunks/dep-094f627b.js';
import '../../_util/noop.js';
import '../../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../../select/util/helper.js';
import '../../select/base/OptionGroup.js';
import '../../select/defaultProps.js';
import '../../select/base/Option.js';
import '../../_chunks/dep-4c44a6fb.js';
import '../../_chunks/dep-2968ca73.js';
import '../../_util/useRipple.js';
import '../../_util/useAnimation.js';
import '../../_util/setStyle.js';
import '../../_util/dom.js';
import 'raf';
import '../../_util/easing.js';
import '../../common/FakeArrow.js';
import '../../loading/index.js';
import '../../loading/Loading.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../loading/gradient.js';
import '../../_common/js/loading/circle-adapter.js';
import '../../_common/js/utils/set-style.js';
import '../../_common/js/utils/helper.js';
import '../../loading/defaultProps.js';
import '../../loading/plugin.js';
import '../../loading/style/css.js';
import '../../loading/type.js';
import '../../select-input/index.js';
import '../../select-input/SelectInput.js';
import '../../popup/index.js';
import '../../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../../popup/hooks/useTrigger.js';
import 'react-is';
import '../../popup/utils/ref.js';
import '../../_util/composeRefs.js';
import '../../popup/utils/transition.js';
import '../../_util/useMutationObserver.js';
import '../../_chunks/dep-622322f2.js';
import '../../_chunks/dep-abf310d4.js';
import '../../_util/useWindowSize.js';
import '../../popup/defaultProps.js';
import '../../popup/style/css.js';
import '../../popup/type.js';
import '../../select-input/useSingle.js';
import '../../_chunks/dep-17055df6.js';
import '../../_chunks/dep-81e269a3.js';
import '../../_chunks/dep-80d1a65c.js';
import '../../_chunks/dep-9a198ec7.js';
import '../../input/index.js';
import '../../input/Input.js';
import 'tdesign-icons-react';
import '../../_util/useLayoutEffect.js';
import '../../hooks/useGlobalIcon.js';
import '../../input/InputGroup.js';
import '../../input/defaultProps.js';
import '../../input/style/css.js';
import '../../input/type.js';
import '../../select-input/useMultiple.js';
import '../../tag-input/index.js';
import '../../tag-input/TagInput.js';
import '../../_util/useDragSorter.js';
import '../../tag-input/useTagScroll.js';
import '../../tag-input/useTagList.js';
import '../../tag/index.js';
import '../../tag/Tag.js';
import '../../tag/CheckTag.js';
import '../../tag/defaultProps.js';
import '../../tag/style/css.js';
import '../../tag/type.js';
import '../../tag-input/useHover.js';
import '../../tag-input/defaultProps.js';
import '../../tag-input/style/css.js';
import '../../tag-input/type.js';
import '../../select-input/useOverlayInnerStyle.js';
import '../../select-input/defaultProps.js';
import '../../select-input/style/css.js';
import '../../select-input/type.js';
import '../../select/base/PopupContent.js';
import '../../select/style/css.js';
import '../../select/type.js';
import '../../jumper/Jumper.js';
import '../../button/index.js';
import '../../button/Button.js';
import '../../button/defaultProps.js';
import '../../button/style/css.js';
import '../../button/type.js';
import '../../jumper/defaultProps.js';
import '../../jumper/style/css.js';
import '../../jumper/type.js';

var useDatePickerLocalConfig = function useDatePickerLocalConfig() {
  var _useLocaleReceiver = useLocaleReceiver("datePicker"),
      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
      local = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  return {
    months: t(local.months),
    nextYear: t(local.nextYear),
    preYear: t(local.preYear),
    nextMonth: t(local.nextMonth),
    preMonth: t(local.preMonth),
    preDecade: t(local.preDecade),
    nextDecade: t(local.nextDecade),
    now: t(local.now)
  };
};

var DatePickerHeader = function DatePickerHeader(props) {
  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var mode = props.mode,
      year = props.year,
      month = props.month,
      onMonthChange = props.onMonthChange,
      onYearChange = props.onYearChange,
      onJumperClick = props.onJumperClick;

  var _useDatePickerLocalCo = useDatePickerLocalConfig(),
      now = _useDatePickerLocalCo.now,
      months = _useDatePickerLocalCo.months,
      preMonth = _useDatePickerLocalCo.preMonth,
      preYear = _useDatePickerLocalCo.preYear,
      nextMonth = _useDatePickerLocalCo.nextMonth,
      nextYear = _useDatePickerLocalCo.nextYear,
      preDecade = _useDatePickerLocalCo.preDecade,
      nextDecade = _useDatePickerLocalCo.nextDecade;

  var scrollAnchorRef = useRef("default");
  var monthOptions = months.map(function (item, index) {
    return {
      label: item,
      value: index
    };
  });
  var initOptions = useCallback(function (year2) {
    var options = [];

    if (mode === "year") {
      var extraYear = year2 % 10;
      var minYear = year2 - extraYear - 100;
      var maxYear = year2 - extraYear + 100;

      for (var i = minYear; i <= maxYear; i += 10) {
        options.push({
          label: "".concat(i, " - ").concat(i + 9),
          value: i + extraYear
        });
      }
    } else {
      options.push({
        label: "".concat(year2),
        value: year2
      });

      for (var _i = 1; _i <= 10; _i++) {
        options.push({
          label: "".concat(year2 + _i),
          value: year2 + _i
        });
        options.unshift({
          label: "".concat(year2 - _i),
          value: year2 - _i
        });
      }
    }

    return options;
  }, [mode]);

  var _useState = useState(initOptions(year)),
      _useState2 = _slicedToArray(_useState, 2),
      yearOptions = _useState2[0],
      setYearOptions = _useState2[1];

  var nearestYear = useMemo(function () {
    var _yearOptions$find;

    return ((_yearOptions$find = yearOptions.find(function (option) {
      return option.value - year <= 9 && option.value - year >= 0;
    })) === null || _yearOptions$find === void 0 ? void 0 : _yearOptions$find.value) || year;
  }, [yearOptions, year]);
  useEffect(function () {
    var yearRange = initOptions(year);
    setYearOptions(yearRange);
  }, [initOptions, year]);

  function loadMoreYear(year2, type) {
    var options = [];

    if (mode === "year") {
      var extraYear = year2 % 10;

      if (type === "add") {
        for (var i = year2 - extraYear + 10; i <= year2 - extraYear + 50; i += 10) {
          options.push({
            label: "".concat(i, " - ").concat(i + 9),
            value: i
          });
        }
      } else {
        for (var _i2 = year2 - extraYear - 1; _i2 > year2 - extraYear - 50; _i2 -= 10) {
          options.unshift({
            label: "".concat(_i2 - 9, " - ").concat(_i2),
            value: _i2
          });
        }
      }
    } else if (type === "add") {
      for (var _i3 = year2 + 1; _i3 <= year2 + 10; _i3++) {
        options.push({
          label: "".concat(_i3),
          value: _i3
        });
      }
    } else {
      for (var _i4 = year2 - 1; _i4 > year2 - 10; _i4--) {
        options.unshift({
          label: "".concat(_i4),
          value: _i4
        });
      }
    }

    return options;
  }

  var labelMap = {
    year: {
      prev: preDecade,
      current: now,
      next: nextDecade
    },
    month: {
      prev: preYear,
      current: now,
      next: nextYear
    },
    date: {
      prev: preMonth,
      current: now,
      next: nextMonth
    }
  };
  var headerClassName = "".concat(classPrefix, "-date-picker__header");
  var showMonthPicker = mode === "date" || mode === "week";

  function handlePanelTopClick(e) {
    var _e$stopPropagation, _e$nativeEvent, _e$nativeEvent$stopIm;

    e === null || e === void 0 ? void 0 : (_e$stopPropagation = e.stopPropagation) === null || _e$stopPropagation === void 0 ? void 0 : _e$stopPropagation.call(e);
    e === null || e === void 0 ? void 0 : (_e$nativeEvent = e.nativeEvent) === null || _e$nativeEvent === void 0 ? void 0 : (_e$nativeEvent$stopIm = _e$nativeEvent.stopImmediatePropagation) === null || _e$nativeEvent$stopIm === void 0 ? void 0 : _e$nativeEvent$stopIm.call(_e$nativeEvent);
    var firstYear = yearOptions[0].value;
    var options = loadMoreYear(firstYear, "reduce");
    setYearOptions([].concat(_toConsumableArray(options), _toConsumableArray(yearOptions)));
  }

  function handlePanelBottomClick(e) {
    var _e$stopPropagation2, _e$nativeEvent2;

    e === null || e === void 0 ? void 0 : (_e$stopPropagation2 = e.stopPropagation) === null || _e$stopPropagation2 === void 0 ? void 0 : _e$stopPropagation2.call(e);
    e === null || e === void 0 ? void 0 : (_e$nativeEvent2 = e.nativeEvent) === null || _e$nativeEvent2 === void 0 ? void 0 : _e$nativeEvent2.stopImmediatePropagation();
    var lastYear = yearOptions.slice(-1)[0].value;
    var options = loadMoreYear(lastYear, "add");
    setYearOptions([].concat(_toConsumableArray(yearOptions), _toConsumableArray(options)));
  }

  function handleScroll(_ref) {
    var e = _ref.e;

    if (e.target.scrollTop === 0) {
      handlePanelTopClick();
      scrollAnchorRef.current = "top";
    } else if (e.target.scrollTop === e.target.scrollHeight - e.target.clientHeight) {
      handlePanelBottomClick();
      scrollAnchorRef.current = "bottom";
    }
  }

  function handleUpdateScrollTop(content) {
    if (scrollAnchorRef.current === "top") {
      content.scrollTop = 30 * 10;
    } else if (scrollAnchorRef.current === "bottom") {
      content.scrollTop = content.scrollHeight - 30 * 10;
    } else {
      var firstSelectedNode = content.querySelector(".".concat(classPrefix, "-is-selected"));

      if (firstSelectedNode) {
        var _getComputedStyle = getComputedStyle(firstSelectedNode),
            paddingBottom = _getComputedStyle.paddingBottom;

        var _getComputedStyle2 = getComputedStyle(content),
            marginBottom = _getComputedStyle2.marginBottom;

        var elementBottomHeight = parseInt(paddingBottom, 10) + parseInt(marginBottom, 10);
        var updateValue = firstSelectedNode.offsetTop - content.offsetTop - (content.clientHeight - firstSelectedNode.clientHeight) + elementBottomHeight;
        content.scrollTop = updateValue;
      }
    }
  }

  return /* @__PURE__ */React.createElement("div", {
    className: headerClassName
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(headerClassName, "-controller")
  }, showMonthPicker && /* @__PURE__ */React.createElement(Select, {
    className: "".concat(headerClassName, "-controller-month"),
    value: month,
    options: monthOptions,
    onChange: function onChange(val) {
      return onMonthChange(val);
    },
    popupProps: {
      attach: function attach(triggerElement) {
        return triggerElement.parentNode;
      },
      overlayClassName: "".concat(headerClassName, "-controller-month-popup")
    }
  }), /* @__PURE__ */React.createElement(Select, {
    className: "".concat(headerClassName, "-controller-year"),
    value: mode === "year" ? nearestYear : year,
    options: yearOptions,
    onChange: function onChange(val) {
      return onYearChange(val);
    },
    onPopupVisibleChange: function onPopupVisibleChange(visible) {
      if (!visible) scrollAnchorRef.current = "default";
    },
    popupProps: {
      onScroll: handleScroll,
      updateScrollTop: handleUpdateScrollTop,
      attach: function attach(triggerElement) {
        return triggerElement.parentNode;
      },
      overlayClassName: "".concat(headerClassName, "-controller-year-popup")
    },
    panelTopContent: /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-select-option"),
      onClick: handlePanelTopClick
    }, "..."),
    panelBottomContent: /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-select-option"),
      onClick: handlePanelBottomClick
    }, "...")
  })), /* @__PURE__ */React.createElement(Jumper, {
    tips: labelMap[mode],
    size: "small",
    onChange: onJumperClick
  }));
};

DatePickerHeader.displayName = "DatePickerHeader";

export { DatePickerHeader as default };
//# sourceMappingURL=Header.js.map
