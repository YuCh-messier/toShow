/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../../_chunks/dep-2baf8638.js';
import { useState, useMemo, useRef, useEffect } from 'react';
import { g as get_1 } from '../../_chunks/dep-eaafd9b2.js';
import { HOOK_MARK } from './useForm.js';
import '../../_chunks/dep-24599104.js';
import '../../_chunks/dep-a407cb09.js';
import '../../_chunks/dep-41762eda.js';
import '../../_chunks/dep-342e02ed.js';
import '../../_chunks/dep-3627969a.js';
import '../../_chunks/dep-1a0fcc8a.js';
import '../../_chunks/dep-91563b2d.js';
import '../../_chunks/dep-c6a2f197.js';
import '../../_chunks/dep-f162740d.js';
import '../../_chunks/dep-22eee49a.js';
import '../../_chunks/dep-f2b0265c.js';
import '../../_chunks/dep-e10ccd97.js';
import '../../_chunks/dep-6f568a94.js';
import '../../_chunks/dep-646bb331.js';
import '../../_chunks/dep-1f71931a.js';
import '../../_chunks/dep-8e8d0d95.js';
import '../../_chunks/dep-a58d2703.js';
import '../../_chunks/dep-ebef14de.js';
import '../../_common/js/log/index.js';
import '../../_common/js/log/log.js';

function useWatch(name, form) {
  var _useState = useState(),
      _useState2 = _slicedToArray(_useState, 2),
      value = _useState2[0],
      setValue = _useState2[1];

  var valueStr = useMemo(function () {
    return JSON.stringify(value);
  }, [value]);
  var valueStrRef = useRef(valueStr);
  var isValidForm = form && form._init;
  useEffect(function () {
    if (!isValidForm) return;
    var getFieldsValue = form.getFieldsValue,
        getInternalHooks = form.getInternalHooks;

    var _getInternalHooks = getInternalHooks(HOOK_MARK),
        registerWatch = _getInternalHooks.registerWatch;

    var cancelRegister = registerWatch(function () {
      var allFieldsValue2 = getFieldsValue(true);
      var newValue = get_1(allFieldsValue2, name);
      var nextValueStr = JSON.stringify(newValue);

      if (valueStrRef.current !== nextValueStr) {
        valueStrRef.current = nextValueStr;
        setValue(newValue);
      }
    });
    var allFieldsValue = getFieldsValue(true);
    var initialValue = get_1(allFieldsValue, name);
    setValue(initialValue);
    return cancelRegister;
  }, []);
  return value;
}

export { useWatch as default };
//# sourceMappingURL=useWatch.js.map
