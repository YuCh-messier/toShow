/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-ebef14de.js';
import { _ as _slicedToArray } from '../../_chunks/dep-2baf8638.js';
import React, { useMemo } from 'react';
import classNames from 'classnames';
import Item from './Item.js';
import useConfig from '../../hooks/useConfig.js';
import { useLocaleReceiver } from '../../locale/LocalReceiver.js';
import { getPanels } from '../core/helper.js';
import { expendClickEffect, valueChangeEffect } from '../core/effect.js';
import '../../_chunks/dep-24599104.js';
import 'tdesign-icons-react';
import '../../loading/index.js';
import '../../loading/Loading.js';
import '../../_util/dom.js';
import 'raf';
import '../../_chunks/dep-2968ca73.js';
import '../../_chunks/dep-a407cb09.js';
import '../../_chunks/dep-91563b2d.js';
import '../../_chunks/dep-3627969a.js';
import '../../_chunks/dep-342e02ed.js';
import '../../_chunks/dep-c6a2f197.js';
import '../../_util/easing.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../config-provider/ConfigContext.js';
import '../../_chunks/dep-588efa4a.js';
import '../../_chunks/dep-dd4cd0af.js';
import '../../_chunks/dep-f162740d.js';
import '../../_chunks/dep-22eee49a.js';
import '../../_chunks/dep-f2b0265c.js';
import '../../_chunks/dep-e10ccd97.js';
import '../../_chunks/dep-6f568a94.js';
import '../../_chunks/dep-646bb331.js';
import '../../_chunks/dep-1f71931a.js';
import '../../_chunks/dep-3b5c7604.js';
import '../../_chunks/dep-51566efd.js';
import '../../_chunks/dep-a6b91546.js';
import '../../_chunks/dep-5fef4495.js';
import '../../_chunks/dep-a97b932f.js';
import '../../_chunks/dep-9e2d72a2.js';
import '../../_chunks/dep-a89633b7.js';
import '../../_chunks/dep-a91fe24d.js';
import '../../_chunks/dep-27e7ca24.js';
import '../../_chunks/dep-f40ed698.js';
import '../../_chunks/dep-ab50f53f.js';
import '../../_chunks/dep-9703c0d5.js';
import '../../locale/zh_CN.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../_common/js/global-config/default-config.js';
import '../../loading/gradient.js';
import '../../_common/js/loading/circle-adapter.js';
import '../../_common/js/utils/set-style.js';
import '../../_common/js/utils/helper.js';
import '../../_chunks/dep-88be14a4.js';
import '../../_chunks/dep-fe234c83.js';
import '../../loading/defaultProps.js';
import '../../loading/plugin.js';
import '../../loading/style/css.js';
import '../../loading/type.js';
import '../../_chunks/dep-fc333960.js';
import '../../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../../common/Check.js';
import '../../_util/helper.js';
import '../../_chunks/dep-8537a9ca.js';
import '../../_chunks/dep-8e8d0d95.js';
import '../../_chunks/dep-1a0fcc8a.js';
import '../../_chunks/dep-6f296cb1.js';
import '../../_chunks/dep-8b68327e.js';
import '../../_chunks/dep-094f627b.js';
import '../../_chunks/dep-c4ea35cf.js';
import '../../hooks/useControlled.js';
import '../../_util/noop.js';
import '../../_chunks/dep-4c44a6fb.js';
import '../../checkbox/defaultProps.js';
import '../../hooks/useGlobalIcon.js';
import '../../_util/useCommonClassName.js';
import '../../_util/useRipple.js';
import '../../_util/useAnimation.js';
import '../../_util/setStyle.js';
import '../core/className.js';
import '../../config-provider/index.js';
import '../../config-provider/ConfigProvider.js';
import '../../_chunks/dep-2ac1b781.js';
import '../../_chunks/dep-ba50895d.js';
import '../../_chunks/dep-d8c173c9.js';
import '../../_chunks/dep-08858747.js';
import '../../_chunks/dep-9a198ec7.js';

var Panel = function Panel(props) {
  var cascaderContext = props.cascaderContext;
  var panels = useMemo(function () {
    return getPanels(cascaderContext.treeNodes);
  }, [cascaderContext.treeNodes]);

  var handleExpand = function handleExpand(node, trigger) {
    var propsTrigger = props.trigger,
        cascaderContext2 = props.cascaderContext;
    expendClickEffect(propsTrigger, trigger, node, cascaderContext2);
  };

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useLocaleReceiver = useLocaleReceiver("cascader"),
      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 1),
      global = _useLocaleReceiver2[0];

  var COMPONENT_NAME = "".concat(classPrefix, "-cascader");

  var renderItem = function renderItem(node, index) {
    return /* @__PURE__ */React.createElement(Item, {
      key: index,
      node: node,
      cascaderContext: cascaderContext,
      onClick: function onClick() {
        handleExpand(node, "click");
      },
      onMouseEnter: function onMouseEnter() {
        handleExpand(node, "hover");
      },
      onChange: function onChange() {
        valueChangeEffect(node, cascaderContext);
      }
    });
  };

  var renderList = function renderList(treeNodes) {
    var _classNames;

    var isFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var segment = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "1";
    return /* @__PURE__ */React.createElement("ul", {
      className: classNames("".concat(COMPONENT_NAME, "__menu"), "narrow-scrollbar", (_classNames = {}, _defineProperty(_classNames, "".concat(COMPONENT_NAME, "__menu--segment"), segment), _defineProperty(_classNames, "".concat(COMPONENT_NAME, "__menu--filter"), isFilter), _classNames)),
      key: key
    }, treeNodes.map(function (node, index) {
      return renderItem(node, index);
    }));
  };

  var renderPanels = function renderPanels() {
    var _props$cascaderContex = props.cascaderContext,
        inputVal = _props$cascaderContex.inputVal,
        treeNodes = _props$cascaderContex.treeNodes;
    return inputVal ? renderList(treeNodes, true) : panels.map(function (treeNodes2, index) {
      return renderList(treeNodes2, false, index !== panels.length - 1, "".concat(COMPONENT_NAME, "__menu").concat(index));
    });
  };

  var content;

  if (props.loading) {
    var _props$loadingText;

    content = /* @__PURE__ */React.createElement("div", {
      className: "".concat(COMPONENT_NAME, "__panel--empty")
    }, (_props$loadingText = props.loadingText) !== null && _props$loadingText !== void 0 ? _props$loadingText : global.loadingText);
  } else {
    var _props$empty;

    content = panels !== null && panels !== void 0 && panels.length ? renderPanels() : /* @__PURE__ */React.createElement("div", {
      className: "".concat(COMPONENT_NAME, "__panel--empty")
    }, (_props$empty = props.empty) !== null && _props$empty !== void 0 ? _props$empty : global.empty);
  }

  return /* @__PURE__ */React.createElement("div", {
    className: classNames("".concat(COMPONENT_NAME, "__panel"), _defineProperty({}, "".concat(COMPONENT_NAME, "--normal"), panels.length && !props.loading), props.className),
    style: props.style
  }, content);
};

export { Panel as default };
//# sourceMappingURL=Panel.js.map
