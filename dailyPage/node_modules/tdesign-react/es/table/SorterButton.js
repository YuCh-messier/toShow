/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-ebef14de.js';
import { _ as _slicedToArray } from '../_chunks/dep-2baf8638.js';
import React from 'react';
import { ChevronDownIcon } from 'tdesign-icons-react';
import classNames from 'classnames';
import useGlobalIcon from '../hooks/useGlobalIcon.js';
import useClassName from './hooks/useClassName.js';
import { Tooltip } from '../tooltip/index.js';
import { useLocaleReceiver } from '../locale/LocalReceiver.js';
import '../_chunks/dep-24599104.js';
import '../hooks/useConfig.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-588efa4a.js';
import '../_chunks/dep-a407cb09.js';
import '../_chunks/dep-dd4cd0af.js';
import '../_chunks/dep-f162740d.js';
import '../_chunks/dep-22eee49a.js';
import '../_chunks/dep-f2b0265c.js';
import '../_chunks/dep-91563b2d.js';
import '../_chunks/dep-3627969a.js';
import '../_chunks/dep-e10ccd97.js';
import '../_chunks/dep-6f568a94.js';
import '../_chunks/dep-646bb331.js';
import '../_chunks/dep-1f71931a.js';
import '../_chunks/dep-3b5c7604.js';
import '../_chunks/dep-51566efd.js';
import '../_chunks/dep-c6a2f197.js';
import '../_chunks/dep-a6b91546.js';
import '../_chunks/dep-5fef4495.js';
import '../_chunks/dep-a97b932f.js';
import '../_chunks/dep-9e2d72a2.js';
import '../_chunks/dep-342e02ed.js';
import '../_chunks/dep-a89633b7.js';
import '../_chunks/dep-a91fe24d.js';
import '../_chunks/dep-27e7ca24.js';
import '../_chunks/dep-f40ed698.js';
import '../_chunks/dep-ab50f53f.js';
import '../_chunks/dep-9703c0d5.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../tooltip/Tooltip.js';
import '../_chunks/dep-fe234c83.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../hooks/useControlled.js';
import '../_chunks/dep-6f296cb1.js';
import '../_chunks/dep-8b68327e.js';
import '../_chunks/dep-094f627b.js';
import '../_chunks/dep-8e8d0d95.js';
import '../_chunks/dep-1a0fcc8a.js';
import '../_util/noop.js';
import '../_util/useAnimation.js';
import '../common/Portal.js';
import 'react-dom';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-2968ca73.js';
import '../_util/easing.js';
import '../popup/hooks/useTrigger.js';
import 'react-is';
import '../popup/utils/ref.js';
import '../_util/composeRefs.js';
import '../popup/utils/transition.js';
import '../_util/useMutationObserver.js';
import '../_chunks/dep-622322f2.js';
import '../_chunks/dep-abf310d4.js';
import '../_util/useWindowSize.js';
import '../popup/defaultProps.js';
import '../popup/style/css.js';
import '../popup/type.js';
import '../tooltip/defaultProps.js';
import '../tooltip/TooltipLite.js';
import '../_util/useSwitch.js';
import '../_util/usePersistFn.js';
import '../_common/js/utils/getPosition.js';
import '../tooltip/style/css.js';
import '../tooltip/type.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function SorterButton(props) {
  var _props$sortType = props.sortType,
      sortType = _props$sortType === void 0 ? "all" : _props$sortType;

  var _useGlobalIcon = useGlobalIcon({
    ChevronDownIcon: ChevronDownIcon
  }),
      ChevronDownIcon$1 = _useGlobalIcon.ChevronDownIcon;

  var _useClassName = useClassName(),
      tableSortClasses = _useClassName.tableSortClasses,
      negativeRotate180 = _useClassName.negativeRotate180;

  var _useLocaleReceiver = useLocaleReceiver("table"),
      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
      locale = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var allowSortTypes = sortType === "all" ? ["asc", "desc"] : [sortType];

  var onSortIconClick = function onSortIconClick(e, direction) {
    props === null || props === void 0 ? void 0 : props.onSortIconClick(e, {
      descending: direction === "desc"
    });
  };

  function getSortIcon(direction, activeClass) {
    var defaultIcon = t(locale.sortIcon) || /* @__PURE__ */React.createElement(ChevronDownIcon$1, null);
    var icon = props.sortIcon || defaultIcon;
    var sortClassName = [activeClass, tableSortClasses.sortIcon, tableSortClasses.iconDirection[direction], _defineProperty({}, negativeRotate180, direction === "asc")];
    return /* @__PURE__ */React.createElement("span", {
      key: direction,
      className: classNames(sortClassName),
      onClick: function onClick(e) {
        return onSortIconClick(e, direction);
      }
    }, icon);
  }

  var classes = [tableSortClasses.trigger, _defineProperty({}, tableSortClasses.doubleIcon, allowSortTypes.length > 1)];
  var tooltips = {
    asc: locale.sortAscendingOperationText,
    desc: locale.sortDescendingOperationText
  };
  var sortButton = allowSortTypes.map(function (direction) {
    var _props$hideSortTips;

    var activeClass = direction === props.sortOrder ? tableSortClasses.iconActive : tableSortClasses.iconDefault;
    var cancelTips = locale.sortCancelOperationText;
    var tips = direction === props.sortOrder ? cancelTips : tooltips[direction];
    if ((_props$hideSortTips = props.hideSortTips) !== null && _props$hideSortTips !== void 0 ? _props$hideSortTips : locale.hideSortTips) return getSortIcon(direction, activeClass);
    return /* @__PURE__ */React.createElement(Tooltip, _objectSpread(_objectSpread({
      content: tips,
      key: direction,
      placement: "right"
    }, props.tooltipProps), {}, {
      showArrow: false
    }), getSortIcon(direction, activeClass));
  });
  return /* @__PURE__ */React.createElement("div", {
    className: classNames(classes)
  }, sortButton);
}
SorterButton.displayName = "SorterButton";

export { SorterButton as default };
//# sourceMappingURL=SorterButton.js.map
