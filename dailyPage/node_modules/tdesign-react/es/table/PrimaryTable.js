/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-ebef14de.js';
import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { g as get_1 } from '../_chunks/dep-eaafd9b2.js';
import classNames from 'classnames';
import BaseTable from './BaseTable.js';
export { BASE_TABLE_ALL_EVENTS } from './BaseTable.js';
import useColumnController from './hooks/useColumnController.js';
import useRowExpand from './hooks/useRowExpand.js';
import useTableHeader, { renderTitle } from './hooks/useTableHeader.js';
import useRowSelect from './hooks/useRowSelect.js';
import useSorter from './hooks/useSorter.js';
import useFilter from './hooks/useFilter.js';
import useDragSort from './hooks/useDragSort.js';
import useAsyncLoading from './hooks/useAsyncLoading.js';
import useClassName from './hooks/useClassName.js';
import useStyle from './hooks/useStyle.js';
import EditableCell from './EditableCell.js';
import { useEditableRow } from './hooks/useEditableRow.js';
import { primaryTableDefaultProps } from './defaultProps.js';
import '../_chunks/dep-a407cb09.js';
import '../_chunks/dep-41762eda.js';
import '../_chunks/dep-342e02ed.js';
import '../_chunks/dep-3627969a.js';
import '../_chunks/dep-1a0fcc8a.js';
import '../_chunks/dep-91563b2d.js';
import '../_chunks/dep-c6a2f197.js';
import '../_chunks/dep-f162740d.js';
import '../_chunks/dep-22eee49a.js';
import '../_chunks/dep-f2b0265c.js';
import '../_chunks/dep-e10ccd97.js';
import '../_chunks/dep-6f568a94.js';
import '../_chunks/dep-646bb331.js';
import '../_chunks/dep-1f71931a.js';
import '../_chunks/dep-8e8d0d95.js';
import '../_chunks/dep-2baf8638.js';
import '../_chunks/dep-24599104.js';
import '../_chunks/dep-17055df6.js';
import '../_chunks/dep-81e269a3.js';
import '../_chunks/dep-5fef4495.js';
import '../_chunks/dep-a97b932f.js';
import '../_chunks/dep-a89633b7.js';
import '../_chunks/dep-9e2d72a2.js';
import '../_chunks/dep-51566efd.js';
import '../_chunks/dep-80d1a65c.js';
import '../_chunks/dep-9a198ec7.js';
import '../_chunks/dep-f40ed698.js';
import './TBody.js';
import '../_chunks/dep-8537a9ca.js';
import '../_chunks/dep-6f296cb1.js';
import '../_chunks/dep-8b68327e.js';
import '../_chunks/dep-094f627b.js';
import '../_chunks/dep-c4ea35cf.js';
import './TR.js';
import './utils.js';
import './hooks/useFixed.js';
import '../_common/js/utils/helper.js';
import '../_chunks/dep-88be14a4.js';
import '../_chunks/dep-fe234c83.js';
import '../_common/js/log/index.js';
import '../_common/js/log/log.js';
import '../_common/js/utils/getScrollbarWidth.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-2968ca73.js';
import '../_util/easing.js';
import '../hooks/useDebounce.js';
import '../_chunks/dep-622322f2.js';
import '../_chunks/dep-abf310d4.js';
import '../_util/usePersistFn.js';
import './Ellipsis.js';
import '../tooltip/index.js';
import '../tooltip/Tooltip.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../hooks/useControlled.js';
import '../_util/noop.js';
import '../_util/useAnimation.js';
import '../hooks/useConfig.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-588efa4a.js';
import '../_chunks/dep-dd4cd0af.js';
import '../_chunks/dep-3b5c7604.js';
import '../_chunks/dep-a6b91546.js';
import '../_chunks/dep-a91fe24d.js';
import '../_chunks/dep-27e7ca24.js';
import '../_chunks/dep-ab50f53f.js';
import '../_chunks/dep-9703c0d5.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../common/Portal.js';
import 'react-dom';
import '../popup/hooks/useTrigger.js';
import 'react-is';
import '../popup/utils/ref.js';
import '../_util/composeRefs.js';
import '../popup/utils/transition.js';
import '../_util/useMutationObserver.js';
import '../_util/useWindowSize.js';
import '../popup/defaultProps.js';
import '../popup/style/css.js';
import '../popup/type.js';
import '../tooltip/defaultProps.js';
import '../tooltip/TooltipLite.js';
import '../_util/useSwitch.js';
import '../_common/js/utils/getPosition.js';
import '../tooltip/style/css.js';
import '../tooltip/type.js';
import './hooks/useLazyLoad.js';
import '../_common/js/utils/observe.js';
import './hooks/useRowspanAndColspan.js';
import '../locale/LocalReceiver.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';
import '../affix/index.js';
import '../affix/Affix.js';
import '../affix/defaultProps.js';
import '../affix/style/css.js';
import '../affix/type.js';
import './THead.js';
import './TFoot.js';
import './hooks/useColumnResize.js';
import '../_chunks/dep-4c44a6fb.js';
import '../_common/js/table/set-column-width-by-drag.js';
import '../_common/js/table/utils.js';
import '../_common/js/table/recalculate-column-width.js';
import './hooks/useAffix.js';
import './hooks/usePagination.js';
import '../pagination/index.js';
import '../pagination/Pagination.js';
import '../_chunks/dep-69e3334d.js';
import '../_chunks/dep-08858747.js';
import '../_chunks/dep-ba50895d.js';
import '../select/index.js';
import '../select/base/Select.js';
import '../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../select/util/helper.js';
import '../select/base/OptionGroup.js';
import '../select/defaultProps.js';
import '../select/base/Option.js';
import '../_util/useRipple.js';
import '../_util/setStyle.js';
import '../common/FakeArrow.js';
import '../loading/index.js';
import '../loading/Loading.js';
import '../loading/gradient.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../loading/defaultProps.js';
import '../loading/plugin.js';
import '../loading/style/css.js';
import '../loading/type.js';
import '../select-input/index.js';
import '../select-input/SelectInput.js';
import '../select-input/useSingle.js';
import '../input/index.js';
import '../input/Input.js';
import 'tdesign-icons-react';
import '../_util/useLayoutEffect.js';
import '../hooks/useGlobalIcon.js';
import '../input/InputGroup.js';
import '../input/defaultProps.js';
import '../input/style/css.js';
import '../input/type.js';
import '../select-input/useMultiple.js';
import '../tag-input/index.js';
import '../tag-input/TagInput.js';
import '../_util/useDragSorter.js';
import '../tag-input/useTagScroll.js';
import '../tag-input/useTagList.js';
import '../tag/index.js';
import '../tag/Tag.js';
import '../tag/CheckTag.js';
import '../tag/defaultProps.js';
import '../tag/style/css.js';
import '../tag/type.js';
import '../tag-input/useHover.js';
import '../tag-input/defaultProps.js';
import '../tag-input/style/css.js';
import '../tag-input/type.js';
import '../select-input/useOverlayInnerStyle.js';
import '../select-input/defaultProps.js';
import '../select-input/style/css.js';
import '../select-input/type.js';
import '../select/base/PopupContent.js';
import '../select/style/css.js';
import '../select/type.js';
import '../input-number/index.js';
import '../input-number/InputNumber.js';
import '../button/index.js';
import '../button/Button.js';
import '../button/defaultProps.js';
import '../button/style/css.js';
import '../button/type.js';
import '../input-number/useInputNumber.js';
import '../_util/useCommonClassName.js';
import '../_common/js/input-number/number.js';
import '../_common/js/input-number/large-number.js';
import '../input-number/defaultProps.js';
import '../input-number/style/css.js';
import '../input-number/type.js';
import '../input-adornment/index.js';
import '../input-adornment/InputAdornment.js';
import '../input-adornment/style/css.js';
import '../input-adornment/type.js';
import '../pagination/hooks/useBoundaryJumper.js';
import '../pagination/hooks/usePrevNextJumper.js';
import '../pagination/hooks/usePageNumber.js';
import '../pagination/hooks/useTotal.js';
import '../pagination/validators.js';
import '../pagination/defaultProps.js';
import '../pagination/style/css.js';
import '../pagination/type.js';
import './hooks/useMultiHeader.js';
import '../hooks/useCommonClassName.js';
import '../_chunks/dep-e47fa018.js';
import '../_chunks/dep-742d4a49.js';
import '../checkbox/index.js';
import '../_chunks/dep-fc333960.js';
import '../common/Check.js';
import '../_util/helper.js';
import '../checkbox/defaultProps.js';
import '../checkbox/style/css.js';
import '../checkbox/type.js';
import '../dialog/plugin.js';
import '../dialog/Dialog.js';
import '../dialog/RenderDialog.js';
import '../_util/useDialogEsc.js';
import '../dialog/defaultProps.js';
import '../_util/useSetState.js';
import '../radio/index.js';
import '../_chunks/dep-c25250d7.js';
import '../radio/defaultProps.js';
import '../radio/style/css.js';
import '../radio/type.js';
import './SorterButton.js';
import './FilterController.js';
import '../_chunks/dep-2ac1b781.js';
import 'sortablejs';
import '../_common/js/utils/swapDragArrayElement.js';
import '../form/formModel.js';
import '../_chunks/dep-619196bb.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var PrimaryTable = /*#__PURE__*/forwardRef(function (props, ref) {
  var _primaryTableClasses;

  var columns = props.columns,
      columnController = props.columnController,
      editableRowKeys = props.editableRowKeys,
      style = props.style,
      className = props.className;
  var primaryTableRef = useRef(null);

  var _useClassName = useClassName(),
      classPrefix = _useClassName.classPrefix,
      tableDraggableClasses = _useClassName.tableDraggableClasses,
      tableBaseClass = _useClassName.tableBaseClass,
      tableSelectedClasses = _useClassName.tableSelectedClasses,
      tableSortClasses = _useClassName.tableSortClasses;

  var _useStyle = useStyle(props),
      sizeClassNames = _useStyle.sizeClassNames;

  var _useColumnController = useColumnController(props),
      tDisplayColumns = _useColumnController.tDisplayColumns,
      renderColumnController = _useColumnController.renderColumnController;

  var _useRowExpand = useRowExpand(props),
      showExpandedRow = _useRowExpand.showExpandedRow,
      showExpandIconColumn = _useRowExpand.showExpandIconColumn,
      getExpandColumn = _useRowExpand.getExpandColumn,
      renderExpandedRow = _useRowExpand.renderExpandedRow,
      onInnerExpandRowClick = _useRowExpand.onInnerExpandRowClick;

  var _useSorter = useSorter(props),
      renderSortIcon = _useSorter.renderSortIcon;

  var _useRowSelect = useRowSelect(props, tableSelectedClasses),
      formatToRowSelectColumn = _useRowSelect.formatToRowSelectColumn,
      selectedRowClassNames = _useRowSelect.selectedRowClassNames;

  var _useFilter = useFilter(props, primaryTableRef),
      hasEmptyCondition = _useFilter.hasEmptyCondition,
      isTableOverflowHidden = _useFilter.isTableOverflowHidden,
      renderFilterIcon = _useFilter.renderFilterIcon,
      renderFirstFilterRow = _useFilter.renderFirstFilterRow;

  var _useDragSort = useDragSort(props, primaryTableRef),
      isRowHandlerDraggable = _useDragSort.isRowHandlerDraggable,
      isRowDraggable = _useDragSort.isRowDraggable,
      isColDraggable = _useDragSort.isColDraggable,
      setDragSortColumns = _useDragSort.setDragSortColumns;

  var _useTableHeader = useTableHeader({
    columns: props.columns
  }),
      renderTitleWidthIcon = _useTableHeader.renderTitleWidthIcon;

  var _useAsyncLoading = useAsyncLoading(props),
      renderAsyncLoading = _useAsyncLoading.renderAsyncLoading;

  var primaryTableClasses = (_primaryTableClasses = {}, _defineProperty(_primaryTableClasses, tableDraggableClasses.colDraggable, isColDraggable), _defineProperty(_primaryTableClasses, tableDraggableClasses.rowHandlerDraggable, isRowHandlerDraggable), _defineProperty(_primaryTableClasses, tableDraggableClasses.rowDraggable, isRowDraggable), _defineProperty(_primaryTableClasses, tableBaseClass.overflowVisible, isTableOverflowHidden === false), _defineProperty(_primaryTableClasses, tableBaseClass.tableRowEdit, editableRowKeys), _primaryTableClasses);

  var _useEditableRow = useEditableRow(props),
      errorListMap = _useEditableRow.errorListMap,
      editableKeysMap = _useEditableRow.editableKeysMap,
      validateRowData = _useEditableRow.validateRowData,
      validateTableData = _useEditableRow.validateTableData,
      onRuleChange = _useEditableRow.onRuleChange,
      clearValidateData = _useEditableRow.clearValidateData;

  var tRowClassNames = function () {
    var tClassNames = [props.rowClassName, selectedRowClassNames];
    return tClassNames.filter(function (v) {
      return v;
    });
  }();

  var tRowAttributes = function () {
    var tAttributes = [props.rowAttributes];

    if (isRowHandlerDraggable || isRowDraggable) {
      tAttributes.push(function (_ref) {
        var row = _ref.row;
        return {
          "data-id": get_1(row, props.rowKey || "id")
        };
      });
    }

    return tAttributes.filter(function (v) {
      return v;
    });
  }();

  useImperativeHandle(ref, function () {
    return _objectSpread({
      validateRowData: validateRowData,
      validateTableData: validateTableData,
      clearValidateData: clearValidateData
    }, primaryTableRef.current);
  });

  var getColumns = function getColumns(columns2) {
    var arr = [];

    var _loop = function _loop(i, len) {
      var _item$children, _item$edit, _item$children2, _item$children3;

      var item = _objectSpread({}, columns2[i]);

      var isDisplayColumn = ((_item$children = item.children) === null || _item$children === void 0 ? void 0 : _item$children.length) || (tDisplayColumns === null || tDisplayColumns === void 0 ? void 0 : tDisplayColumns.includes(item.colKey));
      if (!isDisplayColumn && props.columnController && tDisplayColumns) return "continue";
      item = formatToRowSelectColumn(item);
      var sort = props.sort;

      if (item.sorter && props.showSortColumnBgColor) {
        var sorts = sort instanceof Array ? sort : [sort];
        var sortedColumn = sorts.find(function (sort2) {
          return sort2 && sort2.sortBy === item.colKey && sort2.descending !== void 0;
        });

        if (sortedColumn) {
          item.className = item.className instanceof Array ? item.className.concat(tableSortClasses.sortColumn) : [item.className, tableSortClasses.sortColumn];
        }
      }

      if (item.sorter || item.filter) {
        var titleContent = renderTitle(item, i);
        var _item = item,
            ellipsisTitle = _item.ellipsisTitle;

        item.title = function (p) {
          var _primaryTableRef$curr;

          var sortIcon = item.sorter ? renderSortIcon(p) : null;
          var filterIcon = item.filter ? renderFilterIcon(p) : null;
          var attach = (_primaryTableRef$curr = primaryTableRef.current) === null || _primaryTableRef$curr === void 0 ? void 0 : _primaryTableRef$curr.tableContentRef;
          return renderTitleWidthIcon([titleContent, sortIcon, filterIcon], p.col, p.colIndex, ellipsisTitle, attach, {
            classPrefix: classPrefix,
            ellipsisOverlayClassName: props.size !== "medium" ? sizeClassNames[props.size] : ""
          });
        };

        item.ellipsisTitle = false;
      }

      if ((_item$edit = item.edit) !== null && _item$edit !== void 0 && _item$edit.component) {
        var oldCell = item.cell;

        item.cell = function (p) {
          var cellProps = _objectSpread(_objectSpread({}, p), {}, {
            oldCell: oldCell,
            tableBaseClass: tableBaseClass,
            cellEmptyContent: props.cellEmptyContent,
            onChange: props.onRowEdit,
            onValidate: props.onRowValidate,
            onRuleChange: onRuleChange
          });

          if (props.editableRowKeys) {
            var rowValue = get_1(p.row, props.rowKey || "id");
            cellProps.editable = editableKeysMap[rowValue] || false;
            var key = [rowValue, p.col.colKey].join("__");
            var errorList = errorListMap[key];
            errorList && (cellProps.errors = errorList);
          }

          if (props.editableCellState) {
            cellProps.readonly = !props.editableCellState(p);
          }

          return /* @__PURE__ */React.createElement(EditableCell, _objectSpread({}, cellProps));
        };
      }

      if ((_item$children2 = item.children) !== null && _item$children2 !== void 0 && _item$children2.length) {
        item.children = getColumns(item.children);
      }

      if (!item.children || (_item$children3 = item.children) !== null && _item$children3 !== void 0 && _item$children3.length) {
        arr.push(item);
      }
    };

    for (var i = 0, len = columns2.length; i < len; i++) {
      var _ret = _loop(i, len);

      if (_ret === "continue") continue;
    }

    return arr;
  };

  var tColumns = function () {
    var cols = getColumns(columns);

    if (showExpandIconColumn) {
      cols.unshift(getExpandColumn());
    }

    return cols;
  }();

  var onInnerPageChange = function onInnerPageChange(pageInfo, newData) {
    var _props$onPageChange, _props$onChange;

    (_props$onPageChange = props.onPageChange) === null || _props$onPageChange === void 0 ? void 0 : _props$onPageChange.call(props, pageInfo, newData);
    var changeParams = [{
      pagination: pageInfo
    }, {
      trigger: "pagination",
      currentData: newData
    }];
    (_props$onChange = props.onChange) === null || _props$onChange === void 0 ? void 0 : _props$onChange.call.apply(_props$onChange, [props].concat(changeParams));
  };

  function formatNode(api, renderInnerNode, condition, extra) {
    if (!condition) return props[api];
    var innerNode = renderInnerNode();
    var propsNode = props[api];
    if (innerNode && !propsNode) return innerNode;
    if (propsNode && !innerNode) return propsNode;

    if (innerNode && propsNode) {
      return extra !== null && extra !== void 0 && extra.reverse ? /* @__PURE__ */React.createElement("div", null, innerNode, propsNode) : /* @__PURE__ */React.createElement("div", null, propsNode, innerNode);
    }

    return null;
  }

  var isColumnController = !!(columnController && Object.keys(columnController).length);
  var placement = isColumnController ? columnController.placement || "top-right" : "";
  var isBottomController = isColumnController && (placement === null || placement === void 0 ? void 0 : placement.indexOf("bottom")) !== -1;
  var topContent = formatNode("topContent", renderColumnController, isColumnController && !isBottomController);
  var bottomContent = formatNode("bottomContent", renderColumnController, isBottomController, {
    reverse: true
  });
  var firstFullRow = formatNode("firstFullRow", renderFirstFilterRow, !hasEmptyCondition);
  var lastFullRow = formatNode("lastFullRow", renderAsyncLoading, !!props.asyncLoading);

  var baseTableProps = _objectSpread(_objectSpread({}, props), {}, {
    rowClassName: tRowClassNames,
    rowAttributes: tRowAttributes,
    columns: tColumns,
    topContent: topContent,
    bottomContent: bottomContent,
    firstFullRow: firstFullRow,
    lastFullRow: lastFullRow,
    onPageChange: onInnerPageChange,
    renderExpandedRow: showExpandedRow ? renderExpandedRow : void 0
  });

  if (props.expandOnRowClick) {
    baseTableProps.onRowClick = onInnerExpandRowClick;
  }

  return /* @__PURE__ */React.createElement(BaseTable, _objectSpread(_objectSpread({}, baseTableProps), {}, {
    className: classNames(primaryTableClasses, className),
    style: style,
    onLeafColumnsChange: setDragSortColumns
  }));
});
PrimaryTable.displayName = "PrimaryTable";
PrimaryTable.defaultProps = primaryTableDefaultProps;

export { PrimaryTable as default };
//# sourceMappingURL=PrimaryTable.js.map
