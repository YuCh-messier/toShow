{"version":3,"file":"TreeItem.js","sources":["../../src/tree/TreeItem.tsx"],"sourcesContent":["import React, { CSSProperties, DragEventHandler, forwardRef, MouseEvent, ReactNode, useRef, DragEvent } from 'react';\nimport classNames from 'classnames';\nimport { CaretRightSmallIcon as TdCaretRightSmallIcon } from 'tdesign-icons-react';\nimport Loading from '../loading';\nimport useRipple from '../_util/useRipple';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport TreeNode from '../_common/js/tree/tree-node';\nimport Checkbox from '../checkbox';\nimport { useTreeConfig } from './useTreeConfig';\nimport { TreeItemProps } from './interface';\nimport useDraggable from './useDraggable';\nimport composeRefs from '../_util/composeRefs';\n\n/**\n * 树节点组件\n */\nconst TreeItem = forwardRef((props: TreeItemProps, ref: React.Ref<HTMLDivElement>) => {\n  const {\n    node,\n    icon,\n    label,\n    line,\n    expandOnClickNode,\n    activable,\n    checkProps,\n    disableCheck,\n    operations,\n    onClick,\n    onChange,\n  } = props;\n\n  const { CaretRightSmallIcon } = useGlobalIcon({\n    CaretRightSmallIcon: TdCaretRightSmallIcon,\n  });\n  const { level } = node;\n\n  const { treeClassNames, locale } = useTreeConfig();\n\n  const handleClick = (evt: MouseEvent<HTMLDivElement>) => {\n    onClick?.(node, {\n      event: evt,\n      expand: expandOnClickNode,\n      active: activable,\n    });\n  };\n\n  const handleItemClick = (evt: MouseEvent<HTMLDivElement>) => {\n    if (node.loading) {\n      return;\n    }\n    onClick?.(node, {\n      event: evt,\n      expand: true,\n      active: false,\n    });\n  };\n\n  const handleIconClick = (evt: MouseEvent<HTMLDivElement>) => {\n    evt.stopPropagation();\n    handleItemClick(evt);\n  };\n\n  const stopPropagation = (e: MouseEvent) => {\n    e.stopPropagation();\n  };\n\n  /* ======== render ======= */\n  const renderIcon = () => {\n    // 这里按 vue 的逻辑定义\n    let isDefaultIcon = false;\n    const renderIconNode = () => {\n      if (icon === false) {\n        return null;\n      }\n      if (icon instanceof Function) {\n        return icon(node.getModel());\n      }\n      if (React.isValidElement(icon)) {\n        return icon;\n      }\n      if (icon && icon !== true) {\n        // 非 ReactNode、Function、Boolean 类型，抛出错误提示\n        throw new Error('invalid type of icon');\n      }\n\n      if (!node.isLeaf()) {\n        isDefaultIcon = true;\n        if (node.loading && node.expanded) {\n          return <Loading loading={true} />;\n        }\n\n        return <CaretRightSmallIcon className={treeClassNames.treeIconRight} />;\n      }\n      return null;\n    };\n\n    const iconNode = renderIconNode();\n    return (\n      <span\n        className={classNames(treeClassNames.treeIcon, treeClassNames.folderIcon, {\n          [treeClassNames.treeIconDefault]: isDefaultIcon,\n        })}\n        onClick={handleIconClick}\n      >\n        {iconNode}\n      </span>\n    );\n  };\n\n  const renderLine = () => {\n    const iconVisible = icon !== false;\n\n    if (line === false) {\n      return null;\n    }\n\n    if (line instanceof Function) {\n      return line(node.getModel());\n    }\n\n    if (React.isValidElement(line)) {\n      return line;\n    }\n\n    if (node.parent && node.tree) {\n      // 如果节点的父节点，不是最后的节点\n      // 则需要绘制节点延长线\n      const shadowStyles: string[] = [];\n      const parents = node.getParents();\n      parents.pop();\n      parents.forEach((pnode: TreeNode, index: number) => {\n        if (!pnode.vmIsLast) {\n          shadowStyles.push(`calc(-${index + 1} * var(--space)) 0 var(--color)`);\n        }\n      });\n\n      const styles = {\n        '--level': level,\n        boxShadow: shadowStyles.join(','),\n      };\n\n      return (\n        <span\n          className={classNames(\n            // 每个节点绘制抵达上一层级的折线\n            treeClassNames.line,\n            {\n              // 叶子节点，折线宽度延长，因为没有 icon 呈现\n              // 任意节点，icon 不呈现时也是要延长折线宽度\n              [treeClassNames.lineIsLeaf]: node.vmIsLeaf || !iconVisible,\n              // 分支首节点，到上一节点的折线高度要缩短，让位给 icon 呈现\n              // 如果 icon 隐藏了，则不必缩短折线高度\n              [treeClassNames.lineIsFirst]: node.vmIsFirst && iconVisible,\n            },\n          )}\n          style={styles}\n          onClick={stopPropagation}\n        />\n      );\n    }\n    return null;\n  };\n\n  // 使用 斜八角动画\n  const labelRef = useRef();\n  useRipple(labelRef);\n\n  const renderLabel = () => {\n    const emptyView = locale('empty');\n    let labelText: string | ReactNode = '';\n    if (label instanceof Function) {\n      labelText = label(node.getModel()) || emptyView;\n    } else {\n      labelText = node.label || emptyView;\n    }\n\n    const labelClasses = classNames(treeClassNames.treeLabel, treeClassNames.treeLabelStrictly, {\n      [treeClassNames.actived]: node.isActivable() ? node.actived : false,\n    });\n\n    if (node.isCheckable()) {\n      let checkboxDisabled: boolean;\n      if (typeof disableCheck === 'function') {\n        checkboxDisabled = disableCheck(node.getModel());\n      } else {\n        checkboxDisabled = !!disableCheck;\n      }\n\n      if (node.isDisabled()) {\n        checkboxDisabled = true;\n      }\n\n      return (\n        <Checkbox\n          ref={labelRef}\n          checked={node.checked}\n          indeterminate={node.indeterminate}\n          disabled={checkboxDisabled}\n          name={String(node.value)}\n          onChange={() => onChange(node)}\n          className={labelClasses}\n          {...checkProps}\n        >\n          <span date-target=\"label\">{labelText}</span>\n        </Checkbox>\n      );\n    }\n    return (\n      <span ref={labelRef} date-target=\"label\" className={labelClasses}>\n        <span style={{ position: 'relative' }}>{labelText}</span>\n      </span>\n    );\n  };\n\n  const renderOperations = () => {\n    let operationsView = null;\n    if (operations) {\n      // ReactNode 类型处理\n      if (React.isValidElement(operations)) {\n        operationsView = operations;\n      } else if (operations instanceof Function) {\n        // Function 类型处理\n        const treeNodeModel = node?.getModel();\n        operationsView = operations(treeNodeModel);\n      } else {\n        // 非 ReactNode、Function 类型，抛出错误提示\n        throw new Error('invalid type of operations');\n      }\n    }\n\n    if (operationsView) {\n      return (\n        <span className={treeClassNames.treeOperations} date-target=\"operations\">\n          {operationsView}\n        </span>\n      );\n    }\n    return null;\n  };\n\n  const nodeRef = useRef<HTMLDivElement>(null);\n\n  const { setDragStatus, isDragging, dropPosition, isDragOver } = useDraggable({\n    node,\n    nodeRef,\n  });\n\n  const handleDragStart: DragEventHandler<HTMLDivElement> = (evt: DragEvent<HTMLDivElement>) => {\n    const { node } = props;\n    if (!node.isDraggable()) return;\n    evt.stopPropagation();\n    setDragStatus('dragStart', evt);\n\n    try {\n      // ie throw error firefox-need-it\n      evt.dataTransfer?.setData('text/plain', '');\n    } catch (e) {\n      // empty\n    }\n  };\n  const handleDragEnd: DragEventHandler<HTMLDivElement> = (evt: DragEvent<HTMLDivElement>) => {\n    const { node } = props;\n    if (!node.isDraggable()) return;\n    evt.stopPropagation();\n    setDragStatus('dragEnd', evt);\n  };\n  const handleDragOver: DragEventHandler<HTMLDivElement> = (evt: DragEvent) => {\n    const { node } = props;\n    if (!node.isDraggable()) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n    setDragStatus('dragOver', evt);\n  };\n  const handleDragLeave: DragEventHandler<HTMLDivElement> = (evt: DragEvent) => {\n    const { node } = props;\n    if (!node.isDraggable()) return;\n    evt.stopPropagation();\n    setDragStatus('dragLeave', evt);\n  };\n  const handleDrop: DragEventHandler<HTMLDivElement> = (evt: DragEvent) => {\n    const { node } = props;\n    if (!node.isDraggable()) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n    setDragStatus('drop', evt);\n  };\n\n  return (\n    <div\n      ref={composeRefs(ref, nodeRef)}\n      data-value={node.value}\n      data-level={level}\n      className={classNames(treeClassNames.treeNode, {\n        [treeClassNames.treeNodeOpen]: node.expanded,\n        [treeClassNames.actived]: node.isActivable() ? node.actived : false,\n        [treeClassNames.disabled]: node.isDisabled(),\n        [treeClassNames.treeNodeDraggable]: node.isDraggable(),\n        [treeClassNames.treeNodeDragging]: isDragging,\n        [treeClassNames.treeNodeDragTipTop]: isDragOver && dropPosition < 0,\n        [treeClassNames.treeNodeDragTipBottom]: isDragOver && dropPosition > 0,\n        [treeClassNames.treeNodeDragTipHighlight]: !isDragging && isDragOver && dropPosition === 0,\n      })}\n      style={\n        {\n          '--level': level,\n          boxShadow: '',\n        } as CSSProperties\n      }\n      onClick={handleClick}\n      draggable={node.isDraggable()}\n      onDragStart={handleDragStart}\n      onDragEnd={handleDragEnd}\n      onDragOver={handleDragOver}\n      onDragLeave={handleDragLeave}\n      onDrop={handleDrop}\n    >\n      {renderLine()}\n      {renderIcon()}\n      {renderLabel()}\n      {renderOperations()}\n    </div>\n  );\n});\n\nTreeItem.displayName = 'TreeItem';\n\nexport default TreeItem;\n"],"names":["TreeItem","forwardRef","props","ref","node","icon","label","line","expandOnClickNode","activable","checkProps","disableCheck","operations","onClick","onChange","useGlobalIcon","CaretRightSmallIcon","TdCaretRightSmallIcon","level","useTreeConfig","treeClassNames","locale","handleClick","evt","event","expand","active","handleItemClick","loading","handleIconClick","stopPropagation","e","renderIcon","isDefaultIcon","renderIconNode","Function","getModel","React","isValidElement","Error","isLeaf","expanded","createElement","Loading","className","treeIconRight","iconNode","classNames","treeIcon","folderIcon","treeIconDefault","renderLine","iconVisible","parent","tree","shadowStyles","parents","getParents","pop","forEach","pnode","index","vmIsLast","push","styles","boxShadow","join","lineIsLeaf","vmIsLeaf","lineIsFirst","vmIsFirst","style","labelRef","useRef","useRipple","renderLabel","emptyView","labelText","labelClasses","treeLabel","treeLabelStrictly","actived","isActivable","isCheckable","checkboxDisabled","isDisabled","Checkbox","checked","indeterminate","disabled","name","String","value","position","renderOperations","operationsView","treeNodeModel","treeOperations","nodeRef","useDraggable","setDragStatus","isDragging","dropPosition","isDragOver","handleDragStart","isDraggable","dataTransfer","setData","handleDragEnd","handleDragOver","preventDefault","handleDragLeave","handleDrop","composeRefs","treeNode","treeNodeOpen","treeNodeDraggable","treeNodeDragging","treeNodeDragTipTop","treeNodeDragTipBottom","treeNodeDragTipHighlight","draggable","onDragStart","onDragEnd","onDragOver","onDragLeave","onDrop","displayName"],"mappings":"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"}