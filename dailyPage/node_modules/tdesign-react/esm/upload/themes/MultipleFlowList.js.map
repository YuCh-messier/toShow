{"version":3,"file":"MultipleFlowList.js","sources":["../../../src/upload/themes/MultipleFlowList.tsx"],"sourcesContent":["import React, { MouseEvent, useMemo } from 'react';\nimport classNames from 'classnames';\nimport {\n  BrowseIcon as TdBrowseIcon,\n  DeleteIcon as TdDeleteIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n  TimeFilledIcon as TdTimeFilledIcon,\n} from 'tdesign-icons-react';\nimport useGlobalIcon from '../../hooks/useGlobalIcon';\nimport ImageViewer from '../../image-viewer';\nimport { CommonDisplayFileProps } from '../interface';\nimport TButton from '../../button';\nimport { UploadFile, TdUploadProps } from '../type';\nimport useDrag, { UploadDragEvents } from '../hooks/useDrag';\nimport { abridgeName, returnFileSize } from '../../_common/js/upload/utils';\nimport TLoading from '../../loading';\nimport Link from '../../link';\n\nexport interface ImageFlowListProps extends CommonDisplayFileProps {\n  uploadFiles?: (toFiles?: UploadFile[]) => void;\n  cancelUpload?: (context: { e: MouseEvent<HTMLElement>; file?: UploadFile }) => void;\n  dragEvents: UploadDragEvents;\n  disabled?: boolean;\n  isBatchUpload?: boolean;\n  draggable?: boolean;\n  onPreview?: TdUploadProps['onPreview'];\n}\n\nconst ImageFlowList = (props: ImageFlowListProps) => {\n  // locale 已经在 useUpload 中统一处理优先级\n  const { locale, uploading, disabled, displayFiles, classPrefix } = props;\n  const uploadPrefix = `${classPrefix}-upload`;\n\n  const { BrowseIcon, DeleteIcon, CheckCircleFilledIcon, ErrorCircleFilledIcon, TimeFilledIcon } = useGlobalIcon({\n    BrowseIcon: TdBrowseIcon,\n    DeleteIcon: TdDeleteIcon,\n    CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n    ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n    TimeFilledIcon: TdTimeFilledIcon,\n  });\n\n  const drag = useDrag(props.dragEvents);\n\n  const uploadText = useMemo(() => {\n    if (uploading) return `${locale.progress.uploadingText}`;\n    return locale.triggerUploadText.normal;\n  }, [locale, uploading]);\n\n  const draggable = props.draggable ?? true;\n  const dragEvents = draggable\n    ? {\n        onDrop: drag.handleDrop,\n        onDragEnter: drag.handleDragenter,\n        onDragOver: drag.handleDragover,\n        onDragLeave: drag.handleDragleave,\n      }\n    : {};\n\n  const getStatusMap = () => {\n    const iconMap = {\n      success: <CheckCircleFilledIcon />,\n      fail: <ErrorCircleFilledIcon />,\n      progress: <TLoading />,\n      waiting: <TimeFilledIcon />,\n    };\n    const textMap = {\n      success: locale.progress?.successText,\n      fail: locale.progress?.failText,\n      progress: locale.progress?.uploadingText,\n      waiting: locale.progress?.waitingText,\n    };\n    return {\n      iconMap,\n      textMap,\n    };\n  };\n\n  const renderEmpty = () => (\n    <div className={`${uploadPrefix}__flow-empty`}>\n      {drag.dragActive ? locale.dragger.dragDropText : locale.dragger.clickAndDragText}\n    </div>\n  );\n\n  const renderImgItem = (file: UploadFile, index: number) => {\n    const { iconMap, textMap } = getStatusMap();\n    return (\n      <li className={`${uploadPrefix}__card-item`} key={file.name + index + file.percent + file.status}>\n        <div\n          className={classNames([\n            `${uploadPrefix}__card-content`,\n            { [`${classPrefix}-is-bordered`]: file.status !== 'waiting' },\n          ])}\n        >\n          {['fail', 'progress'].includes(file.status) && (\n            <div className={`${uploadPrefix}__card-status-wrap`}>\n              {iconMap[file.status as 'fail' | 'progress']}\n              <p>{textMap[file.status as 'fail' | 'progress']}</p>\n            </div>\n          )}\n          {(['waiting', 'success'].includes(file.status) || (!file.status && file.url)) && (\n            <img\n              className={`${uploadPrefix}__card-image`}\n              src={file.url || '//tdesign.gtimg.com/tdesign-default-img.png'}\n            />\n          )}\n          <div className={`${uploadPrefix}__card-mask`}>\n            {file.url && (\n              <span className={`${uploadPrefix}__card-mask-item`}>\n                <ImageViewer\n                  trigger={({ onOpen }) => (\n                    <BrowseIcon\n                      onClick={(e) => {\n                        props.onPreview?.({ file, index, e });\n                        onOpen();\n                      }}\n                    />\n                  )}\n                  images={displayFiles.map((t) => t.url)}\n                  defaultIndex={index}\n                />\n                <span className={`${uploadPrefix}__card-mask-item-divider`}></span>\n              </span>\n            )}\n            {!disabled && (\n              <span\n                className={`${uploadPrefix}__card-mask-item`}\n                onClick={(e: MouseEvent) => props.onRemove({ e, index, file })}\n              >\n                <DeleteIcon />\n              </span>\n            )}\n          </div>\n        </div>\n        <p className={`${uploadPrefix}__card-name`}>{abridgeName(file.name)}</p>\n      </li>\n    );\n  };\n\n  const renderStatus = (file: UploadFile) => {\n    const { iconMap, textMap } = getStatusMap();\n    return (\n      <div className={`${uploadPrefix}__flow-status`}>\n        {iconMap[file.status]}\n        <span>\n          {textMap[file.status]}\n          {file.status === 'progress' ? ` ${file.percent}%` : ''}\n        </span>\n      </div>\n    );\n  };\n\n  const renderNormalActionCol = (file: UploadFile, index: number) => (\n    <td>\n      <TButton theme=\"primary\" variant=\"text\" onClick={(e: MouseEvent) => props.onRemove({ e, index, file })}>\n        {locale?.triggerUploadText?.delete}\n      </TButton>\n    </td>\n  );\n\n  // batchUpload action col\n  const renderBatchActionCol = (index: number) =>\n    // 第一行数据才需要合并单元格\n    index === 0 ? (\n      <td rowSpan={displayFiles.length} className={`${uploadPrefix}__flow-table__batch-row`}>\n        <TButton\n          theme=\"primary\"\n          variant=\"text\"\n          onClick={(e: MouseEvent) => props.onRemove({ e, index: -1, file: null })}\n        >\n          {locale?.triggerUploadText?.delete}\n        </TButton>\n      </td>\n    ) : null;\n\n  const renderFileList = () => (\n    <table className={`${uploadPrefix}__flow-table`} {...dragEvents}>\n      <thead>\n        <tr>\n          <th>{locale.file?.fileNameText}</th>\n          <th>{locale.file?.fileSizeText}</th>\n          <th>{locale.file?.fileStatusText}</th>\n          {disabled ? null : <th>{locale.file?.fileOperationText}</th>}\n        </tr>\n      </thead>\n      <tbody>\n        {!displayFiles.length && (\n          <tr>\n            <td colSpan={4}>{renderEmpty()}</td>\n          </tr>\n        )}\n        {displayFiles.map((file, index) => {\n          // 合并操作出现条件为：当前为合并上传模式且列表内没有待上传文件\n          const showBatchUploadAction = props.isBatchUpload;\n          const deleteNode =\n            showBatchUploadAction && !displayFiles.find((item) => item.status !== 'success')\n              ? renderBatchActionCol(index)\n              : renderNormalActionCol(file, index);\n          const fileName = props.abridgeName?.length\n            ? abridgeName(file.name, props.abridgeName[0], props.abridgeName[1])\n            : file.name;\n          return (\n            <tr key={file.name + index}>\n              <td>\n                {file.url ? (\n                  <Link href={file.url} target=\"_blank\" hover=\"color\">\n                    {fileName}\n                  </Link>\n                ) : (\n                  fileName\n                )}\n              </td>\n              <td>{returnFileSize(file.size)}</td>\n              <td>{renderStatus(file)}</td>\n              {disabled ? null : deleteNode}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n\n  const cardClassName = `${uploadPrefix}__flow-card-area`;\n  return (\n    <div className={`${uploadPrefix}__flow ${uploadPrefix}__flow-${props.theme}`}>\n      <div className={`${uploadPrefix}__flow-op`}>\n        {props.children}\n        {props.placeholder && (\n          <small className={`${uploadPrefix}__flow-placeholder ${uploadPrefix}__placeholder`}>\n            {props.placeholder}\n          </small>\n        )}\n      </div>\n\n      {props.theme === 'image-flow' && (\n        <div className={cardClassName} {...dragEvents}>\n          {displayFiles.length ? (\n            <ul className={`${uploadPrefix}__card clearfix`}>\n              {displayFiles.map((file, index) => renderImgItem(file, index))}\n            </ul>\n          ) : (\n            renderEmpty()\n          )}\n        </div>\n      )}\n\n      {props.theme === 'file-flow' &&\n        (displayFiles.length ? (\n          renderFileList()\n        ) : (\n          <div className={cardClassName} {...dragEvents}>\n            {renderEmpty()}\n          </div>\n        ))}\n\n      {!props.autoUpload && (\n        <div className={`${uploadPrefix}__flow-bottom`}>\n          <TButton theme=\"default\" onClick={(e) => props.cancelUpload?.({ e })} disabled={disabled || !uploading}>\n            {locale?.cancelUploadText}\n          </TButton>\n          <TButton\n            disabled={disabled || uploading || !displayFiles.length}\n            theme=\"primary\"\n            loading={uploading}\n            onClick={() => props.uploadFiles?.()}\n          >\n            {uploadText}\n          </TButton>\n        </div>\n      )}\n    </div>\n  );\n};\n\nImageFlowList.displayName = 'ImageFlowList';\n\nexport default ImageFlowList;\n"],"names":["ImageFlowList","props","locale","uploading","disabled","displayFiles","classPrefix","uploadPrefix","useGlobalIcon","BrowseIcon","TdBrowseIcon","DeleteIcon","TdDeleteIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","TimeFilledIcon","TdTimeFilledIcon","drag","useDrag","dragEvents","uploadText","useMemo","progress","uploadingText","triggerUploadText","normal","draggable","onDrop","handleDrop","onDragEnter","handleDragenter","onDragOver","handleDragover","onDragLeave","handleDragleave","getStatusMap","iconMap","success","fail","TLoading","waiting","textMap","successText","failText","waitingText","renderEmpty","React","createElement","className","dragActive","dragger","dragDropText","clickAndDragText","renderImgItem","file","index","key","name","percent","status","classNames","includes","url","src","ImageViewer","trigger","onOpen","onClick","e","onPreview","images","map","t","defaultIndex","onRemove","abridgeName","renderStatus","renderNormalActionCol","TButton","theme","variant","renderBatchActionCol","rowSpan","length","renderFileList","fileNameText","fileSizeText","fileStatusText","fileOperationText","colSpan","showBatchUploadAction","isBatchUpload","deleteNode","find","item","fileName","Link","href","target","hover","returnFileSize","size","cardClassName","children","placeholder","autoUpload","cancelUpload","cancelUploadText","loading","uploadFiles","displayName"],"mappings":"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"}