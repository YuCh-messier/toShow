/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-ebef14de.js';
import React, { useContext, useMemo } from 'react';
import classNames from 'classnames';
import useConfig from '../hooks/useConfig.js';
import StepsContext from './TimelineContext.js';
import renderTNode from '../_util/renderTNode.js';
import { useAlign } from './useAlign.js';
import { Loading } from '../loading/index.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-588efa4a.js';
import '../_chunks/dep-a407cb09.js';
import '../_chunks/dep-dd4cd0af.js';
import '../_chunks/dep-f162740d.js';
import '../_chunks/dep-22eee49a.js';
import '../_chunks/dep-f2b0265c.js';
import '../_chunks/dep-91563b2d.js';
import '../_chunks/dep-3627969a.js';
import '../_chunks/dep-e10ccd97.js';
import '../_chunks/dep-6f568a94.js';
import '../_chunks/dep-646bb331.js';
import '../_chunks/dep-1f71931a.js';
import '../_chunks/dep-3b5c7604.js';
import '../_chunks/dep-51566efd.js';
import '../_chunks/dep-c6a2f197.js';
import '../_chunks/dep-a6b91546.js';
import '../_chunks/dep-5fef4495.js';
import '../_chunks/dep-a97b932f.js';
import '../_chunks/dep-9e2d72a2.js';
import '../_chunks/dep-342e02ed.js';
import '../_chunks/dep-a89633b7.js';
import '../_chunks/dep-a91fe24d.js';
import '../_chunks/dep-27e7ca24.js';
import '../_chunks/dep-f40ed698.js';
import '../_chunks/dep-ab50f53f.js';
import '../_chunks/dep-9703c0d5.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../_common/js/log/index.js';
import '../_common/js/log/log.js';
import '../loading/Loading.js';
import '../_chunks/dep-2baf8638.js';
import '../_chunks/dep-24599104.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-2968ca73.js';
import '../_util/easing.js';
import '../common/Portal.js';
import 'react-dom';
import '../loading/gradient.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../_common/js/utils/helper.js';
import '../_chunks/dep-88be14a4.js';
import '../_chunks/dep-fe234c83.js';
import '../loading/defaultProps.js';
import '../loading/plugin.js';
import '../loading/style/index.js';
import '../loading/type.js';

var DefaultTheme = ["default", "primary", "success", "warning", "error"];

var TimelineItem = function TimelineItem(props) {
  var _classNames, _classNames2, _classNames3;

  var className = props.className,
      _props$style = props.style,
      style = _props$style === void 0 ? {} : _props$style,
      dot = props.dot,
      _props$dotColor = props.dotColor,
      dotColor = _props$dotColor === void 0 ? "primary" : _props$dotColor,
      labelAlign = props.labelAlign,
      children = props.children,
      index = props.index,
      content = props.content,
      label = props.label,
      _props$loading = props.loading,
      loading = _props$loading === void 0 ? false : _props$loading;

  var _useContext = useContext(StepsContext),
      theme = _useContext.theme,
      reverse = _useContext.reverse,
      itemsStatus = _useContext.itemsStatus,
      layout = _useContext.layout,
      globalAlign = _useContext.globalAlign,
      mode = _useContext.mode;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var renderAlign = useAlign(globalAlign, layout);

  var getPositionClassName = function getPositionClassName(index2) {
    var left = layout === "horizontal" ? "top" : "left";
    var right = layout === "horizontal" ? "bottom" : "right";

    if (renderAlign === "alternate") {
      return labelAlign || index2 % 2 === 0 ? "".concat(classPrefix, "-timeline-item-").concat(left) : "".concat(classPrefix, "-timeline-item-").concat(right);
    }

    if (renderAlign === "left" || renderAlign === "top") {
      return "".concat(classPrefix, "-timeline-item-").concat(left);
    }

    if (renderAlign === "right" || renderAlign === "bottom") {
      return "".concat(classPrefix, "-timeline-item-").concat(right);
    }

    return "";
  };

  var dotElement = useMemo(function () {
    var _ele$props;

    var ele = renderTNode(dot);
    return ele && /*#__PURE__*/React.cloneElement(ele, {
      className: classNames(ele === null || ele === void 0 ? void 0 : (_ele$props = ele.props) === null || _ele$props === void 0 ? void 0 : _ele$props.className, "".concat(classPrefix, "-timeline-item__dot-content"))
    });
  }, [dot, classPrefix]);
  var itemClassName = classNames((_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-timeline-item"), true), _defineProperty(_classNames, "".concat(getPositionClassName(index)), true), _classNames), className);
  var tailClassName = classNames((_classNames2 = {}, _defineProperty(_classNames2, "".concat(classPrefix, "-timeline-item__tail"), true), _defineProperty(_classNames2, "".concat(classPrefix, "-timeline-item__tail--theme-").concat(theme), true), _defineProperty(_classNames2, "".concat(classPrefix, "-timeline-item__tail--status-").concat(itemsStatus[index]), reverse), _classNames2));
  var dotClassName = classNames((_classNames3 = {}, _defineProperty(_classNames3, "".concat(classPrefix, "-timeline-item__dot"), true), _defineProperty(_classNames3, "".concat(classPrefix, "-timeline-item__dot--custom"), !!dotElement || !dotElement && loading), _defineProperty(_classNames3, "".concat(classPrefix, "-timeline-item__dot--").concat(dotColor), DefaultTheme.includes(dotColor)), _classNames3));
  var labelClassName = classNames("".concat(classPrefix, "-timeline-item__label"), _defineProperty({}, "".concat(classPrefix, "-timeline-item__label--").concat(mode), true));
  return /* @__PURE__ */React.createElement("li", {
    className: itemClassName,
    style: style
  }, mode === "alternate" && label && /* @__PURE__ */React.createElement("div", {
    className: labelClassName
  }, label), /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-timeline-item__wrapper")
  }, /* @__PURE__ */React.createElement("div", {
    className: dotClassName,
    style: {
      borderColor: !DefaultTheme.includes(dotColor) && dotColor
    }
  }, !dotElement && loading && /* @__PURE__ */React.createElement(Loading, {
    size: "12px",
    className: "".concat(classPrefix, "-timeline-item__dot-content")
  }), dotElement), /* @__PURE__ */React.createElement("div", {
    className: tailClassName
  })), /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-timeline-item__content")
  }, content || children, mode === "same" && label && /* @__PURE__ */React.createElement("div", {
    className: labelClassName
  }, label)));
};

TimelineItem.displayName = "TimelineItem";

export { TimelineItem as default };
//# sourceMappingURL=TimelineItem.js.map
