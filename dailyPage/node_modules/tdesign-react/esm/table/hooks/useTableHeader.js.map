{"version":3,"file":"useTableHeader.js","sources":["../../../src/table/hooks/useTableHeader.tsx"],"sourcesContent":["import React, { ReactNode, useMemo } from 'react';\nimport isFunction from 'lodash/isFunction';\nimport classNames from 'classnames';\nimport { BaseTableCol, PrimaryTableCol, TableRowData, TdBaseTableProps } from '../type';\nimport { TableColumns, getThRowspanAndColspan, getThList } from './useMultiHeader';\nimport useClassName from './useClassName';\nimport TEllipsis from '../Ellipsis';\n\n// 渲染表头的通用方法\nexport function renderTitle(col: TableColumns[0], index: number) {\n  const params = { col, colIndex: index };\n  if (isFunction(col.title)) {\n    return col.title(params);\n  }\n  if (isFunction(col.render)) {\n    return col.render({ ...params, row: {}, rowIndex: -1, type: 'title' });\n  }\n  return col.title;\n}\n\nexport interface UseTableHeaderParams {\n  columns: TdBaseTableProps['columns'];\n}\n\nexport default function useTableHeader({ columns }: UseTableHeaderParams) {\n  const { tableSortClasses, tableFilterClasses } = useClassName();\n  // 一次性获取 colspan 和 rowspan 可以避免其他数据更新导致的重复计算\n  const spansAndLeafNodes = useMemo(() => getThRowspanAndColspan(columns), [columns]);\n  // 表头二维数据\n  const thList = useMemo(() => getThList(columns), [columns]);\n  const isMultipleHeader = useMemo(() => thList.length > 1, [thList]);\n\n  const renderTitleWidthIcon = (\n    [title, sortIcon, filterIcon]: ReactNode[],\n    col: PrimaryTableCol<TableRowData>,\n    colIndex: number,\n    ellipsisTitle: BaseTableCol['ellipsisTitle'],\n    attach: HTMLElement,\n    extra?: {\n      classPrefix: string;\n      ellipsisOverlayClassName: string;\n    },\n  ) => {\n    const classes = {\n      [tableSortClasses.sortable]: !!sortIcon,\n      [tableFilterClasses.filterable]: !!filterIcon,\n    };\n    const content = isFunction(ellipsisTitle) ? ellipsisTitle({ col, colIndex }) : undefined;\n    const isEllipsis = ellipsisTitle !== undefined ? Boolean(ellipsisTitle) : Boolean(col.ellipsis);\n    return (\n      <div className={classNames(classes)}>\n        <div className={tableSortClasses.title}>\n          {isEllipsis ? (\n            <TEllipsis\n              placement=\"bottom\"\n              attach={attach ? () => attach : undefined}\n              popupContent={content}\n              tooltipProps={typeof ellipsisTitle === 'object' ? ellipsisTitle : undefined}\n              classPrefix={extra?.classPrefix}\n              overlayClassName={extra?.ellipsisOverlayClassName}\n            >\n              {title}\n            </TEllipsis>\n          ) : (\n            <div>{title}</div>\n          )}\n          {Boolean(sortIcon || filterIcon) && (\n            <div className={tableFilterClasses.iconWrap}>\n              {sortIcon}\n              {filterIcon}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return {\n    thList,\n    isMultipleHeader,\n    spansAndLeafNodes,\n    renderTitleWidthIcon,\n  };\n}\n"],"names":["renderTitle","col","index","params","colIndex","isFunction","title","render","row","rowIndex","type","useTableHeader","columns","useClassName","tableSortClasses","tableFilterClasses","spansAndLeafNodes","useMemo","getThRowspanAndColspan","thList","getThList","isMultipleHeader","length","renderTitleWidthIcon","ellipsisTitle","attach","extra","sortIcon","filterIcon","classes","sortable","filterable","content","isEllipsis","Boolean","ellipsis","React","createElement","className","classNames","TEllipsis","placement","popupContent","tooltipProps","classPrefix","overlayClassName","ellipsisOverlayClassName","iconWrap"],"mappings":"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"}