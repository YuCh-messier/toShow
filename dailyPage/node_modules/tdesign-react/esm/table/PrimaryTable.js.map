{"version":3,"file":"PrimaryTable.js","sources":["../../src/table/PrimaryTable.tsx"],"sourcesContent":["import React, { useRef, forwardRef, useImperativeHandle } from 'react';\nimport get from 'lodash/get';\nimport classNames from 'classnames';\nimport BaseTable from './BaseTable';\nimport useColumnController from './hooks/useColumnController';\nimport useRowExpand from './hooks/useRowExpand';\nimport useTableHeader, { renderTitle } from './hooks/useTableHeader';\nimport useRowSelect from './hooks/useRowSelect';\nimport { TdPrimaryTableProps, PrimaryTableCol, TableRowData, PrimaryTableCellParams } from './type';\nimport useSorter from './hooks/useSorter';\nimport useFilter from './hooks/useFilter';\nimport useDragSort from './hooks/useDragSort';\nimport useAsyncLoading from './hooks/useAsyncLoading';\nimport { PageInfo } from '../pagination';\nimport useClassName from './hooks/useClassName';\nimport useStyle from './hooks/useStyle';\nimport { BaseTableProps, PrimaryTableProps, PrimaryTableRef } from './interface';\nimport EditableCell, { EditableCellProps } from './EditableCell';\nimport { StyledProps } from '../common';\nimport { useEditableRow } from './hooks/useEditableRow';\nimport { primaryTableDefaultProps } from './defaultProps';\n\nexport { BASE_TABLE_ALL_EVENTS } from './BaseTable';\n\nexport interface TPrimaryTableProps extends PrimaryTableProps, StyledProps {}\n\nconst PrimaryTable = forwardRef<PrimaryTableRef, TPrimaryTableProps>((props, ref) => {\n  const { columns, columnController, editableRowKeys, style, className } = props;\n  const primaryTableRef = useRef(null);\n  const { classPrefix, tableDraggableClasses, tableBaseClass, tableSelectedClasses, tableSortClasses } = useClassName();\n  const { sizeClassNames } = useStyle(props);\n  // 自定义列配置功能\n  const { tDisplayColumns, renderColumnController } = useColumnController(props);\n  // 展开/收起行功能\n  const { showExpandedRow, showExpandIconColumn, getExpandColumn, renderExpandedRow, onInnerExpandRowClick } =\n    useRowExpand(props);\n  // 排序功能\n  const { renderSortIcon } = useSorter(props);\n  // 行选中功能\n  const { formatToRowSelectColumn, selectedRowClassNames } = useRowSelect(props, tableSelectedClasses);\n  // 过滤功能\n  const { hasEmptyCondition, isTableOverflowHidden, renderFilterIcon, renderFirstFilterRow } = useFilter(\n    props,\n    primaryTableRef,\n  );\n  // 拖拽排序功能\n  const { isRowHandlerDraggable, isRowDraggable, isColDraggable, setDragSortColumns } = useDragSort(\n    props,\n    primaryTableRef,\n  );\n\n  const { renderTitleWidthIcon } = useTableHeader({ columns: props.columns });\n  const { renderAsyncLoading } = useAsyncLoading(props);\n\n  const primaryTableClasses = {\n    [tableDraggableClasses.colDraggable]: isColDraggable,\n    [tableDraggableClasses.rowHandlerDraggable]: isRowHandlerDraggable,\n    [tableDraggableClasses.rowDraggable]: isRowDraggable,\n    [tableBaseClass.overflowVisible]: isTableOverflowHidden === false,\n    [tableBaseClass.tableRowEdit]: editableRowKeys,\n  };\n\n  const { errorListMap, editableKeysMap, validateRowData, validateTableData, onRuleChange, clearValidateData } =\n    useEditableRow(props);\n\n  // 如果想给 TR 添加类名，请在这里补充，不要透传更多额外 Props 到 BaseTable\n  const tRowClassNames = (() => {\n    const tClassNames = [props.rowClassName, selectedRowClassNames];\n    return tClassNames.filter((v) => v);\n  })();\n\n  // 如果想给 TR 添加属性，请在这里补充，不要透传更多额外 Props 到 BaseTable\n  const tRowAttributes = (() => {\n    const tAttributes = [props.rowAttributes];\n    if (isRowHandlerDraggable || isRowDraggable) {\n      tAttributes.push(({ row }) => ({ 'data-id': get(row, props.rowKey || 'id') }));\n    }\n    return tAttributes.filter((v) => v);\n  })();\n\n  useImperativeHandle(ref, () => ({\n    validateRowData,\n    validateTableData,\n    clearValidateData,\n    ...primaryTableRef.current,\n  }));\n\n  // 1. 影响列数量的因素有：自定义列配置、展开/收起行、多级表头；2. 影响表头内容的因素有：排序图标、筛选图标\n  const getColumns = (columns: PrimaryTableCol<TableRowData>[]) => {\n    const arr: PrimaryTableCol<TableRowData>[] = [];\n    for (let i = 0, len = columns.length; i < len; i++) {\n      let item = { ...columns[i] };\n      // 自定义列显示控制\n      const isDisplayColumn = item.children?.length || tDisplayColumns?.includes(item.colKey);\n      if (!isDisplayColumn && props.columnController && tDisplayColumns) continue;\n      item = formatToRowSelectColumn(item);\n      const { sort } = props;\n      if (item.sorter && props.showSortColumnBgColor) {\n        const sorts = sort instanceof Array ? sort : [sort];\n        const sortedColumn = sorts.find((sort) => sort && sort.sortBy === item.colKey && sort.descending !== undefined);\n        if (sortedColumn) {\n          item.className =\n            item.className instanceof Array\n              ? item.className.concat(tableSortClasses.sortColumn)\n              : [item.className, tableSortClasses.sortColumn];\n        }\n      }\n      // 添加排序图标和过滤图标\n      if (item.sorter || item.filter) {\n        const titleContent = renderTitle(item, i);\n        const { ellipsisTitle } = item;\n        item.title = (p) => {\n          const sortIcon = item.sorter ? renderSortIcon(p) : null;\n          const filterIcon = item.filter ? renderFilterIcon(p) : null;\n          const attach = primaryTableRef.current?.tableContentRef;\n          return renderTitleWidthIcon([titleContent, sortIcon, filterIcon], p.col, p.colIndex, ellipsisTitle, attach, {\n            classPrefix,\n            ellipsisOverlayClassName: props.size !== 'medium' ? sizeClassNames[props.size] : '',\n          });\n        };\n        item.ellipsisTitle = false;\n      }\n      // 如果是单元格可编辑状态\n      if (item.edit?.component) {\n        const oldCell = item.cell;\n        item.cell = (p: PrimaryTableCellParams<TableRowData>) => {\n          const cellProps: EditableCellProps = {\n            ...p,\n            oldCell,\n            tableBaseClass,\n            cellEmptyContent: props.cellEmptyContent,\n            onChange: props.onRowEdit,\n            onValidate: props.onRowValidate,\n            onRuleChange,\n          };\n          if (props.editableRowKeys) {\n            const rowValue = get(p.row, props.rowKey || 'id');\n            cellProps.editable = editableKeysMap[rowValue] || false;\n            const key = [rowValue, p.col.colKey].join('__');\n            const errorList = errorListMap[key];\n            errorList && (cellProps.errors = errorList);\n          }\n          if (props.editableCellState) {\n            cellProps.readonly = !props.editableCellState(p);\n          }\n          return <EditableCell {...cellProps} />;\n        };\n      }\n      if (item.children?.length) {\n        item.children = getColumns(item.children);\n      }\n      // 多级表头和自定义列配置特殊逻辑：要么子节点不存在，要么子节点长度大于 1，方便做自定义列配置\n      if (!item.children || item.children?.length) {\n        arr.push(item);\n      }\n    }\n    return arr;\n  };\n\n  const tColumns = (() => {\n    const cols = getColumns(columns);\n    if (showExpandIconColumn) {\n      cols.unshift(getExpandColumn());\n    }\n    return cols;\n  })();\n\n  const onInnerPageChange = (pageInfo: PageInfo, newData: Array<TableRowData>) => {\n    props.onPageChange?.(pageInfo, newData);\n    const changeParams: Parameters<TdPrimaryTableProps['onChange']> = [\n      { pagination: pageInfo },\n      { trigger: 'pagination', currentData: newData },\n    ];\n    props.onChange?.(...changeParams);\n  };\n\n  function formatNode(api: string, renderInnerNode: Function, condition: boolean, extra?: { reverse?: boolean }) {\n    if (!condition) return props[api];\n    const innerNode = renderInnerNode();\n    const propsNode = props[api];\n    if (innerNode && !propsNode) return innerNode;\n    if (propsNode && !innerNode) return propsNode;\n    if (innerNode && propsNode) {\n      return extra?.reverse ? (\n        <div>\n          {innerNode}\n          {propsNode}\n        </div>\n      ) : (\n        <div>\n          {propsNode}\n          {innerNode}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  const isColumnController = !!(columnController && Object.keys(columnController).length);\n  const placement = isColumnController ? columnController.placement || 'top-right' : '';\n  const isBottomController = isColumnController && placement?.indexOf('bottom') !== -1;\n  const topContent = formatNode('topContent', renderColumnController, isColumnController && !isBottomController);\n  const bottomContent = formatNode('bottomContent', renderColumnController, isBottomController, {\n    reverse: true,\n  });\n  const firstFullRow = formatNode('firstFullRow', renderFirstFilterRow, !hasEmptyCondition);\n  const lastFullRow = formatNode('lastFullRow', renderAsyncLoading, !!props.asyncLoading);\n\n  const baseTableProps = {\n    ...props,\n    rowClassName: tRowClassNames,\n    rowAttributes: tRowAttributes,\n    columns: tColumns,\n    topContent,\n    bottomContent,\n    firstFullRow,\n    lastFullRow,\n    onPageChange: onInnerPageChange,\n    renderExpandedRow: showExpandedRow ? renderExpandedRow : undefined,\n  } as BaseTableProps;\n\n  if (props.expandOnRowClick) {\n    baseTableProps.onRowClick = onInnerExpandRowClick;\n  }\n\n  return (\n    <BaseTable\n      {...baseTableProps}\n      className={classNames(primaryTableClasses, className)}\n      style={style}\n      onLeafColumnsChange={setDragSortColumns}\n    />\n  );\n});\n\nPrimaryTable.displayName = 'PrimaryTable';\n\nPrimaryTable.defaultProps = primaryTableDefaultProps;\n\nexport default PrimaryTable as <T extends TableRowData = TableRowData>(\n  props: PrimaryTableProps<T> & {\n    ref?: React.Ref<PrimaryTableRef>;\n  },\n) => React.ReactElement;\n"],"names":["PrimaryTable","forwardRef","props","ref","columns","columnController","editableRowKeys","style","className","primaryTableRef","useRef","useClassName","classPrefix","tableDraggableClasses","tableBaseClass","tableSelectedClasses","tableSortClasses","useStyle","sizeClassNames","useColumnController","tDisplayColumns","renderColumnController","useRowExpand","showExpandedRow","showExpandIconColumn","getExpandColumn","renderExpandedRow","onInnerExpandRowClick","useSorter","renderSortIcon","useRowSelect","formatToRowSelectColumn","selectedRowClassNames","useFilter","hasEmptyCondition","isTableOverflowHidden","renderFilterIcon","renderFirstFilterRow","useDragSort","isRowHandlerDraggable","isRowDraggable","isColDraggable","setDragSortColumns","useTableHeader","renderTitleWidthIcon","useAsyncLoading","renderAsyncLoading","primaryTableClasses","colDraggable","rowHandlerDraggable","rowDraggable","overflowVisible","tableRowEdit","useEditableRow","errorListMap","editableKeysMap","validateRowData","validateTableData","onRuleChange","clearValidateData","tRowClassNames","tClassNames","rowClassName","filter","v","tRowAttributes","tAttributes","rowAttributes","push","row","get","rowKey","useImperativeHandle","current","getColumns","arr","i","len","item","isDisplayColumn","children","length","includes","colKey","sort","sorter","showSortColumnBgColor","sorts","Array","sortedColumn","find","sortBy","descending","concat","sortColumn","titleContent","renderTitle","ellipsisTitle","title","p","sortIcon","filterIcon","attach","tableContentRef","col","colIndex","ellipsisOverlayClassName","size","edit","component","oldCell","cell","cellProps","cellEmptyContent","onChange","onRowEdit","onValidate","onRowValidate","rowValue","editable","key","join","errorList","errors","editableCellState","readonly","React","createElement","EditableCell","tColumns","cols","unshift","onInnerPageChange","pageInfo","newData","onPageChange","changeParams","pagination","trigger","currentData","formatNode","api","renderInnerNode","condition","extra","innerNode","propsNode","reverse","isColumnController","Object","keys","placement","isBottomController","indexOf","topContent","bottomContent","firstFullRow","lastFullRow","asyncLoading","baseTableProps","expandOnRowClick","onRowClick","BaseTable","classNames","onLeafColumnsChange","displayName","defaultProps","primaryTableDefaultProps"],"mappings":"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"}