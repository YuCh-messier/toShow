/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { useEffect } from 'react';
import useConfig from '../hooks/useConfig.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-ebef14de.js';
import '../_chunks/dep-588efa4a.js';
import '../_chunks/dep-a407cb09.js';
import '../_chunks/dep-dd4cd0af.js';
import '../_chunks/dep-f162740d.js';
import '../_chunks/dep-22eee49a.js';
import '../_chunks/dep-f2b0265c.js';
import '../_chunks/dep-91563b2d.js';
import '../_chunks/dep-3627969a.js';
import '../_chunks/dep-e10ccd97.js';
import '../_chunks/dep-6f568a94.js';
import '../_chunks/dep-646bb331.js';
import '../_chunks/dep-1f71931a.js';
import '../_chunks/dep-3b5c7604.js';
import '../_chunks/dep-51566efd.js';
import '../_chunks/dep-c6a2f197.js';
import '../_chunks/dep-a6b91546.js';
import '../_chunks/dep-5fef4495.js';
import '../_chunks/dep-a97b932f.js';
import '../_chunks/dep-9e2d72a2.js';
import '../_chunks/dep-342e02ed.js';
import '../_chunks/dep-a89633b7.js';
import '../_chunks/dep-a91fe24d.js';
import '../_chunks/dep-27e7ca24.js';
import '../_chunks/dep-f40ed698.js';
import '../_chunks/dep-ab50f53f.js';
import '../_chunks/dep-9703c0d5.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';

function useClickOutside(refs, handler, includePopup) {
  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var POPUP_SELECTOR = ".".concat(classPrefix, "-popup");
  useEffect(function () {
    var listener = function listener(event) {
      if (!Array.isArray(refs)) {
        return;
      }

      var elements = [];

      if (includePopup) {
        document.querySelectorAll(POPUP_SELECTOR).forEach(function (ele) {
          elements.push(ele);
        });
      }

      elements = Array.from(new Set(elements));

      if (refs.find(function (ref) {
        var _ref$current;

        return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(event.target);
      }) || elements.find(function (el) {
        return el === null || el === void 0 ? void 0 : el.contains(event.target);
      })) {
        return;
      }

      handler(event);
    };

    document.addEventListener("mousedown", listener);
    document.addEventListener("touchstart", listener);
    return function () {
      document.removeEventListener("mousedown", listener);
      document.removeEventListener("touchstart", listener);
    };
  }, [refs, handler, includePopup]);
}

export { useClickOutside as default };
//# sourceMappingURL=useClickOutside.js.map
