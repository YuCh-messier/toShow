/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-ebef14de.js';
import React, { cloneElement } from 'react';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var wrapDisabledButton = function wrapDisabledButton(children) {
  var _children$props;

  var appendProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (children.type === "button" && children !== null && children !== void 0 && (_children$props = children.props) !== null && _children$props !== void 0 && _children$props.disabled) {
    var _children$props2, _children$props2$styl, _children$props3;

    var displayStyle = (_children$props2 = children.props) !== null && _children$props2 !== void 0 && (_children$props2$styl = _children$props2.style) !== null && _children$props2$styl !== void 0 && _children$props2$styl.display ? children.props.style.display : "inline-block";
    var child = /*#__PURE__*/cloneElement(children, {
      style: _objectSpread(_objectSpread({}, children === null || children === void 0 ? void 0 : (_children$props3 = children.props) === null || _children$props3 === void 0 ? void 0 : _children$props3.style), {}, {
        pointerEvents: "none"
      })
    });
    return /* @__PURE__ */React.createElement("span", _objectSpread(_objectSpread({}, appendProps), {}, {
      style: {
        display: displayStyle,
        cursor: "not-allowed"
      }
    }), child);
  }

  return null;
};

export { wrapDisabledButton as default };
//# sourceMappingURL=wrapDisabledButton.js.map
