/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../../_chunks/dep-2baf8638.js';
import { useCallback } from 'react';
import useConfig from '../../hooks/useConfig.js';
import '../../_chunks/dep-24599104.js';
import '../../config-provider/ConfigContext.js';
import '../../_chunks/dep-ebef14de.js';
import '../../_chunks/dep-588efa4a.js';
import '../../_chunks/dep-a407cb09.js';
import '../../_chunks/dep-dd4cd0af.js';
import '../../_chunks/dep-f162740d.js';
import '../../_chunks/dep-22eee49a.js';
import '../../_chunks/dep-f2b0265c.js';
import '../../_chunks/dep-91563b2d.js';
import '../../_chunks/dep-3627969a.js';
import '../../_chunks/dep-e10ccd97.js';
import '../../_chunks/dep-6f568a94.js';
import '../../_chunks/dep-646bb331.js';
import '../../_chunks/dep-1f71931a.js';
import '../../_chunks/dep-3b5c7604.js';
import '../../_chunks/dep-51566efd.js';
import '../../_chunks/dep-c6a2f197.js';
import '../../_chunks/dep-a6b91546.js';
import '../../_chunks/dep-5fef4495.js';
import '../../_chunks/dep-a97b932f.js';
import '../../_chunks/dep-9e2d72a2.js';
import '../../_chunks/dep-342e02ed.js';
import '../../_chunks/dep-a89633b7.js';
import '../../_chunks/dep-a91fe24d.js';
import '../../_chunks/dep-27e7ca24.js';
import '../../_chunks/dep-f40ed698.js';
import '../../_chunks/dep-ab50f53f.js';
import '../../_chunks/dep-9703c0d5.js';
import '../../locale/zh_CN.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../_common/js/global-config/default-config.js';

function usePrefixClass() {
  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  return useCallback(function () {
    var className = "";

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    args.forEach(function (item, index) {
      if (item && index > 0) className = className.concat(" ");

      if (item instanceof Array) {
        var _item = _slicedToArray(item, 3),
            block = _item[0],
            element = _item[1],
            modifier = _item[2];

        className = className.concat(classPrefix, "-", block);
        if (element) className = className.concat("__", element);
        if (modifier) className = className.concat("--", modifier);
      } else if (typeof item === "string") {
        className = className.concat(classPrefix, "-", item);
      }
    });
    return className;
  }, [classPrefix]);
}

export { usePrefixClass as default };
//# sourceMappingURL=usePrefixClass.js.map
