/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-ebef14de.js';
import classNames from 'classnames';
import React, { useMemo } from 'react';
import { i as isObject_1 } from '../_chunks/dep-e10ccd97.js';
import { Tabs } from '../tabs/index.js';
import useConfig from '../hooks/useConfig.js';
import useMenuContext from './hooks/useMenuContext.js';
import { MenuContext } from './MenuContext.js';
import checkSubMenuActive from './_util/checkSubMenuActive.js';
import '../_chunks/dep-3627969a.js';
import '../_chunks/dep-a407cb09.js';
import '../tabs/Tabs.js';
import '../_chunks/dep-2baf8638.js';
import '../_chunks/dep-24599104.js';
import '../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../tabs/TabNav.js';
import 'tdesign-icons-react';
import '../_chunks/dep-622322f2.js';
import '../_chunks/dep-6f568a94.js';
import '../_chunks/dep-91563b2d.js';
import '../_chunks/dep-abf310d4.js';
import '../_chunks/dep-1a0fcc8a.js';
import '../_chunks/dep-c6a2f197.js';
import '../_util/noop.js';
import '../tabs/useTabClass.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-588efa4a.js';
import '../_chunks/dep-dd4cd0af.js';
import '../_chunks/dep-f162740d.js';
import '../_chunks/dep-22eee49a.js';
import '../_chunks/dep-f2b0265c.js';
import '../_chunks/dep-646bb331.js';
import '../_chunks/dep-1f71931a.js';
import '../_chunks/dep-3b5c7604.js';
import '../_chunks/dep-51566efd.js';
import '../_chunks/dep-a6b91546.js';
import '../_chunks/dep-5fef4495.js';
import '../_chunks/dep-a97b932f.js';
import '../_chunks/dep-9e2d72a2.js';
import '../_chunks/dep-342e02ed.js';
import '../_chunks/dep-a89633b7.js';
import '../_chunks/dep-a91fe24d.js';
import '../_chunks/dep-27e7ca24.js';
import '../_chunks/dep-f40ed698.js';
import '../_chunks/dep-ab50f53f.js';
import '../_chunks/dep-9703c0d5.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import '../tabs/TabNavItem.js';
import '../_util/useRipple.js';
import '../_util/useAnimation.js';
import '../_util/setStyle.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-2968ca73.js';
import '../_util/easing.js';
import '../hooks/useGlobalIcon.js';
import '../tabs/TabBar.js';
import '../_common/js/tabs/base.js';
import '../tabs/TabPanel.js';
import '../tabs/defaultProps.js';
import '../tabs/style/index.js';
import '../tabs/type.js';
import '../_chunks/dep-88be14a4.js';
import './_util/checkSubMenuChildExpanded.js';
import './_util/type.js';
import './_util/checkMenuType.js';
import './_util/checkSubMenuChildrenActive.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var TabPanel = Tabs.TabPanel;

var HeadMenu = function HeadMenu(props) {
  var children = props.children,
      className = props.className,
      _props$theme = props.theme,
      theme = _props$theme === void 0 ? "light" : _props$theme,
      style = props.style,
      logo = props.logo,
      operations = props.operations;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useMenuContext = useMenuContext(_objectSpread(_objectSpread({}, props), {}, {
    children: children,
    mode: "title"
  })),
      value = _useMenuContext.value;

  var childList = useMemo(function () {
    if (value.expandType === "popup") return null;
    var activeMenu = checkSubMenuActive(children, value.active);
    if (!activeMenu) return null;
    var child = activeMenu.props.children;
    if (Array.isArray(child)) return child;
    if (isObject_1(child)) return [child];
    return activeMenu.props.children;
  }, [children, value.expandType, value.active]);
  var currentChildListValues = (childList === null || childList === void 0 ? void 0 : childList.length) > 0 ? childList.map(function (item) {
    return item.props.value;
  }) : [];
  return /* @__PURE__ */React.createElement(MenuContext.Provider, {
    value: value
  }, /* @__PURE__ */React.createElement("div", {
    className: classNames("".concat(classPrefix, "-head-menu"), "".concat(classPrefix, "-menu--").concat(theme), className),
    style: _objectSpread({}, style)
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-head-menu__inner")
  }, logo && /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-menu__logo")
  }, logo), /* @__PURE__ */React.createElement("ul", {
    className: "".concat(classPrefix, "-menu")
  }, children), operations && /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-menu__operations")
  }, operations)), (childList === null || childList === void 0 ? void 0 : childList.length) > 0 && /* @__PURE__ */React.createElement("ul", {
    className: "".concat(classPrefix, "-head-menu__submenu ").concat(classPrefix, "-submenu")
  }, /* @__PURE__ */React.createElement(Tabs, {
    value: currentChildListValues.includes(value.active) ? value.active : currentChildListValues[0],
    onChange: value.onChange
  }, childList.map(function (_ref) {
    var props2 = _ref.props;
    return /* @__PURE__ */React.createElement(TabPanel, {
      value: props2.value,
      key: props2.value,
      label: props2.children
    });
  })))));
};

export { HeadMenu as default };
//# sourceMappingURL=HeadMenu.js.map
