/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-ebef14de.js';
import { _ as _objectWithoutProperties } from '../_chunks/dep-fe234c83.js';
import React from 'react';
import classNames from 'classnames';
import useConfig from '../hooks/useConfig.js';
import forwardRefWithStatics from '../_util/forwardRefWithStatics.js';
import BreadcrumbItem from './BreadcrumbItem.js';
import { BreadcrumbContext } from './BreadcrumbContext.js';
import { breadcrumbDefaultProps } from './defaultProps.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-588efa4a.js';
import '../_chunks/dep-a407cb09.js';
import '../_chunks/dep-dd4cd0af.js';
import '../_chunks/dep-f162740d.js';
import '../_chunks/dep-22eee49a.js';
import '../_chunks/dep-f2b0265c.js';
import '../_chunks/dep-91563b2d.js';
import '../_chunks/dep-3627969a.js';
import '../_chunks/dep-e10ccd97.js';
import '../_chunks/dep-6f568a94.js';
import '../_chunks/dep-646bb331.js';
import '../_chunks/dep-1f71931a.js';
import '../_chunks/dep-3b5c7604.js';
import '../_chunks/dep-51566efd.js';
import '../_chunks/dep-c6a2f197.js';
import '../_chunks/dep-a6b91546.js';
import '../_chunks/dep-5fef4495.js';
import '../_chunks/dep-a97b932f.js';
import '../_chunks/dep-9e2d72a2.js';
import '../_chunks/dep-342e02ed.js';
import '../_chunks/dep-a89633b7.js';
import '../_chunks/dep-a91fe24d.js';
import '../_chunks/dep-27e7ca24.js';
import '../_chunks/dep-f40ed698.js';
import '../_chunks/dep-ab50f53f.js';
import '../_chunks/dep-9703c0d5.js';
import '../locale/zh_CN.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_common/js/global-config/default-config.js';
import 'hoist-non-react-statics';
import 'tdesign-icons-react';
import '../hooks/useGlobalIcon.js';
import '../_util/useCommonClassName.js';

var _excluded = ["children", "options", "separator", "maxItemWidth", "className"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Breadcrumb = forwardRefWithStatics(function (props, ref) {
  var children = props.children,
      options = props.options,
      separator = props.separator,
      maxItemWidth = props.maxItemWidth,
      className = props.className,
      restProps = _objectWithoutProperties(props, _excluded);

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var content = children;

  if (options && options.length) {
    content = options.map(function (option, index) {
      return /* @__PURE__ */React.createElement(BreadcrumbItem, {
        key: index,
        maxWidth: option.maxWidth,
        disabled: option.disabled,
        href: option.href,
        target: option.target,
        to: option.to,
        router: option.router,
        replace: option.replace,
        separator: separator,
        maxItemWidth: maxItemWidth
      }, option.content || option.children);
    });
  }

  return /* @__PURE__ */React.createElement(BreadcrumbContext.Provider, {
    value: {
      maxItemWidthInContext: maxItemWidth,
      separator: separator
    }
  }, /* @__PURE__ */React.createElement("div", _objectSpread({
    ref: ref,
    className: classNames("".concat(classPrefix, "-breadcrumb"), className)
  }, restProps), content));
}, {
  BreadcrumbItem: BreadcrumbItem
});
Breadcrumb.displayName = "Breadcrumb";
Breadcrumb.defaultProps = breadcrumbDefaultProps;

export { Breadcrumb as default };
//# sourceMappingURL=Breadcrumb.js.map
