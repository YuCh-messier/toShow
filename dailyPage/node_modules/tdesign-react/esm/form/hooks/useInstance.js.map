{"version":3,"file":"useInstance.js","sources":["../../../src/form/hooks/useInstance.tsx"],"sourcesContent":["import isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nimport merge from 'lodash/merge';\nimport type {\n  TdFormProps,\n  FormValidateResult,\n  FormResetParams,\n  FormValidateMessage,\n  AllValidateResult,\n  NamePath,\n} from '../type';\nimport useConfig from '../../hooks/useConfig';\nimport { getMapValue, travelMapFromObject, calcFieldValue } from '../utils';\nimport log from '../../_common/js/log';\n\n// 检测是否需要校验 默认全量校验\nfunction needValidate(name: string, fields: string[]) {\n  if (!fields || !Array.isArray(fields)) return true;\n  return fields.indexOf(name) !== -1;\n}\n\n// 整理校验结果\nfunction formatValidateResult(validateResultList) {\n  const result = validateResultList.reduce((r, err) => Object.assign(r || {}, err), {});\n  Object.keys(result).forEach((key) => {\n    if (result[key] === true) {\n      delete result[key];\n    } else {\n      result[key] = result[key].filter((fr: AllValidateResult) => fr.result === false);\n    }\n\n    // 整理嵌套数据\n    if (result[key] && key.includes(',')) {\n      const keyList = key.split(',');\n      const fieldValue = calcFieldValue(keyList, result[key]);\n      merge(result, fieldValue);\n      delete result[key];\n    }\n  });\n  return isEmpty(result) ? true : result;\n}\n\nexport default function useInstance(props: TdFormProps, formRef, formMapRef: React.MutableRefObject<Map<any, any>>) {\n  const { classPrefix } = useConfig();\n  const FORM_ITEM_CLASS_PREFIX = `${classPrefix}-form-item__`;\n\n  const { scrollToFirstError, preventSubmitDefault = true, onSubmit } = props;\n\n  // 获取第一个错误表单\n  function getFirstError(r: FormValidateResult<FormData>) {\n    if (r === true) return;\n    const [firstKey] = Object.keys(r);\n    if (scrollToFirstError) {\n      scrollTo(`.${FORM_ITEM_CLASS_PREFIX + firstKey}`);\n    }\n    return r[firstKey][0]?.message;\n  }\n\n  // 校验不通过时，滚动到第一个错误表单\n  function scrollTo(selector: string) {\n    const dom = formRef.current.querySelector?.(selector);\n    const behavior = scrollToFirstError as ScrollBehavior;\n    dom && dom.scrollIntoView({ behavior });\n  }\n\n  // 对外方法 手动提交表单\n  function submit(e?: React.FormEvent<HTMLFormElement>) {\n    if (preventSubmitDefault) {\n      e?.preventDefault?.();\n      e?.stopPropagation?.();\n    }\n    validate().then((r) => {\n      const firstError = getFirstError(r);\n      onSubmit?.({ validateResult: r, firstError, e });\n    });\n  }\n\n  // 对外方法，该方法会触发全部表单组件错误信息显示\n  async function validate(param?: Record<string, any>): Promise<FormValidateResult<FormData>> {\n    const { fields, trigger = 'all', showErrorMessage } = param || {};\n    const list = [...formMapRef.current.values()]\n      .filter(\n        (formItemRef) => isFunction(formItemRef?.current?.validate) && needValidate(formItemRef?.current?.name, fields),\n      )\n      .map((formItemRef) => formItemRef?.current.validate(trigger, showErrorMessage));\n\n    const validateList = await Promise.all(list);\n    return formatValidateResult(validateList);\n  }\n\n  // 对外方法，该方法只会校验不会触发信息提示\n  async function validateOnly(param?: Record<string, any>): Promise<FormValidateResult<FormData>> {\n    const { fields, trigger = 'all' } = param || {};\n    const list = [...formMapRef.current.values()]\n      .filter(\n        (formItemRef) =>\n          isFunction(formItemRef?.current?.validateOnly) && needValidate(formItemRef?.current?.name, fields),\n      )\n      .map((formItemRef) => formItemRef?.current.validateOnly?.(trigger));\n\n    const validateList = await Promise.all(list);\n    return formatValidateResult(validateList);\n  }\n\n  // 对外方法，获取对应 formItem 的值\n  function getFieldValue(name: NamePath) {\n    if (!name) return null;\n\n    const formItemRef = getMapValue(name, formMapRef);\n    return formItemRef?.current.getValue?.();\n  }\n\n  // 对外方法，获取一组字段名对应的值，当调用 getFieldsValue(true) 时返回所有值\n  function getFieldsValue(nameList: string[] | boolean) {\n    const fieldsValue = {};\n\n    if (nameList === true) {\n      for (const [name, formItemRef] of formMapRef.current.entries()) {\n        const fieldValue = calcFieldValue(name, formItemRef?.current.getValue?.());\n        merge(fieldsValue, fieldValue);\n      }\n    } else {\n      if (!Array.isArray(nameList)) {\n        log.error('Form', '`getFieldsValue` 参数需要 Array 类型');\n        return {};\n      }\n\n      nameList.forEach((name) => {\n        const formItemRef = getMapValue(name, formMapRef);\n        if (!formItemRef) return;\n\n        const fieldValue = calcFieldValue(name, formItemRef?.current.getValue?.());\n        merge(fieldsValue, fieldValue);\n      });\n    }\n    return fieldsValue;\n  }\n\n  // 对外方法，设置对应 formItem 的值\n  function setFieldsValue(fields = {}) {\n    travelMapFromObject(fields, formMapRef, (formItemRef, fieldValue) => {\n      formItemRef?.current?.setValue?.(fieldValue);\n    });\n  }\n\n  // 对外方法，设置对应 formItem 的数据\n  function setFields(fields = []) {\n    if (!Array.isArray(fields)) throw new Error('setFields 参数需要 Array 类型');\n\n    fields.forEach((field) => {\n      const { name, ...restFields } = field;\n      const formItemRef = getMapValue(name, formMapRef);\n\n      formItemRef?.current?.setField({ ...restFields });\n    });\n  }\n\n  // 对外方法，重置对应 formItem 的数据\n  function reset(params: FormResetParams<FormData>) {\n    // reset all\n    if (typeof params === 'undefined') {\n      [...formMapRef.current.values()].forEach((formItemRef) => {\n        formItemRef?.current?.resetField();\n      });\n    } else {\n      const { type = 'initial', fields = [] } = params;\n\n      fields.forEach((name) => {\n        const formItemRef = getMapValue(name, formMapRef);\n        formItemRef?.current?.resetField(type);\n      });\n    }\n  }\n\n  // 对外方法，重置对应 formItem 的状态\n  function clearValidate(fields?: Array<keyof FormData>) {\n    // reset all\n    if (typeof fields === 'undefined') {\n      [...formMapRef.current.values()].forEach((formItemRef) => {\n        formItemRef?.current?.resetValidate();\n      });\n    } else {\n      if (!Array.isArray(fields)) throw new Error('clearValidate 参数需要 Array 类型');\n\n      fields.forEach((name) => {\n        const formItemRef = getMapValue(name, formMapRef);\n        formItemRef?.current?.resetValidate();\n      });\n    }\n  }\n\n  // 对外方法，设置 formItem 的错误信息\n  function setValidateMessage(message: FormValidateMessage<FormData>) {\n    travelMapFromObject(message, formMapRef, (formItemRef, fieldValue) => {\n      formItemRef?.current?.setValidateMessage?.(fieldValue);\n    });\n  }\n\n  return {\n    submit,\n    reset,\n    validate,\n    validateOnly,\n    clearValidate,\n    setFields,\n    setFieldsValue,\n    setValidateMessage,\n    getFieldValue,\n    getFieldsValue,\n    currentElement: formRef.current,\n    getCurrentElement: () => formRef.current,\n  };\n}\n"],"names":["needValidate","name","fields","Array","isArray","indexOf","formatValidateResult","validateResultList","result","reduce","r","err","Object","assign","keys","forEach","key","filter","fr","includes","keyList","split","fieldValue","calcFieldValue","merge","isEmpty","useInstance","props","formRef","formMapRef","useConfig","classPrefix","FORM_ITEM_CLASS_PREFIX","scrollToFirstError","preventSubmitDefault","onSubmit","getFirstError","firstKey","scrollTo","message","selector","dom","current","querySelector","behavior","scrollIntoView","submit","e","preventDefault","stopPropagation","validate","then","firstError","validateResult","_regeneratorRuntime","param","trigger","showErrorMessage","list","values","formItemRef","isFunction","map","Promise","all","validateList","validateOnly","getFieldValue","getMapValue","getValue","getFieldsValue","nameList","fieldsValue","entries","log","error","setFieldsValue","travelMapFromObject","setValue","setFields","Error","field","restFields","setField","reset","params","resetField","type","clearValidate","resetValidate","setValidateMessage","currentElement","getCurrentElement"],"mappings":"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"}