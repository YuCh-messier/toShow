{"version":3,"file":"useUpload.js","sources":["../../../src/upload/hooks/useUpload.ts"],"sourcesContent":["import { useRef, useState, useMemo, ChangeEventHandler, DragEvent, MouseEvent, useEffect } from 'react';\nimport merge from 'lodash/merge';\nimport { SizeLimitObj, TdUploadProps, UploadChangeContext, UploadFile, UploadRemoveContext } from '../type';\nimport {\n  getFilesAndErrors,\n  validateFile,\n  upload,\n  getTriggerTextField,\n  getDisplayFiles,\n} from '../../_common/js/upload/main';\nimport { getFileUrlByFileRaw } from '../../_common/js/upload/utils';\nimport useControlled from '../../hooks/useControlled';\nimport { InnerProgressContext, OnResponseErrorContext, SuccessContext } from '../../_common/js/upload/types';\nimport useConfig from '../../hooks/useConfig';\nimport { useLocaleReceiver } from '../../locale/LocalReceiver';\n\n/**\n * 上传组件全部逻辑，方便脱离 UI，自定义 UI 组件\n */\nexport default function useUpload(props: TdUploadProps) {\n  const inputRef = useRef<HTMLInputElement>();\n  // TODO: Form 表单控制上传组件是否禁用\n  const { disabled, autoUpload, isBatchUpload } = props;\n  const { classPrefix } = useConfig();\n  const [globalLocale, t] = useLocaleReceiver('upload');\n  const [uploadValue, setUploadValue] = useControlled(props, 'files', props.onChange);\n  const xhrReq = useRef<{ files: UploadFile[]; xhrReq: XMLHttpRequest }[]>([]);\n  const [toUploadFiles, setToUploadFiles] = useState<UploadFile[]>([]);\n  const [sizeOverLimitMessage, setSizeOverLimitMessage] = useState('');\n\n  const locale = useMemo(() => merge({}, globalLocale, props.locale), [globalLocale, props.locale]);\n\n  const tipsClasses = `${classPrefix}-upload__tips ${classPrefix}-size-s`;\n  const errorClasses = [tipsClasses].concat(`${classPrefix}-upload__tips-error`);\n\n  // 单文件场景：触发元素文本\n  const triggerUploadText = useMemo(() => {\n    const field = getTriggerTextField({\n      isBatchUpload,\n      multiple: props.multiple,\n      status: uploadValue?.[0]?.status,\n      autoUpload,\n    });\n    return locale.triggerUploadText[field];\n  }, [locale.triggerUploadText, uploadValue, props.multiple, isBatchUpload, autoUpload]);\n\n  const [uploading, setUploading] = useState(false);\n\n  // 文件列表显示的内容（自动上传和非自动上传有所不同）\n  const [displayFiles, setDisplayFiles] = useState(uploadValue);\n  useEffect(() => {\n    const files = getDisplayFiles({\n      multiple: props.multiple,\n      toUploadFiles,\n      uploadValue: [...uploadValue],\n      autoUpload,\n      isBatchUpload,\n    });\n    setDisplayFiles(files);\n  }, [props.multiple, toUploadFiles, uploadValue, autoUpload, isBatchUpload]);\n\n  const updateProgress = (\n    p: InnerProgressContext | SuccessContext | OnResponseErrorContext,\n    toFiles: UploadFile[],\n    trigger: 'progress' | 'progress-success' | 'progress-fail',\n  ) => {\n    if (props.autoUpload) {\n      setToUploadFiles([...toFiles]);\n    } else {\n      setUploadValue([...uploadValue], {\n        e: p.event,\n        trigger,\n        index: uploadValue.length,\n        file: p.files[0],\n      });\n    }\n  };\n\n  const onResponseError = (p: OnResponseErrorContext, toFiles?: UploadFile[]) => {\n    if (!p || !p.files || !p.files[0]) return;\n    if (toFiles) {\n      updateProgress(p, toFiles, 'progress-fail');\n    }\n    const { response, event, files } = p;\n    props.onOneFileFail?.({\n      e: event,\n      file: files?.[0],\n      currentFiles: files,\n      failedFiles: files,\n      response,\n    });\n  };\n\n  const onResponseProgress = (p: InnerProgressContext, toFiles: UploadFile[]) => {\n    updateProgress(p, toFiles, 'progress');\n    props.onProgress?.({\n      e: p.event,\n      file: p.file,\n      currentFiles: p.files,\n      percent: p.percent,\n      type: p.type,\n    });\n  };\n\n  // 只有多个上传请求同时触发时才需 onOneFileSuccess\n  const onResponseSuccess = (p: SuccessContext, toFiles: UploadFile[]) => {\n    if (props.multiple && !props.uploadAllFilesInOneRequest) {\n      updateProgress(p, toFiles, 'progress-success');\n      props.onOneFileSuccess?.({\n        e: p.event,\n        file: p.files[0],\n        response: p.response,\n      });\n    }\n  };\n\n  function getSizeLimitError(sizeLimitObj: SizeLimitObj) {\n    const limit = sizeLimitObj;\n    return limit.message\n      ? t(limit.message, { sizeLimit: limit.size })\n      : `${t(locale.sizeLimitMessage, { sizeLimit: limit.size })} ${limit.unit}`;\n  }\n\n  const handleNonAutoUpload = (toFiles: UploadFile[]) => {\n    const tmpFiles = props.multiple && !isBatchUpload ? uploadValue.concat(toFiles) : toFiles;\n    // 图片需要本地预览\n    if (['image', 'image-flow'].includes(props.theme)) {\n      const list = tmpFiles.map(\n        (file) =>\n          new Promise((resolve) => {\n            getFileUrlByFileRaw(file.raw).then((url) => {\n              resolve({ ...file, url });\n            });\n          }),\n      );\n      Promise.all(list).then((files) => {\n        setUploadValue(files, {\n          trigger: 'add',\n          index: uploadValue.length,\n          file: files[0],\n        });\n      });\n    } else {\n      setUploadValue(tmpFiles, {\n        trigger: 'add',\n        index: uploadValue.length,\n        file: tmpFiles[0],\n      });\n    }\n    // toUploadFiles.current = [];\n    setToUploadFiles([]);\n  };\n\n  const onFileChange = (files: FileList) => {\n    if (disabled) return;\n    // @ts-ignore\n    props.onSelectChange?.([...files], { currentSelectedFiles: toUploadFiles });\n    validateFile({\n      uploadValue,\n      // @ts-ignore\n      files: [...files],\n      allowUploadDuplicateFile: props.allowUploadDuplicateFile,\n      max: props.max,\n      sizeLimit: props.sizeLimit,\n      isBatchUpload,\n      autoUpload,\n      format: props.format,\n      beforeUpload: props.beforeUpload,\n      beforeAllFilesUpload: props.beforeAllFilesUpload,\n    }).then((args) => {\n      // 自定义全文件校验不通过\n      if (args.validateResult?.type === 'BEFORE_ALL_FILES_UPLOAD') return;\n      // 文件数量校验不通过\n      if (args.lengthOverLimit) {\n        props.onValidate?.({ type: 'FILES_OVER_LENGTH_LIMIT', files: args.files });\n      }\n      // 过滤相同的文件名\n      if (args.hasSameNameFile) {\n        props.onValidate?.({ type: 'FILTER_FILE_SAME_NAME', files: args.files });\n      }\n      // 文件大小校验结果处理\n      if (args.fileValidateList instanceof Array) {\n        const { sizeLimitErrors, toFiles } = getFilesAndErrors(args.fileValidateList, getSizeLimitError);\n        const tmpWaitingFiles = autoUpload ? toFiles : toUploadFiles.concat(toFiles);\n        props.onWaitingUploadFilesChange?.({ files: tmpWaitingFiles, trigger: 'validate' });\n        // 错误信息处理\n        if (sizeLimitErrors[0]) {\n          setSizeOverLimitMessage(sizeLimitErrors[0].file.response.error);\n          props.onValidate?.({ type: 'FILE_OVER_SIZE_LIMIT', files: sizeLimitErrors.map((t) => t.file) });\n        } else {\n          setSizeOverLimitMessage('');\n        }\n        // 如果是自动上传\n        if (autoUpload) {\n          // toUploadFiles.current = tmpWaitingFiles;\n          setToUploadFiles(tmpWaitingFiles);\n          uploadFiles(tmpWaitingFiles);\n        } else {\n          handleNonAutoUpload(tmpWaitingFiles);\n        }\n      }\n    });\n\n    // 清空 <input type=\"file\"> 元素的文件，避免出现重复文件无法选择的情况\n    inputRef.current.value = null;\n  };\n\n  const onNormalFileChange: ChangeEventHandler<HTMLInputElement> = (e) => {\n    onFileChange?.(e.target.files);\n  };\n\n  function onDragFileChange(e: DragEvent<HTMLDivElement>) {\n    onFileChange?.(e.dataTransfer.files);\n  }\n\n  /**\n   * 上传文件\n   * 对外暴露方法，修改时需谨慎\n   */\n  function uploadFiles(toFiles?: UploadFile[]) {\n    const notUploadedFiles = uploadValue.filter((t) => t.status !== 'success');\n    const files = autoUpload ? toFiles : notUploadedFiles;\n    if (!files || !files.length) return;\n    xhrReq.current = [];\n    setUploading(true);\n    upload({\n      action: props.action,\n      headers: props.headers,\n      withCredentials: props.withCredentials,\n      uploadedFiles: uploadValue,\n      toUploadFiles: files,\n      multiple: props.multiple,\n      isBatchUpload,\n      autoUpload,\n      uploadAllFilesInOneRequest: props.uploadAllFilesInOneRequest,\n      useMockProgress: props.useMockProgress,\n      data: props.data,\n      requestMethod: props.requestMethod,\n      formatRequest: props.formatRequest,\n      formatResponse: props.formatResponse,\n      onResponseProgress: (p) => onResponseProgress(p, toFiles),\n      onResponseSuccess: (p) => onResponseSuccess(p, toFiles),\n      onResponseError: (p) => onResponseError(p, toFiles),\n      setXhrObject: (xhr) => {\n        if (xhr.files[0]?.raw && xhrReq.current.find((item) => item.files[0].raw === xhr.files[0].raw)) return;\n        xhrReq.current = xhrReq.current.concat(xhr);\n      },\n    }).then(\n      ({ status, data, list, failedFiles }) => {\n        setUploading(false);\n        if (status === 'success') {\n          // 全部上传成功后，一次性添加（非自动上传已在上一步添加）\n          if (props.autoUpload) {\n            setUploadValue([...data.files], {\n              trigger: 'add',\n              file: data.files[0],\n            });\n          }\n          props.onSuccess?.({\n            fileList: data.files,\n            currentFiles: files,\n            file: files[0],\n            // 只有全部请求完成后，才会存在该字段\n            results: list?.map((t) => t.data),\n            // 单文件单请求有一个 response，多文件多请求有多个 response\n            response: data.response || list.map((t) => t.data.response),\n          });\n          xhrReq.current = [];\n        } else if (failedFiles?.[0]) {\n          props.onFail?.({\n            e: data.event,\n            file: failedFiles[0],\n            failedFiles,\n            currentFiles: files,\n            response: data.response,\n          });\n        }\n\n        // 非自动上传，文件都在 uploadValue，不涉及 toUploadFiles\n        if (autoUpload) {\n          setToUploadFiles(failedFiles);\n          props.onWaitingUploadFilesChange?.({ files: failedFiles, trigger: 'uploaded' });\n        }\n      },\n      (p) => {\n        onResponseError(p);\n        setUploading(false);\n      },\n    );\n  }\n\n  function onRemove(p: UploadRemoveContext) {\n    setSizeOverLimitMessage('');\n    const changePrams: UploadChangeContext = {\n      e: p.e,\n      trigger: 'remove',\n      index: p.index,\n      file: p.file,\n    };\n    // remove all files for batchUpload\n    if (isBatchUpload || !props.multiple) {\n      props.onWaitingUploadFilesChange?.({ files: [], trigger: 'remove' });\n      setUploadValue([], changePrams);\n      // toUploadFiles.current = [];\n      setToUploadFiles([]);\n      xhrReq.current = [];\n    } else if (!props.autoUpload) {\n      uploadValue.splice(p.index, 1);\n      setUploadValue([...uploadValue], changePrams);\n    } else if (p.index < uploadValue.length) {\n      uploadValue.splice(p.index, 1);\n      setUploadValue([...uploadValue], changePrams);\n    } else {\n      const tmpFiles = [...toUploadFiles];\n      tmpFiles.splice(p.index - uploadValue.length, 1);\n      // toUploadFiles.current = [...tmpFiles];\n      setToUploadFiles([...tmpFiles]);\n      props.onWaitingUploadFilesChange?.({ files: [...tmpFiles], trigger: 'remove' });\n    }\n    props.onRemove?.(p);\n  }\n\n  const triggerUpload = () => {\n    if (disabled) return;\n    (inputRef.current as HTMLInputElement).click();\n  };\n\n  const cancelUpload = (context?: { file?: UploadFile; e?: MouseEvent<HTMLElement> }) => {\n    xhrReq.current?.forEach((item) => {\n      item.xhrReq?.abort();\n    });\n    setUploading(false);\n\n    if (autoUpload) {\n      // toUploadFiles.current = toUploadFiles.current.map((item) => ({ ...item, status: 'waiting' }));\n      setToUploadFiles(toUploadFiles.map((item) => ({ ...item, status: 'waiting' })));\n    } else {\n      setUploadValue(\n        uploadValue.map((item) => {\n          if (item.status !== 'success') {\n            return { ...item, status: 'waiting' };\n          }\n          return item;\n        }),\n        { trigger: 'abort' },\n      );\n    }\n\n    if (context?.file) {\n      onRemove?.({ file: context.file, e: context.e, index: 0 });\n    }\n  };\n\n  return {\n    t,\n    locale,\n    classPrefix,\n    triggerUploadText,\n    toUploadFiles,\n    uploadValue,\n    displayFiles,\n    sizeOverLimitMessage,\n    uploading,\n    tipsClasses,\n    errorClasses,\n    inputRef,\n    disabled,\n    xhrReq,\n    uploadFiles,\n    onFileChange,\n    onNormalFileChange,\n    onDragFileChange,\n    onRemove,\n    triggerUpload,\n    cancelUpload,\n  };\n}\n"],"names":["useUpload","props","inputRef","useRef","disabled","autoUpload","isBatchUpload","useConfig","classPrefix","useLocaleReceiver","_slicedToArray","globalLocale","t","useControlled","onChange","uploadValue","setUploadValue","xhrReq","useState","toUploadFiles","setToUploadFiles","sizeOverLimitMessage","setSizeOverLimitMessage","locale","useMemo","merge","tipsClasses","errorClasses","concat","triggerUploadText","field","getTriggerTextField","multiple","status","uploading","setUploading","displayFiles","setDisplayFiles","useEffect","files","getDisplayFiles","_toConsumableArray","updateProgress","p","toFiles","trigger","e","event","index","length","file","onResponseError","response","onOneFileFail","currentFiles","failedFiles","onResponseProgress","onProgress","percent","type","onResponseSuccess","uploadAllFilesInOneRequest","onOneFileSuccess","getSizeLimitError","sizeLimitObj","limit","message","sizeLimit","size","sizeLimitMessage","unit","handleNonAutoUpload","tmpFiles","includes","theme","list","map","Promise","resolve","getFileUrlByFileRaw","raw","then","url","all","onFileChange","onSelectChange","currentSelectedFiles","validateFile","allowUploadDuplicateFile","max","format","beforeUpload","beforeAllFilesUpload","args","validateResult","lengthOverLimit","onValidate","hasSameNameFile","fileValidateList","Array","getFilesAndErrors","sizeLimitErrors","tmpWaitingFiles","onWaitingUploadFilesChange","error","uploadFiles","current","value","onNormalFileChange","target","onDragFileChange","dataTransfer","notUploadedFiles","filter","upload","action","headers","withCredentials","uploadedFiles","useMockProgress","data","requestMethod","formatRequest","formatResponse","setXhrObject","xhr","find","item","onSuccess","fileList","results","onFail","onRemove","changePrams","splice","triggerUpload","click","cancelUpload","context","forEach","abort"],"mappings":"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"}