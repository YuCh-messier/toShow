/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../_chunks/dep-3415b40f.js');
var React = require('react');
var classNames = require('classnames');
var tdesignIconsReact = require('tdesign-icons-react');
var hooks_useGlobalIcon = require('../../hooks/useGlobalIcon.js');
var imageViewer_index = require('../../image-viewer/index.js');
var button_index = require('../../button/index.js');
var upload_hooks_useDrag = require('../hooks/useDrag.js');
var _common_js_upload_utils = require('../../_common/js/upload/utils.js');
var loading_index = require('../../loading/index.js');
var link_index = require('../../link/index.js');
require('../../hooks/useConfig.js');
require('../../config-provider/ConfigContext.js');
require('../../_chunks/dep-bbbce181.js');
require('../../_chunks/dep-4c1144f0.js');
require('../../_chunks/dep-be113066.js');
require('../../_chunks/dep-7affd9c7.js');
require('../../_chunks/dep-c15e2539.js');
require('../../_chunks/dep-1ad27019.js');
require('../../_chunks/dep-6c4c2f3e.js');
require('../../_chunks/dep-b282bced.js');
require('../../_chunks/dep-b8187df5.js');
require('../../_chunks/dep-6b7adfaa.js');
require('../../_chunks/dep-bdb568fa.js');
require('../../_chunks/dep-3c510ebe.js');
require('../../_chunks/dep-ffd983b8.js');
require('../../_chunks/dep-bafabd9b.js');
require('../../_chunks/dep-29ecaf93.js');
require('../../_chunks/dep-28bf72fc.js');
require('../../_chunks/dep-72f2b815.js');
require('../../_chunks/dep-46b250c3.js');
require('../../_chunks/dep-6f0ad8f9.js');
require('../../_chunks/dep-901b688e.js');
require('../../_chunks/dep-92d05577.js');
require('../../_chunks/dep-6aeda844.js');
require('../../_chunks/dep-39147135.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../_common/js/global-config/default-config.js');
require('../../image-viewer/ImageViewer.js');
require('../../_chunks/dep-8c98b84c.js');
require('../../_chunks/dep-789d4bfb.js');
require('react-dom');
require('../../_chunks/dep-a6e7c47b.js');
require('../../_chunks/dep-e675c809.js');
require('../../tooltip/index.js');
require('../../tooltip/Tooltip.js');
require('../../popup/index.js');
require('../../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../../hooks/useControlled.js');
require('../../_chunks/dep-f31114fd.js');
require('../../_chunks/dep-eb2281b7.js');
require('../../_chunks/dep-6d1aecc8.js');
require('../../_chunks/dep-93234904.js');
require('../../_chunks/dep-f6abffca.js');
require('../../_util/noop.js');
require('../../_util/useAnimation.js');
require('../../common/Portal.js');
require('../../_util/dom.js');
require('raf');
require('../../_chunks/dep-23aa4ed2.js');
require('../../_util/easing.js');
require('../../popup/hooks/useTrigger.js');
require('react-is');
require('../../popup/utils/ref.js');
require('../../_util/composeRefs.js');
require('../../popup/utils/transition.js');
require('../../_util/useMutationObserver.js');
require('../../_chunks/dep-d26534d4.js');
require('../../_chunks/dep-8afae264.js');
require('../../_util/useWindowSize.js');
require('../../popup/defaultProps.js');
require('../../tooltip/defaultProps.js');
require('../../tooltip/TooltipLite.js');
require('../../_util/useSwitch.js');
require('../../_util/usePersistFn.js');
require('../../_common/js/utils/getPosition.js');
require('../../image-viewer/utils.js');
require('../../dialog/index.js');
require('../../dialog/Dialog.js');
require('../../locale/LocalReceiver.js');
require('../../dialog/RenderDialog.js');
require('../../_util/useLayoutEffect.js');
require('../../_util/useDialogEsc.js');
require('../../_chunks/dep-0944d665.js');
require('../../dialog/defaultProps.js');
require('../../_util/useSetState.js');
require('../../button/Button.js');
require('../../_util/useRipple.js');
require('../../_util/setStyle.js');
require('../../button/defaultProps.js');
require('../../loading/Loading.js');
require('../../loading/gradient.js');
require('../../_common/js/loading/circle-adapter.js');
require('../../_common/js/utils/set-style.js');
require('../../_common/js/utils/helper.js');
require('../../loading/defaultProps.js');
require('../../loading/plugin.js');
require('../../dialog/plugin.js');
require('../../_common/js/log/log.js');
require('../../image-viewer/hooks/useMirror.js');
require('../../image-viewer/hooks/usePosition.js');
require('../../image-viewer/hooks/useIndex.js');
require('../../image-viewer/hooks/useRotate.js');
require('../../image-viewer/hooks/useScale.js');
require('../../image-viewer/hooks/useIconMap.js');
require('../../image-viewer/defaultProps.js');
require('../../image-viewer/hooks/useImageScale.js');
require('../../image-viewer/hooks/useList.js');
require('../../image-viewer/hooks/useViewerScale.js');
require('../../link/Link.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var ImageFlowList = function ImageFlowList(props) {
  var _props$draggable;

  var locale = props.locale,
      uploading = props.uploading,
      disabled = props.disabled,
      displayFiles = props.displayFiles,
      classPrefix = props.classPrefix;
  var uploadPrefix = "".concat(classPrefix, "-upload");

  var _useGlobalIcon = hooks_useGlobalIcon["default"]({
    BrowseIcon: tdesignIconsReact.BrowseIcon,
    DeleteIcon: tdesignIconsReact.DeleteIcon,
    CheckCircleFilledIcon: tdesignIconsReact.CheckCircleFilledIcon,
    ErrorCircleFilledIcon: tdesignIconsReact.ErrorCircleFilledIcon,
    TimeFilledIcon: tdesignIconsReact.TimeFilledIcon
  }),
      BrowseIcon = _useGlobalIcon.BrowseIcon,
      DeleteIcon = _useGlobalIcon.DeleteIcon,
      CheckCircleFilledIcon = _useGlobalIcon.CheckCircleFilledIcon,
      ErrorCircleFilledIcon = _useGlobalIcon.ErrorCircleFilledIcon,
      TimeFilledIcon = _useGlobalIcon.TimeFilledIcon;

  var drag = upload_hooks_useDrag["default"](props.dragEvents);
  var uploadText = React.useMemo(function () {
    if (uploading) return "".concat(locale.progress.uploadingText);
    return locale.triggerUploadText.normal;
  }, [locale, uploading]);
  var draggable = (_props$draggable = props.draggable) !== null && _props$draggable !== void 0 ? _props$draggable : true;
  var dragEvents = draggable ? {
    onDrop: drag.handleDrop,
    onDragEnter: drag.handleDragenter,
    onDragOver: drag.handleDragover,
    onDragLeave: drag.handleDragleave
  } : {};

  var getStatusMap = function getStatusMap() {
    var _locale$progress, _locale$progress2, _locale$progress3, _locale$progress4;

    var iconMap = {
      success: /* @__PURE__ */React__default["default"].createElement(CheckCircleFilledIcon, null),
      fail: /* @__PURE__ */React__default["default"].createElement(ErrorCircleFilledIcon, null),
      progress: /* @__PURE__ */React__default["default"].createElement(loading_index.Loading, null),
      waiting: /* @__PURE__ */React__default["default"].createElement(TimeFilledIcon, null)
    };
    var textMap = {
      success: (_locale$progress = locale.progress) === null || _locale$progress === void 0 ? void 0 : _locale$progress.successText,
      fail: (_locale$progress2 = locale.progress) === null || _locale$progress2 === void 0 ? void 0 : _locale$progress2.failText,
      progress: (_locale$progress3 = locale.progress) === null || _locale$progress3 === void 0 ? void 0 : _locale$progress3.uploadingText,
      waiting: (_locale$progress4 = locale.progress) === null || _locale$progress4 === void 0 ? void 0 : _locale$progress4.waitingText
    };
    return {
      iconMap: iconMap,
      textMap: textMap
    };
  };

  var renderEmpty = function renderEmpty() {
    return /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(uploadPrefix, "__flow-empty")
    }, drag.dragActive ? locale.dragger.dragDropText : locale.dragger.clickAndDragText);
  };

  var renderImgItem = function renderImgItem(file, index) {
    var _getStatusMap = getStatusMap(),
        iconMap = _getStatusMap.iconMap,
        textMap = _getStatusMap.textMap;

    return /* @__PURE__ */React__default["default"].createElement("li", {
      className: "".concat(uploadPrefix, "__card-item"),
      key: file.name + index + file.percent + file.status
    }, /* @__PURE__ */React__default["default"].createElement("div", {
      className: classNames__default["default"](["".concat(uploadPrefix, "__card-content"), defineProperty._defineProperty({}, "".concat(classPrefix, "-is-bordered"), file.status !== "waiting")])
    }, ["fail", "progress"].includes(file.status) && /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(uploadPrefix, "__card-status-wrap")
    }, iconMap[file.status], /* @__PURE__ */React__default["default"].createElement("p", null, textMap[file.status])), (["waiting", "success"].includes(file.status) || !file.status && file.url) && /* @__PURE__ */React__default["default"].createElement("img", {
      className: "".concat(uploadPrefix, "__card-image"),
      src: file.url || "//tdesign.gtimg.com/tdesign-default-img.png"
    }), /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(uploadPrefix, "__card-mask")
    }, file.url && /* @__PURE__ */React__default["default"].createElement("span", {
      className: "".concat(uploadPrefix, "__card-mask-item")
    }, /* @__PURE__ */React__default["default"].createElement(imageViewer_index.ImageViewer, {
      trigger: function trigger(_ref2) {
        var onOpen = _ref2.onOpen;
        return /* @__PURE__ */React__default["default"].createElement(BrowseIcon, {
          onClick: function onClick(e) {
            var _props$onPreview;

            (_props$onPreview = props.onPreview) === null || _props$onPreview === void 0 ? void 0 : _props$onPreview.call(props, {
              file: file,
              index: index,
              e: e
            });
            onOpen();
          }
        });
      },
      images: displayFiles.map(function (t) {
        return t.url;
      }),
      defaultIndex: index
    }), /* @__PURE__ */React__default["default"].createElement("span", {
      className: "".concat(uploadPrefix, "__card-mask-item-divider")
    })), !disabled && /* @__PURE__ */React__default["default"].createElement("span", {
      className: "".concat(uploadPrefix, "__card-mask-item"),
      onClick: function onClick(e) {
        return props.onRemove({
          e: e,
          index: index,
          file: file
        });
      }
    }, /* @__PURE__ */React__default["default"].createElement(DeleteIcon, null)))), /* @__PURE__ */React__default["default"].createElement("p", {
      className: "".concat(uploadPrefix, "__card-name")
    }, _common_js_upload_utils.abridgeName(file.name)));
  };

  var renderStatus = function renderStatus(file) {
    var _getStatusMap2 = getStatusMap(),
        iconMap = _getStatusMap2.iconMap,
        textMap = _getStatusMap2.textMap;

    return /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(uploadPrefix, "__flow-status")
    }, iconMap[file.status], /* @__PURE__ */React__default["default"].createElement("span", null, textMap[file.status], file.status === "progress" ? " ".concat(file.percent, "%") : ""));
  };

  var renderNormalActionCol = function renderNormalActionCol(file, index) {
    var _locale$triggerUpload;

    return /* @__PURE__ */React__default["default"].createElement("td", null, /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
      theme: "primary",
      variant: "text",
      onClick: function onClick(e) {
        return props.onRemove({
          e: e,
          index: index,
          file: file
        });
      }
    }, locale === null || locale === void 0 ? void 0 : (_locale$triggerUpload = locale.triggerUploadText) === null || _locale$triggerUpload === void 0 ? void 0 : _locale$triggerUpload["delete"]));
  };

  var renderBatchActionCol = function renderBatchActionCol(index) {
    var _locale$triggerUpload2;

    return index === 0 ? /* @__PURE__ */React__default["default"].createElement("td", {
      rowSpan: displayFiles.length,
      className: "".concat(uploadPrefix, "__flow-table__batch-row")
    }, /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
      theme: "primary",
      variant: "text",
      onClick: function onClick(e) {
        return props.onRemove({
          e: e,
          index: -1,
          file: null
        });
      }
    }, locale === null || locale === void 0 ? void 0 : (_locale$triggerUpload2 = locale.triggerUploadText) === null || _locale$triggerUpload2 === void 0 ? void 0 : _locale$triggerUpload2["delete"])) : null;
  };

  var renderFileList = function renderFileList() {
    var _locale$file, _locale$file2, _locale$file3, _locale$file4;

    return /* @__PURE__ */React__default["default"].createElement("table", _objectSpread({
      className: "".concat(uploadPrefix, "__flow-table")
    }, dragEvents), /* @__PURE__ */React__default["default"].createElement("thead", null, /* @__PURE__ */React__default["default"].createElement("tr", null, /* @__PURE__ */React__default["default"].createElement("th", null, (_locale$file = locale.file) === null || _locale$file === void 0 ? void 0 : _locale$file.fileNameText), /* @__PURE__ */React__default["default"].createElement("th", null, (_locale$file2 = locale.file) === null || _locale$file2 === void 0 ? void 0 : _locale$file2.fileSizeText), /* @__PURE__ */React__default["default"].createElement("th", null, (_locale$file3 = locale.file) === null || _locale$file3 === void 0 ? void 0 : _locale$file3.fileStatusText), disabled ? null : /* @__PURE__ */React__default["default"].createElement("th", null, (_locale$file4 = locale.file) === null || _locale$file4 === void 0 ? void 0 : _locale$file4.fileOperationText))), /* @__PURE__ */React__default["default"].createElement("tbody", null, !displayFiles.length && /* @__PURE__ */React__default["default"].createElement("tr", null, /* @__PURE__ */React__default["default"].createElement("td", {
      colSpan: 4
    }, renderEmpty())), displayFiles.map(function (file, index) {
      var _props$abridgeName;

      var showBatchUploadAction = props.isBatchUpload;
      var deleteNode = showBatchUploadAction && !displayFiles.find(function (item) {
        return item.status !== "success";
      }) ? renderBatchActionCol(index) : renderNormalActionCol(file, index);
      var fileName = (_props$abridgeName = props.abridgeName) !== null && _props$abridgeName !== void 0 && _props$abridgeName.length ? _common_js_upload_utils.abridgeName(file.name, props.abridgeName[0], props.abridgeName[1]) : file.name;
      return /* @__PURE__ */React__default["default"].createElement("tr", {
        key: file.name + index
      }, /* @__PURE__ */React__default["default"].createElement("td", null, file.url ? /* @__PURE__ */React__default["default"].createElement(link_index.Link, {
        href: file.url,
        target: "_blank",
        hover: "color"
      }, fileName) : fileName), /* @__PURE__ */React__default["default"].createElement("td", null, _common_js_upload_utils.returnFileSize(file.size)), /* @__PURE__ */React__default["default"].createElement("td", null, renderStatus(file)), disabled ? null : deleteNode);
    })));
  };

  var cardClassName = "".concat(uploadPrefix, "__flow-card-area");
  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(uploadPrefix, "__flow ").concat(uploadPrefix, "__flow-").concat(props.theme)
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(uploadPrefix, "__flow-op")
  }, props.children, props.placeholder && /* @__PURE__ */React__default["default"].createElement("small", {
    className: "".concat(uploadPrefix, "__flow-placeholder ").concat(uploadPrefix, "__placeholder")
  }, props.placeholder)), props.theme === "image-flow" && /* @__PURE__ */React__default["default"].createElement("div", _objectSpread({
    className: cardClassName
  }, dragEvents), displayFiles.length ? /* @__PURE__ */React__default["default"].createElement("ul", {
    className: "".concat(uploadPrefix, "__card clearfix")
  }, displayFiles.map(function (file, index) {
    return renderImgItem(file, index);
  })) : renderEmpty()), props.theme === "file-flow" && (displayFiles.length ? renderFileList() : /* @__PURE__ */React__default["default"].createElement("div", _objectSpread({
    className: cardClassName
  }, dragEvents), renderEmpty())), !props.autoUpload && /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(uploadPrefix, "__flow-bottom")
  }, /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
    theme: "default",
    onClick: function onClick(e) {
      var _props$cancelUpload;

      return (_props$cancelUpload = props.cancelUpload) === null || _props$cancelUpload === void 0 ? void 0 : _props$cancelUpload.call(props, {
        e: e
      });
    },
    disabled: disabled || !uploading
  }, locale === null || locale === void 0 ? void 0 : locale.cancelUploadText), /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
    disabled: disabled || uploading || !displayFiles.length,
    theme: "primary",
    loading: uploading,
    onClick: function onClick() {
      var _props$uploadFiles;

      return (_props$uploadFiles = props.uploadFiles) === null || _props$uploadFiles === void 0 ? void 0 : _props$uploadFiles.call(props);
    }
  }, uploadText)));
};

ImageFlowList.displayName = "ImageFlowList";

exports["default"] = ImageFlowList;
//# sourceMappingURL=MultipleFlowList.js.map
