/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-3415b40f.js');
var React = require('react');
var tdesignIconsReact = require('tdesign-icons-react');
var classNames = require('classnames');
var upload_themes_NormalFile = require('./themes/NormalFile.js');
var upload_themes_DraggerFile = require('./themes/DraggerFile.js');
var upload_themes_ImageCard = require('./themes/ImageCard.js');
var upload_themes_MultipleFlowList = require('./themes/MultipleFlowList.js');
var upload_hooks_useUpload = require('./hooks/useUpload.js');
var button_index = require('../button/index.js');
var upload_defaultProps = require('./defaultProps.js');
var upload_themes_CustomFile = require('./themes/CustomFile.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../_chunks/dep-8c98b84c.js');
require('../_chunks/dep-789d4bfb.js');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-23aa4ed2.js');
require('../_chunks/dep-1ad27019.js');
require('../_chunks/dep-6c4c2f3e.js');
require('../_chunks/dep-72f2b815.js');
require('../_chunks/dep-3c510ebe.js');
require('../_util/easing.js');
require('../hooks/useConfig.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-bbbce181.js');
require('../_chunks/dep-4c1144f0.js');
require('../_chunks/dep-be113066.js');
require('../_chunks/dep-7affd9c7.js');
require('../_chunks/dep-c15e2539.js');
require('../_chunks/dep-b282bced.js');
require('../_chunks/dep-b8187df5.js');
require('../_chunks/dep-6b7adfaa.js');
require('../_chunks/dep-bdb568fa.js');
require('../_chunks/dep-ffd983b8.js');
require('../_chunks/dep-bafabd9b.js');
require('../_chunks/dep-29ecaf93.js');
require('../_chunks/dep-28bf72fc.js');
require('../_chunks/dep-46b250c3.js');
require('../_chunks/dep-6f0ad8f9.js');
require('../_chunks/dep-901b688e.js');
require('../_chunks/dep-92d05577.js');
require('../_chunks/dep-6aeda844.js');
require('../_chunks/dep-39147135.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');
require('../common/Portal.js');
require('react-dom');
require('../loading/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('../_chunks/dep-0944d665.js');
require('../_chunks/dep-e675c809.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../link/index.js');
require('../link/Link.js');
require('../_common/js/upload/utils.js');
require('../_common/js/log/log.js');
require('../hooks/useGlobalIcon.js');
require('../hooks/useCommonClassName.js');
require('./hooks/useDrag.js');
require('../image-viewer/index.js');
require('../image-viewer/ImageViewer.js');
require('../_chunks/dep-a6e7c47b.js');
require('../tooltip/index.js');
require('../tooltip/Tooltip.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../hooks/useControlled.js');
require('../_chunks/dep-f31114fd.js');
require('../_chunks/dep-eb2281b7.js');
require('../_chunks/dep-6d1aecc8.js');
require('../_chunks/dep-93234904.js');
require('../_chunks/dep-f6abffca.js');
require('../_util/noop.js');
require('../_util/useAnimation.js');
require('../popup/hooks/useTrigger.js');
require('react-is');
require('../popup/utils/ref.js');
require('../_util/composeRefs.js');
require('../popup/utils/transition.js');
require('../_util/useMutationObserver.js');
require('../_chunks/dep-d26534d4.js');
require('../_chunks/dep-8afae264.js');
require('../_util/useWindowSize.js');
require('../popup/defaultProps.js');
require('../tooltip/defaultProps.js');
require('../tooltip/TooltipLite.js');
require('../_util/useSwitch.js');
require('../_util/usePersistFn.js');
require('../_common/js/utils/getPosition.js');
require('../image-viewer/utils.js');
require('../dialog/index.js');
require('../dialog/Dialog.js');
require('../locale/LocalReceiver.js');
require('../dialog/RenderDialog.js');
require('../_util/useLayoutEffect.js');
require('../_util/useDialogEsc.js');
require('../dialog/defaultProps.js');
require('../_util/useSetState.js');
require('../button/Button.js');
require('../_util/useRipple.js');
require('../_util/setStyle.js');
require('../button/defaultProps.js');
require('../dialog/plugin.js');
require('../image-viewer/hooks/useMirror.js');
require('../image-viewer/hooks/usePosition.js');
require('../image-viewer/hooks/useIndex.js');
require('../image-viewer/hooks/useRotate.js');
require('../image-viewer/hooks/useScale.js');
require('../image-viewer/hooks/useIconMap.js');
require('../image-viewer/defaultProps.js');
require('../image-viewer/hooks/useImageScale.js');
require('../image-viewer/hooks/useList.js');
require('../image-viewer/hooks/useViewerScale.js');
require('../_common/js/upload/main.js');
require('../_common/js/upload/xhr.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function TdUpload(props, ref) {
  var theme = props.theme;

  var _useUpload = upload_hooks_useUpload["default"](props),
      locale = _useUpload.locale,
      classPrefix = _useUpload.classPrefix,
      triggerUploadText = _useUpload.triggerUploadText,
      toUploadFiles = _useUpload.toUploadFiles,
      displayFiles = _useUpload.displayFiles,
      uploadValue = _useUpload.uploadValue,
      sizeOverLimitMessage = _useUpload.sizeOverLimitMessage,
      uploading = _useUpload.uploading,
      tipsClasses = _useUpload.tipsClasses,
      errorClasses = _useUpload.errorClasses,
      inputRef = _useUpload.inputRef,
      disabled = _useUpload.disabled,
      onRemove = _useUpload.onRemove,
      uploadFiles = _useUpload.uploadFiles,
      onNormalFileChange = _useUpload.onNormalFileChange,
      onDragFileChange = _useUpload.onDragFileChange,
      triggerUpload = _useUpload.triggerUpload,
      cancelUpload = _useUpload.cancelUpload;

  React__default["default"].useImperativeHandle(ref, function () {
    return {
      upload: inputRef.current,
      uploading: uploading,
      triggerUpload: triggerUpload,
      uploadFiles: uploadFiles,
      cancelUpload: cancelUpload
    };
  });

  var renderTrigger = function renderTrigger() {
    var getDefaultTrigger = function getDefaultTrigger() {
      if (theme === "file-input") {
        return /* @__PURE__ */React__default["default"].createElement(button_index.Button, _objectSpread({
          disabled: disabled,
          variant: "outline"
        }, props.triggerButtonProps), triggerUploadText);
      }

      return /* @__PURE__ */React__default["default"].createElement(button_index.Button, _objectSpread({
        disabled: disabled,
        variant: "outline",
        icon: /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.UploadIcon, null)
      }, props.triggerButtonProps), triggerUploadText);
    };

    return props.trigger || props.children || getDefaultTrigger();
  };

  var triggerElement = renderTrigger();
  var commonDisplayFileProps = {
    files: uploadValue,
    toUploadFiles: toUploadFiles,
    displayFiles: displayFiles,
    theme: theme,
    abridgeName: props.abridgeName,
    placeholder: props.placeholder,
    disabled: props.disabled,
    tips: props.tips,
    sizeOverLimitMessage: sizeOverLimitMessage,
    uploading: uploading,
    classPrefix: classPrefix,
    tipsClasses: tipsClasses,
    errorClasses: errorClasses,
    locale: locale,
    autoUpload: props.autoUpload,
    fileListDisplay: props.fileListDisplay,
    onRemove: onRemove
  };
  var dragProps = {
    onDragFileChange: onDragFileChange,
    onDragenter: props.onDragenter,
    onDragleave: props.onDragleave,
    onDrop: props.onDrop
  };

  var getNormalFileNode = function getNormalFileNode() {
    return /* @__PURE__ */React__default["default"].createElement(upload_themes_NormalFile["default"], _objectSpread(_objectSpread({}, commonDisplayFileProps), {}, {
      multiple: props.multiple
    }), /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(classPrefix, "-upload__trigger"),
      onClick: triggerUpload
    }, triggerElement));
  };

  var getSingleFileDraggerUploadNode = function getSingleFileDraggerUploadNode() {
    return /* @__PURE__ */React__default["default"].createElement(upload_themes_DraggerFile["default"], _objectSpread(_objectSpread({}, commonDisplayFileProps), {}, {
      dragEvents: dragProps,
      trigger: props.trigger,
      cancelUpload: cancelUpload,
      triggerUpload: triggerUpload,
      uploadFiles: uploadFiles
    }));
  };

  var getImageCardUploadNode = function getImageCardUploadNode() {
    return /* @__PURE__ */React__default["default"].createElement(upload_themes_ImageCard["default"], _objectSpread(_objectSpread({}, commonDisplayFileProps), {}, {
      multiple: props.multiple,
      max: props.max,
      showUploadProgress: props.showUploadProgress,
      triggerUpload: triggerUpload,
      uploadFiles: uploadFiles,
      cancelUpload: cancelUpload,
      onPreview: props.onPreview
    }));
  };

  var getFlowListNode = function getFlowListNode() {
    return /* @__PURE__ */React__default["default"].createElement(upload_themes_MultipleFlowList["default"], _objectSpread(_objectSpread({}, commonDisplayFileProps), {}, {
      isBatchUpload: props.isBatchUpload,
      draggable: props.draggable,
      dragEvents: dragProps,
      uploadFiles: uploadFiles,
      cancelUpload: cancelUpload,
      onPreview: props.onPreview
    }), /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(classPrefix, "-upload__trigger"),
      onClick: triggerUpload
    }, triggerElement));
  };

  var getCustomFile = function getCustomFile() {
    return /* @__PURE__ */React__default["default"].createElement(upload_themes_CustomFile["default"], _objectSpread(_objectSpread({}, commonDisplayFileProps), {}, {
      draggable: props.draggable,
      dragContent: props.dragContent,
      dragEvents: dragProps,
      triggerUpload: triggerUpload,
      childrenNode: props.children,
      trigger: props.trigger
    }), triggerElement);
  };

  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]([props.className, "".concat(classPrefix, "-upload")]),
    style: props.style
  }, /* @__PURE__ */React__default["default"].createElement("input", {
    ref: inputRef,
    type: "file",
    disabled: disabled,
    onChange: onNormalFileChange,
    multiple: props.multiple,
    accept: props.accept,
    hidden: true
  }), ["file", "file-input"].includes(theme) && !props.draggable && getNormalFileNode(), ["file", "image"].includes(theme) && props.draggable && getSingleFileDraggerUploadNode(), theme === "image" && !props.draggable && getImageCardUploadNode(), ["image-flow", "file-flow"].includes(theme) && getFlowListNode(), theme === "custom" && getCustomFile(), props.tips && /* @__PURE__ */React__default["default"].createElement("small", {
    className: classNames__default["default"]([tipsClasses, defineProperty._defineProperty({}, "".concat(classPrefix, "-upload__tips-").concat(props.status), props.status)])
  }, props.tips));
}

var Upload = /*#__PURE__*/React.forwardRef(TdUpload);
Upload.displayName = "Upload";
Upload.defaultProps = upload_defaultProps.uploadDefaultProps;

exports["default"] = Upload;
//# sourceMappingURL=upload.js.map
