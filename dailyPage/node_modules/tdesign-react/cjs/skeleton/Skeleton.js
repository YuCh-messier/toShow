/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var slicedToArray = require('../_chunks/dep-8c98b84c.js');
var defineProperty = require('../_chunks/dep-3415b40f.js');
var toConsumableArray = require('../_chunks/dep-0944d665.js');
var React = require('react');
var isNumber = require('../_chunks/dep-49f84ee3.js');
var classNames = require('classnames');
var hooks_useConfig = require('../hooks/useConfig.js');
var _util_helper = require('../_util/helper.js');
var skeleton_defaultProps = require('./defaultProps.js');
require('../_chunks/dep-789d4bfb.js');
require('../_chunks/dep-1ad27019.js');
require('../_chunks/dep-6c4c2f3e.js');
require('../_chunks/dep-3c510ebe.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-bbbce181.js');
require('../_chunks/dep-4c1144f0.js');
require('../_chunks/dep-be113066.js');
require('../_chunks/dep-7affd9c7.js');
require('../_chunks/dep-c15e2539.js');
require('../_chunks/dep-b282bced.js');
require('../_chunks/dep-b8187df5.js');
require('../_chunks/dep-6b7adfaa.js');
require('../_chunks/dep-bdb568fa.js');
require('../_chunks/dep-ffd983b8.js');
require('../_chunks/dep-bafabd9b.js');
require('../_chunks/dep-29ecaf93.js');
require('../_chunks/dep-28bf72fc.js');
require('../_chunks/dep-72f2b815.js');
require('../_chunks/dep-46b250c3.js');
require('../_chunks/dep-6f0ad8f9.js');
require('../_chunks/dep-901b688e.js');
require('../_chunks/dep-92d05577.js');
require('../_chunks/dep-6aeda844.js');
require('../_chunks/dep-39147135.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');
require('../_chunks/dep-e675c809.js');
require('../_chunks/dep-c33ee4fc.js');
require('../_chunks/dep-93234904.js');
require('../_chunks/dep-f6abffca.js');
require('../_chunks/dep-f31114fd.js');
require('../_chunks/dep-eb2281b7.js');
require('../_chunks/dep-6d1aecc8.js');
require('../_chunks/dep-8173fd05.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var ThemeMap = {
  text: [1],
  avatar: [{
    type: "circle",
    size: "56px"
  }],
  paragraph: [1, 1, {
    width: "70%"
  }],
  "avatar-text": [[{
    type: "circle"
  }, {
    type: "text",
    height: "32px"
  }]],
  tab: [{
    height: "30px"
  }, {
    height: "200px"
  }],
  article: [{
    type: "rect",
    height: "30px",
    width: "100%"
  }, {
    type: "rect",
    height: "200px",
    width: "100%"
  }].concat(toConsumableArray._toConsumableArray([3, 2, 2, 2].map(function (value) {
    return Array(value).fill({
      type: "text",
      height: "30px"
    });
  })))
};

var Skeleton = function Skeleton(props) {
  var animation = props.animation,
      loading = props.loading,
      rowCol = props.rowCol,
      theme = props.theme,
      className = props.className,
      style = props.style,
      _props$delay = props.delay,
      delay = _props$delay === void 0 ? 0 : _props$delay,
      children = props.children;

  var _useConfig = hooks_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var name = "".concat(classPrefix, "-skeleton");

  var renderCols = function renderCols(_cols) {
    var getColItemClass = function getColItemClass(obj) {
      return classNames__default["default"]("".concat(name, "__col"), "".concat(name, "--type-").concat(obj.type || "text"), defineProperty._defineProperty({}, "".concat(name, "--animation-").concat(animation), animation));
    };

    var getColItemStyle = function getColItemStyle(obj) {
      var styleName = ["width", "height", "marginRight", "marginLeft", "margin", "size", "background", "backgroundColor"];
      var style2 = {};
      styleName.forEach(function (name2) {
        if (name2 in obj) {
          var px = _util_helper.pxCompat(obj[name2]);

          if (name2 === "size") {
            var _ref = [px, px];
            style2.width = _ref[0];
            style2.height = _ref[1];
          } else {
            style2[name2] = px;
          }
        }
      });
      return style2;
    };

    var cols = [];

    if (Array.isArray(_cols)) {
      cols = _cols;
    } else if (isNumber.isNumber_1(_cols)) {
      cols = new Array(_cols).fill({
        type: "text"
      });
    } else {
      cols = [_cols];
    }

    return cols.map(function (item, index) {
      return /* @__PURE__ */React__default["default"].createElement("div", {
        key: index,
        className: getColItemClass(item),
        style: getColItemStyle(item)
      }, typeof item.content === "function" ? item.content(React__default["default"].createElement) : item.content);
    });
  };

  var renderRowCol = function renderRowCol(_rowCol) {
    var renderedRowCol = _rowCol || rowCol;
    return renderedRowCol.map(function (item, index) {
      return /* @__PURE__ */React__default["default"].createElement("div", {
        key: index,
        className: "".concat(name, "__row")
      }, renderCols(item));
    });
  };

  var _useState = React.useState(loading),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      ctrlLoading = _useState2[0],
      setCtrlLoading = _useState2[1];

  React.useEffect(function () {
    if (delay > 0 && !loading) {
      var timeout = setTimeout(function () {
        setCtrlLoading(loading);
      }, delay);
      return function () {
        return clearTimeout(timeout);
      };
    }

    setCtrlLoading(loading);
  }, [delay, loading]);

  if (!ctrlLoading) {
    return /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, children);
  }

  var childrenContent = [];

  if (theme) {
    childrenContent.push(renderRowCol(ThemeMap[theme]));
  }

  if (rowCol) {
    childrenContent.push(renderRowCol(rowCol));
  }

  if (!theme && !rowCol) {
    childrenContent.push(renderRowCol([1, 1, 1, {
      width: "70%"
    }]));
  }

  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: className,
    style: style
  }, childrenContent);
};

Skeleton.displayName = "Skeleton";
Skeleton.defaultProps = skeleton_defaultProps.skeletonDefaultProps;

exports["default"] = Skeleton;
//# sourceMappingURL=Skeleton.js.map
