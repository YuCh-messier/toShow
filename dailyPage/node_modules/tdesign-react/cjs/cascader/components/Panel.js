/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../_chunks/dep-3415b40f.js');
var slicedToArray = require('../../_chunks/dep-8c98b84c.js');
var React = require('react');
var classNames = require('classnames');
var cascader_components_Item = require('./Item.js');
var hooks_useConfig = require('../../hooks/useConfig.js');
var locale_LocalReceiver = require('../../locale/LocalReceiver.js');
var cascader_core_helper = require('../core/helper.js');
var cascader_core_effect = require('../core/effect.js');
require('../../_chunks/dep-789d4bfb.js');
require('tdesign-icons-react');
require('../../loading/index.js');
require('../../loading/Loading.js');
require('../../_util/dom.js');
require('raf');
require('../../_chunks/dep-23aa4ed2.js');
require('../../_chunks/dep-1ad27019.js');
require('../../_chunks/dep-6c4c2f3e.js');
require('../../_chunks/dep-72f2b815.js');
require('../../_chunks/dep-3c510ebe.js');
require('../../_util/easing.js');
require('../../common/Portal.js');
require('react-dom');
require('../../config-provider/ConfigContext.js');
require('../../_chunks/dep-bbbce181.js');
require('../../_chunks/dep-4c1144f0.js');
require('../../_chunks/dep-be113066.js');
require('../../_chunks/dep-7affd9c7.js');
require('../../_chunks/dep-c15e2539.js');
require('../../_chunks/dep-b282bced.js');
require('../../_chunks/dep-b8187df5.js');
require('../../_chunks/dep-6b7adfaa.js');
require('../../_chunks/dep-bdb568fa.js');
require('../../_chunks/dep-ffd983b8.js');
require('../../_chunks/dep-bafabd9b.js');
require('../../_chunks/dep-29ecaf93.js');
require('../../_chunks/dep-28bf72fc.js');
require('../../_chunks/dep-46b250c3.js');
require('../../_chunks/dep-6f0ad8f9.js');
require('../../_chunks/dep-901b688e.js');
require('../../_chunks/dep-92d05577.js');
require('../../_chunks/dep-6aeda844.js');
require('../../_chunks/dep-39147135.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../_common/js/global-config/default-config.js');
require('../../loading/gradient.js');
require('../../_common/js/loading/circle-adapter.js');
require('../../_common/js/utils/set-style.js');
require('../../_common/js/utils/helper.js');
require('../../_chunks/dep-0944d665.js');
require('../../_chunks/dep-e675c809.js');
require('../../loading/defaultProps.js');
require('../../loading/plugin.js');
require('../../_chunks/dep-7a0248f1.js');
require('../../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../../common/Check.js');
require('../../_util/helper.js');
require('../../_chunks/dep-c33ee4fc.js');
require('../../_chunks/dep-93234904.js');
require('../../_chunks/dep-f6abffca.js');
require('../../_chunks/dep-f31114fd.js');
require('../../_chunks/dep-eb2281b7.js');
require('../../_chunks/dep-6d1aecc8.js');
require('../../_chunks/dep-8173fd05.js');
require('../../hooks/useControlled.js');
require('../../_util/noop.js');
require('../../_chunks/dep-49f84ee3.js');
require('../../checkbox/defaultProps.js');
require('../../hooks/useGlobalIcon.js');
require('../../_util/useCommonClassName.js');
require('../../_util/useRipple.js');
require('../../_util/useAnimation.js');
require('../../_util/setStyle.js');
require('../core/className.js');
require('../../_chunks/dep-239e4706.js');
require('../../_chunks/dep-0dfd91fa.js');
require('../../_chunks/dep-f9ee0156.js');
require('../../_chunks/dep-12942e66.js');
require('../../_chunks/dep-7745815b.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var Panel = function Panel(props) {
  var cascaderContext = props.cascaderContext;
  var panels = React.useMemo(function () {
    return cascader_core_helper.getPanels(cascaderContext.treeNodes);
  }, [cascaderContext.treeNodes]);

  var handleExpand = function handleExpand(node, trigger) {
    var propsTrigger = props.trigger,
        cascaderContext2 = props.cascaderContext;
    cascader_core_effect.expendClickEffect(propsTrigger, trigger, node, cascaderContext2);
  };

  var _useConfig = hooks_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("cascader"),
      _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 1),
      global = _useLocaleReceiver2[0];

  var COMPONENT_NAME = "".concat(classPrefix, "-cascader");

  var renderItem = function renderItem(node, index) {
    return /* @__PURE__ */React__default["default"].createElement(cascader_components_Item["default"], {
      key: index,
      node: node,
      cascaderContext: cascaderContext,
      onClick: function onClick() {
        handleExpand(node, "click");
      },
      onMouseEnter: function onMouseEnter() {
        handleExpand(node, "hover");
      },
      onChange: function onChange() {
        cascader_core_effect.valueChangeEffect(node, cascaderContext);
      }
    });
  };

  var renderList = function renderList(treeNodes) {
    var _classNames;

    var isFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var segment = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "1";
    return /* @__PURE__ */React__default["default"].createElement("ul", {
      className: classNames__default["default"]("".concat(COMPONENT_NAME, "__menu"), "narrow-scrollbar", (_classNames = {}, defineProperty._defineProperty(_classNames, "".concat(COMPONENT_NAME, "__menu--segment"), segment), defineProperty._defineProperty(_classNames, "".concat(COMPONENT_NAME, "__menu--filter"), isFilter), _classNames)),
      key: key
    }, treeNodes.map(function (node, index) {
      return renderItem(node, index);
    }));
  };

  var renderPanels = function renderPanels() {
    var _props$cascaderContex = props.cascaderContext,
        inputVal = _props$cascaderContex.inputVal,
        treeNodes = _props$cascaderContex.treeNodes;
    return inputVal ? renderList(treeNodes, true) : panels.map(function (treeNodes2, index) {
      return renderList(treeNodes2, false, index !== panels.length - 1, "".concat(COMPONENT_NAME, "__menu").concat(index));
    });
  };

  var content;

  if (props.loading) {
    var _props$loadingText;

    content = /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(COMPONENT_NAME, "__panel--empty")
    }, (_props$loadingText = props.loadingText) !== null && _props$loadingText !== void 0 ? _props$loadingText : global.loadingText);
  } else {
    var _props$empty;

    content = panels !== null && panels !== void 0 && panels.length ? renderPanels() : /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(COMPONENT_NAME, "__panel--empty")
    }, (_props$empty = props.empty) !== null && _props$empty !== void 0 ? _props$empty : global.empty);
  }

  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(COMPONENT_NAME, "__panel"), defineProperty._defineProperty({}, "".concat(COMPONENT_NAME, "--normal"), panels.length && !props.loading), props.className),
    style: props.style
  }, content);
};

exports["default"] = Panel;
//# sourceMappingURL=Panel.js.map
