{"version":3,"file":"index.js","sources":["../../../src/form/utils/index.ts"],"sourcesContent":["import type { NamePath } from '../type';\n\n// 获取 formMap 管理的数据\nexport function getMapValue(name: NamePath, formMapRef: React.MutableRefObject<Map<any, any>>) {\n  if (!formMapRef.current) return;\n\n  // 提取所有 map key\n  const mapKeys = [...formMapRef.current.keys()];\n  // 转译为字符串后比对 key 兼容数组格式\n  const key = mapKeys.find((key) => String(key) === String(name));\n  // 拿到 key 引用地址获取 value\n  return formMapRef.current.get(key);\n}\n\n// 将数据整理成对象，数组 name 转化嵌套对象: ['user', 'name'] => { user: { name: '' } }\nexport function calcFieldValue(name: NamePath, value: any) {\n  if (Array.isArray(name)) {\n    const fieldValue = name.reduceRight((prev, curr) => ({ [curr]: prev }), value);\n    return { ...fieldValue };\n  }\n\n  return { [name]: value };\n}\n\n// 通过对象数据类型获取 map 引用: { user: { name: '' } } => formMap.get(['user', 'name'])\nexport function travelMapFromObject(\n  obj: Record<any, any>,\n  formMapRef: React.MutableRefObject<Map<any, any>>,\n  callback: Function,\n) {\n  for (const [mapName, formItemRef] of formMapRef.current.entries()) {\n    // 支持嵌套数据结构\n    if (Array.isArray(mapName)) {\n      // 创建唯一临时变量 symbol\n      const symbol = Symbol('name');\n      let fieldValue = null;\n\n      for (let i = 0; i < mapName.length; i++) {\n        const item = mapName[i];\n        if (Reflect.has(fieldValue || obj, item)) {\n          fieldValue = Reflect.get(fieldValue || obj, item);\n        } else {\n          // 当反射无法获取到值则重置为 symbol\n          fieldValue = symbol;\n          break;\n        }\n      }\n\n      // 非 symbol 说明获取到了值\n      if (fieldValue !== symbol) {\n        callback(formItemRef, fieldValue);\n      }\n    } else if (Reflect.has(obj, mapName)) {\n      callback(formItemRef, obj[mapName]);\n    }\n  }\n}\n"],"names":["getMapValue","name","formMapRef","current","mapKeys","keys","key","find","String","get","calcFieldValue","value","Array","isArray","fieldValue","reduceRight","prev","curr","travelMapFromObject","obj","callback","entries","_slicedToArray","mapName","formItemRef","symbol","Symbol","i","length","item","Reflect","has"],"mappings":"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"}