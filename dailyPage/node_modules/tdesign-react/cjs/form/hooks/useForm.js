/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var slicedToArray = require('../../_chunks/dep-8c98b84c.js');
var createClass = require('../../_chunks/dep-06b861c2.js');
var defineProperty = require('../../_chunks/dep-3415b40f.js');
var React = require('react');
var _common_js_log_log = require('../../_common/js/log/log.js');
require('../../_chunks/dep-789d4bfb.js');

var HOOK_MARK = Symbol("TD_FORM_INTERNAL_HOOKS");

var FormStore = /*#__PURE__*/createClass._createClass(function FormStore(forceRootUpdate) {
  var _this = this;

  createClass._classCallCheck(this, FormStore);

  defineProperty._defineProperty(this, "prevStore", {});

  defineProperty._defineProperty(this, "store", {});

  defineProperty._defineProperty(this, "getForm", function () {
    return {
      submit: null,
      reset: null,
      validate: null,
      validateOnly: null,
      clearValidate: null,
      setFields: null,
      setFieldsValue: null,
      setValidateMessage: null,
      getFieldValue: null,
      getFieldsValue: null,
      _init: true,
      getInternalHooks: _this.getInternalHooks
    };
  });

  defineProperty._defineProperty(this, "getInternalHooks", function (key) {
    if (key === HOOK_MARK) {
      return {
        notifyWatch: _this.notifyWatch,
        registerWatch: _this.registerWatch,
        getPrevStore: function getPrevStore() {
          return _this.prevStore;
        },
        setPrevStore: function setPrevStore(store) {
          _this.prevStore = store;
        }
      };
    }

    _common_js_log_log["default"].warn("Form", "`getInternalHooks` is internal usage. Should not call directly.");
    return null;
  });

  defineProperty._defineProperty(this, "watchList", []);

  defineProperty._defineProperty(this, "registerWatch", function (callback) {
    _this.watchList.push(callback);

    return function () {
      _this.watchList = _this.watchList.filter(function (fn) {
        return fn !== callback;
      });
    };
  });

  defineProperty._defineProperty(this, "notifyWatch", function () {
    var namePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

    if (_this.watchList.length) {
      var _this$getFieldsValue;

      var values = (_this$getFieldsValue = _this.getFieldsValue) === null || _this$getFieldsValue === void 0 ? void 0 : _this$getFieldsValue.call(_this, namePath);

      _this.watchList.forEach(function (callback) {
        callback(values, namePath);
      });
    }
  });

  defineProperty._defineProperty(this, "getFieldsValue", null);

  this.forceRootUpdate = forceRootUpdate;
});

function useForm(form) {
  var formRef = React.useRef({});

  var _useState = React.useState({}),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      forceUpdate = _useState2[1];

  if (!formRef.current._init) {
    if (form) {
      formRef.current = form;
    } else {
      var forceReRender = function forceReRender() {
        forceUpdate({});
      };

      var formStore = new FormStore(forceReRender);
      formRef.current = formStore.getForm();
    }
  }

  return [formRef.current];
}

exports.HOOK_MARK = HOOK_MARK;
exports["default"] = useForm;
//# sourceMappingURL=useForm.js.map
