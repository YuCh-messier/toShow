import type { NamePath, FormInstanceFunctions } from '../type';
export declare type Store = Record<string, any>;
export declare type WatchCallBack = (values: Store, namePathList: NamePath) => void;
export interface InternalHooks {
    notifyWatch: (name: NamePath) => void;
    registerWatch: (callback: WatchCallBack) => () => void;
    getPrevStore: () => Store;
    setPrevStore: (store: Store) => void;
}
export interface InternalFormInstance extends FormInstanceFunctions {
    _init?: boolean;
    getInternalHooks?: (secret: Symbol) => InternalHooks | null;
}
