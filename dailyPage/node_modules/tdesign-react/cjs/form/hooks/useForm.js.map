{"version":3,"file":"useForm.js","sources":["../../../src/form/hooks/useForm.ts"],"sourcesContent":["import { useState, useRef } from 'react';\nimport type { NamePath } from '../type';\nimport type { WatchCallBack, InternalHooks, InternalFormInstance, Store } from './interface';\nimport log from '../../_common/js/log';\n\nexport const HOOK_MARK = Symbol('TD_FORM_INTERNAL_HOOKS');\n\n// TODO 后续将所有实例函数迁移到 FormStore 内统一管理\nclass FormStore {\n  private prevStore: Store = {};\n\n  private store: Store = {};\n\n  private forceRootUpdate: () => void;\n\n  constructor(forceRootUpdate: () => void) {\n    this.forceRootUpdate = forceRootUpdate;\n  }\n\n  public getForm = (): InternalFormInstance => ({\n    submit: null,\n    reset: null,\n    validate: null,\n    validateOnly: null,\n    clearValidate: null,\n    setFields: null,\n    setFieldsValue: null,\n    setValidateMessage: null,\n    getFieldValue: null,\n    getFieldsValue: null,\n    _init: true,\n\n    getInternalHooks: this.getInternalHooks,\n  });\n\n  private getInternalHooks = (key: Symbol): InternalHooks | null => {\n    if (key === HOOK_MARK) {\n      return {\n        notifyWatch: this.notifyWatch,\n        registerWatch: this.registerWatch,\n        getPrevStore: () => this.prevStore,\n        setPrevStore: (store: object) => {\n          this.prevStore = store;\n        },\n      };\n    }\n\n    log.warn('Form', '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  };\n\n  private watchList: WatchCallBack[] = [];\n\n  private registerWatch: InternalHooks['registerWatch'] = (callback) => {\n    this.watchList.push(callback);\n\n    return () => {\n      this.watchList = this.watchList.filter((fn) => fn !== callback);\n    };\n  };\n\n  private notifyWatch = (namePath: NamePath = []) => {\n    // No need to cost perf when nothing need to watch\n    if (this.watchList.length) {\n      const values = this.getFieldsValue?.(namePath);\n\n      this.watchList.forEach((callback) => {\n        callback(values, namePath);\n      });\n    }\n  };\n\n  // TODO 暂时先从组件初始化时外部 merge 覆盖相关 form 操作函数\n  private getFieldsValue = null;\n}\n\nexport default function useForm(form?: InternalFormInstance) {\n  const formRef = useRef<InternalFormInstance>({});\n  const [, forceUpdate] = useState({});\n\n  // eslint-disable-next-line\n  if (!formRef.current._init) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      const forceReRender = () => {\n        forceUpdate({});\n      };\n\n      const formStore: FormStore = new FormStore(forceReRender);\n\n      formRef.current = formStore.getForm();\n    }\n  }\n\n  return [formRef.current];\n}\n"],"names":["HOOK_MARK","Symbol","FormStore","forceRootUpdate","_classCallCheck","_defineProperty","submit","reset","validate","validateOnly","clearValidate","setFields","setFieldsValue","setValidateMessage","getFieldValue","getFieldsValue","_init","getInternalHooks","key","notifyWatch","registerWatch","getPrevStore","prevStore","setPrevStore","store","log","warn","callback","watchList","push","filter","fn","namePath","length","values","forEach","useForm","form","formRef","useRef","useState","_slicedToArray","forceUpdate","current","forceReRender","formStore","getForm"],"mappings":"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"}