/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var slicedToArray = require('../../_chunks/dep-8c98b84c.js');
var React = require('react');
var get = require('../../_chunks/dep-f0b85a46.js');
var form_hooks_useForm = require('./useForm.js');
require('../../_chunks/dep-789d4bfb.js');
require('../../_chunks/dep-cc5ddaf7.js');
require('../../_chunks/dep-72f2b815.js');
require('../../_chunks/dep-6c4c2f3e.js');
require('../../_chunks/dep-f6abffca.js');
require('../../_chunks/dep-1ad27019.js');
require('../../_chunks/dep-3c510ebe.js');
require('../../_chunks/dep-be113066.js');
require('../../_chunks/dep-7affd9c7.js');
require('../../_chunks/dep-c15e2539.js');
require('../../_chunks/dep-b282bced.js');
require('../../_chunks/dep-b8187df5.js');
require('../../_chunks/dep-93234904.js');
require('../../_chunks/dep-06b861c2.js');
require('../../_chunks/dep-3415b40f.js');
require('../../_common/js/log/log.js');

function useWatch(name, form) {
  var _useState = React.useState(),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      value = _useState2[0],
      setValue = _useState2[1];

  var valueStr = React.useMemo(function () {
    return JSON.stringify(value);
  }, [value]);
  var valueStrRef = React.useRef(valueStr);
  var isValidForm = form && form._init;
  React.useEffect(function () {
    if (!isValidForm) return;
    var getFieldsValue = form.getFieldsValue,
        getInternalHooks = form.getInternalHooks;

    var _getInternalHooks = getInternalHooks(form_hooks_useForm.HOOK_MARK),
        registerWatch = _getInternalHooks.registerWatch;

    var cancelRegister = registerWatch(function () {
      var allFieldsValue2 = getFieldsValue(true);
      var newValue = get.get_1(allFieldsValue2, name);
      var nextValueStr = JSON.stringify(newValue);

      if (valueStrRef.current !== nextValueStr) {
        valueStrRef.current = nextValueStr;
        setValue(newValue);
      }
    });
    var allFieldsValue = getFieldsValue(true);
    var initialValue = get.get_1(allFieldsValue, name);
    setValue(initialValue);
    return cancelRegister;
  }, []);
  return value;
}

exports["default"] = useWatch;
//# sourceMappingURL=useWatch.js.map
