/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-3415b40f.js');
var toConsumableArray = require('../_chunks/dep-0944d665.js');
var slicedToArray = require('../_chunks/dep-8c98b84c.js');
var React = require('react');
var difference = require('../_chunks/dep-f4742892.js');
var classNames = require('classnames');
var tdesignIconsReact = require('tdesign-icons-react');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var button_index = require('../button/index.js');
var transfer_TransferList = require('./TransferList.js');
var transfer_utils = require('./utils.js');
var locale_LocalReceiver = require('../locale/LocalReceiver.js');
var transfer_defaultProps = require('./defaultProps.js');
require('../_chunks/dep-789d4bfb.js');
require('../_chunks/dep-482517f0.js');
require('../_chunks/dep-be113066.js');
require('../_chunks/dep-7affd9c7.js');
require('../_chunks/dep-c15e2539.js');
require('../_chunks/dep-1ad27019.js');
require('../_chunks/dep-6c4c2f3e.js');
require('../_chunks/dep-b282bced.js');
require('../_chunks/dep-b8187df5.js');
require('../_chunks/dep-93234904.js');
require('../_chunks/dep-72f2b815.js');
require('../_chunks/dep-f6abffca.js');
require('../_chunks/dep-3c510ebe.js');
require('../_chunks/dep-ffd983b8.js');
require('../_chunks/dep-5cdbc06c.js');
require('../_chunks/dep-7745815b.js');
require('../_chunks/dep-28bf72fc.js');
require('../_chunks/dep-92d05577.js');
require('../_chunks/dep-29ecaf93.js');
require('../_chunks/dep-901b688e.js');
require('../_chunks/dep-6f0ad8f9.js');
require('../_chunks/dep-bdb568fa.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-bbbce181.js');
require('../_chunks/dep-4c1144f0.js');
require('../_chunks/dep-6b7adfaa.js');
require('../_chunks/dep-bafabd9b.js');
require('../_chunks/dep-46b250c3.js');
require('../_chunks/dep-6aeda844.js');
require('../_chunks/dep-39147135.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');
require('../button/Button.js');
require('../_chunks/dep-e675c809.js');
require('../_util/useRipple.js');
require('../_util/useAnimation.js');
require('../_util/setStyle.js');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-23aa4ed2.js');
require('../_util/easing.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../common/Portal.js');
require('react-dom');
require('../loading/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../button/defaultProps.js');
require('../_chunks/dep-239e4706.js');
require('../_chunks/dep-0dfd91fa.js');
require('../checkbox/index.js');
require('../_chunks/dep-7a0248f1.js');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../common/Check.js');
require('../_util/helper.js');
require('../_chunks/dep-c33ee4fc.js');
require('../_chunks/dep-f31114fd.js');
require('../_chunks/dep-eb2281b7.js');
require('../_chunks/dep-6d1aecc8.js');
require('../_chunks/dep-8173fd05.js');
require('../hooks/useControlled.js');
require('../_util/noop.js');
require('../_chunks/dep-49f84ee3.js');
require('../checkbox/defaultProps.js');
require('../input/index.js');
require('../input/Input.js');
require('../_util/useLayoutEffect.js');
require('../input/InputGroup.js');
require('../input/defaultProps.js');
require('../pagination/index.js');
require('../pagination/Pagination.js');
require('../_chunks/dep-172e66ee.js');
require('../_chunks/dep-12942e66.js');
require('../_chunks/dep-cc5ddaf7.js');
require('../select/index.js');
require('../select/base/Select.js');
require('../_chunks/dep-f0b85a46.js');
require('../select/util/helper.js');
require('../select/base/OptionGroup.js');
require('../select/defaultProps.js');
require('../select/base/Option.js');
require('../common/FakeArrow.js');
require('../select-input/index.js');
require('../select-input/SelectInput.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../popup/hooks/useTrigger.js');
require('react-is');
require('../popup/utils/ref.js');
require('../_util/composeRefs.js');
require('../popup/utils/transition.js');
require('../_util/useMutationObserver.js');
require('../_chunks/dep-d26534d4.js');
require('../_chunks/dep-8afae264.js');
require('../_util/useWindowSize.js');
require('../popup/defaultProps.js');
require('../select-input/useSingle.js');
require('../_chunks/dep-64a370bf.js');
require('../_chunks/dep-b5d52e6f.js');
require('../select-input/useMultiple.js');
require('../tag-input/index.js');
require('../tag-input/TagInput.js');
require('../_util/useDragSorter.js');
require('../tag-input/useTagScroll.js');
require('../tag-input/useTagList.js');
require('../tag/index.js');
require('../tag/Tag.js');
require('../tag/CheckTag.js');
require('../tag/defaultProps.js');
require('../tag-input/useHover.js');
require('../tag-input/defaultProps.js');
require('../select-input/useOverlayInnerStyle.js');
require('../select-input/defaultProps.js');
require('../select/base/PopupContent.js');
require('../input-number/index.js');
require('../input-number/InputNumber.js');
require('../input-number/useInputNumber.js');
require('../_util/useCommonClassName.js');
require('../_common/js/input-number/number.js');
require('../_common/js/input-number/large-number.js');
require('../_common/js/log/log.js');
require('../input-number/defaultProps.js');
require('../input-adornment/InputAdornment.js');
require('../pagination/hooks/useBoundaryJumper.js');
require('../pagination/hooks/usePrevNextJumper.js');
require('../pagination/hooks/usePageNumber.js');
require('../pagination/hooks/useTotal.js');
require('../pagination/validators.js');
require('../pagination/defaultProps.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var Transfer = function Transfer(props) {
  var _classnames;

  var data = props.data,
      search = props.search,
      checked = props.checked,
      defaultChecked = props.defaultChecked,
      onCheckedChange = props.onCheckedChange,
      value = props.value,
      defaultValue = props.defaultValue,
      onChange = props.onChange,
      empty = props.empty,
      disabled = props.disabled,
      pagination = props.pagination,
      title = props.title,
      operation = props.operation,
      footer = props.footer,
      transferItem = props.transferItem,
      content = props.content,
      tree = props.tree,
      showCheckAll = props.showCheckAll;

  var _useState = React.useState(function () {
    return {
      source: data.filter(function (item) {
        return !defaultValue.includes(item.value);
      }),
      target: data.filter(function (item) {
        return defaultValue.includes(item.value);
      })
    };
  }),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  var _useState3 = React.useState(function () {
    return {
      source: state.source.filter(function (item) {
        return !item.disabled && defaultChecked.includes(item.value);
      }).map(function (item) {
        return item.value;
      }),
      target: state.target.filter(function (item) {
        return !item.disabled && defaultChecked.includes(item.value);
      }).map(function (item) {
        return item.value;
      })
    };
  }),
      _useState4 = slicedToArray._slicedToArray(_useState3, 2),
      checkeds = _useState4[0],
      setCheckeds = _useState4[1];

  var _useState5 = React.useState({
    source: "",
    target: ""
  }),
      _useState6 = slicedToArray._slicedToArray(_useState5, 2),
      searchState = _useState6[0],
      setSearchState = _useState6[1];

  var isTargetControlled = ("value" in props);
  var isCheckedControlled = ("checked" in props);

  var _useConfig = hooks_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var _useGlobalIcon = hooks_useGlobalIcon["default"]({
    ChevronLeftIcon: tdesignIconsReact.ChevronLeftIcon,
    ChevronRightIcon: tdesignIconsReact.ChevronRightIcon
  }),
      ChevronRightIcon = _useGlobalIcon.ChevronRightIcon,
      ChevronLeftIcon = _useGlobalIcon.ChevronLeftIcon;

  var transferClassName = "".concat(classPrefix, "-transfer");

  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("transfer"),
      _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
      local = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var _useMemo = React.useMemo(function () {
    var source = state.source,
        target = state.target;
    var searchSource = searchState.source,
        searchTarget = searchState.target;
    return [source.filter(function (item) {
      return !searchSource || item.label.indexOf(searchState.source) > -1;
    }), target.filter(function (item) {
      return !searchTarget || item.label.indexOf(searchState.target) > -1;
    })];
  }, [searchState, state]),
      _useMemo2 = slicedToArray._slicedToArray(_useMemo, 2),
      sourceData = _useMemo2[0],
      targetData = _useMemo2[1];

  var _getDefaultValue$map = transfer_utils.getDefaultValue(empty, t(local.empty)).map(function (item) {
    return transfer_utils.getJSX(item);
  }),
      _getDefaultValue$map2 = slicedToArray._slicedToArray(_getDefaultValue$map, 2),
      SourceEmptyCmp = _getDefaultValue$map2[0],
      TargetEmptyCmp = _getDefaultValue$map2[1];

  var _getDefaultValue = transfer_utils.getDefaultValue(disabled, false),
      _getDefaultValue2 = slicedToArray._slicedToArray(_getDefaultValue, 2),
      sourceDisable = _getDefaultValue2[0],
      targetDisable = _getDefaultValue2[1];

  var _getDefaultValue3 = transfer_utils.getDefaultValue(pagination),
      _getDefaultValue4 = slicedToArray._slicedToArray(_getDefaultValue3, 2),
      sourcePagonation = _getDefaultValue4[0],
      targetPagonation = _getDefaultValue4[1];

  var _getDefaultValue$map3 = transfer_utils.getDefaultValue(title).map(function (item) {
    return transfer_utils.getJSX(item);
  }),
      _getDefaultValue$map4 = slicedToArray._slicedToArray(_getDefaultValue$map3, 2),
      sourceTitle = _getDefaultValue$map4[0],
      targetTitle = _getDefaultValue$map4[1];

  var _getDefaultValue$map5 = transfer_utils.getDefaultValue(operation, [function () {
    return /* @__PURE__ */React__default["default"].createElement(ChevronRightIcon, null);
  }, function () {
    return /* @__PURE__ */React__default["default"].createElement(ChevronLeftIcon, null);
  }]).map(function (item) {
    return transfer_utils.getJSX(item);
  }),
      _getDefaultValue$map6 = slicedToArray._slicedToArray(_getDefaultValue$map5, 2),
      leftOperation = _getDefaultValue$map6[0],
      rightOperation = _getDefaultValue$map6[1];

  var _getDefaultValue$map7 = transfer_utils.getDefaultValue(footer).map(function (item) {
    return transfer_utils.getJSX(item);
  }),
      _getDefaultValue$map8 = slicedToArray._slicedToArray(_getDefaultValue$map7, 2),
      sourceFooter = _getDefaultValue$map8[0],
      targetFooter = _getDefaultValue$map8[1];

  var _getDefaultValue5 = transfer_utils.getDefaultValue(transferItem),
      _getDefaultValue6 = slicedToArray._slicedToArray(_getDefaultValue5, 2),
      sourceTransferItem = _getDefaultValue6[0],
      targetTransferItem = _getDefaultValue6[1];

  var _getDefaultValue7 = transfer_utils.getDefaultValue(content),
      _getDefaultValue8 = slicedToArray._slicedToArray(_getDefaultValue7, 2),
      sourceContent = _getDefaultValue8[0],
      targetContent = _getDefaultValue8[1];

  var _useMemo3 = React.useMemo(function () {
    var _showCheckAll$, _showCheckAll$2;

    return Array.isArray(showCheckAll) ? [(_showCheckAll$ = showCheckAll[0]) !== null && _showCheckAll$ !== void 0 ? _showCheckAll$ : true, (_showCheckAll$2 = showCheckAll[1]) !== null && _showCheckAll$2 !== void 0 ? _showCheckAll$2 : true] : [showCheckAll, showCheckAll];
  }, [showCheckAll]),
      _useMemo4 = slicedToArray._slicedToArray(_useMemo3, 2),
      showCheckAllSource = _useMemo4[0],
      showCheckAllTarget = _useMemo4[1];

  var transformSource = function transformSource() {
    var source = state.source,
        target = state.target;
    var sourceCheckeds = source.filter(function (item) {
      return checkeds.source.includes(item.value);
    });
    var newSource = difference.difference_1(source, sourceCheckeds);
    var newTarget = [].concat(toConsumableArray._toConsumableArray(target), toConsumableArray._toConsumableArray(sourceCheckeds));
    var newTargetValue = newTarget.map(function (t2) {
      return t2.value;
    });

    if (tree) {
      newSource = transfer_utils.filterCheckedTreeNodes(source, checkeds.source);
      newTarget = transfer_utils.getTargetNodes(newSource, data);
      newTargetValue = transfer_utils.getLeafNodes(newTarget).map(function (t2) {
        return t2.value;
      });
    }

    if (isTargetControlled) {
      onChange === null || onChange === void 0 ? void 0 : onChange(newTargetValue, {
        type: "source",
        movedValue: sourceCheckeds.map(function (s) {
          return s.value;
        })
      });
    } else {
      setState(_objectSpread(_objectSpread({}, state), {}, {
        source: newSource,
        target: toConsumableArray._toConsumableArray(newTarget)
      }));
      setCheckeds(_objectSpread(_objectSpread({}, checkeds), {}, {
        source: []
      }));
    }
  };

  var transformTarget = function transformTarget() {
    var source = state.source,
        target = state.target;
    var targetCheckeds = target.filter(function (item) {
      return checkeds.target.includes(item.value);
    });
    var newSource = [].concat(toConsumableArray._toConsumableArray(source), toConsumableArray._toConsumableArray(targetCheckeds));
    var newTarget = difference.difference_1(target, targetCheckeds);
    var newTargetValue = newTarget.map(function (t2) {
      return t2.value;
    });

    if (tree) {
      newTarget = transfer_utils.filterCheckedTreeNodes(target, checkeds.target);
      newSource = transfer_utils.getTargetNodes(newTarget, data);
      newTargetValue = transfer_utils.getLeafNodes(newTarget).map(function (t2) {
        return t2.value;
      });
    }

    if (isTargetControlled) {
      onChange === null || onChange === void 0 ? void 0 : onChange(newTargetValue, {
        type: "target",
        movedValue: targetCheckeds.map(function (s) {
          return s.value;
        })
      });
    } else {
      setState(_objectSpread(_objectSpread({}, state), {}, {
        source: newSource,
        target: newTarget
      }));
      setCheckeds(_objectSpread(_objectSpread({}, checkeds), {}, {
        target: []
      }));
    }
  };

  var OperationsCmp = function OperationsCmp() {
    var isSourceDisabled = sourceDisable || !checkeds.source.length;
    var isTargetDisabled = targetDisable || !checkeds.target.length;
    return /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(transferClassName, "__operations")
    }, /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
      key: isSourceDisabled ? "right-outline" : "right-base",
      variant: "outline",
      disabled: isSourceDisabled,
      onClick: transformSource
    }, leftOperation), /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
      key: isSourceDisabled ? "left-outline" : "left-base",
      variant: "outline",
      disabled: isTargetDisabled,
      onClick: transformTarget
    }, rightOperation));
  };

  var handleCheckChange = function handleCheckChange(value2, type) {
    var sourceChecked = checkeds.source,
        targetChecked = checkeds.target;
    var inverseMap = {
      source: "target",
      target: "source"
    };
    isCheckedControlled ? onCheckedChange === null || onCheckedChange === void 0 ? void 0 : onCheckedChange({
      type: type,
      checked: value2.concat(checkeds[inverseMap[type]]),
      sourceChecked: sourceChecked,
      targetChecked: targetChecked
    }) : setCheckeds(_objectSpread(_objectSpread({}, checkeds), {}, defineProperty._defineProperty({}, type, value2)));
  };

  React.useEffect(function () {
    if (isTargetControlled && Array.isArray(value)) {
      var newTarget = data.filter(function (item) {
        return value.includes(item.value);
      });
      var newSource = difference.difference_1(data, newTarget);

      if (tree) {
        newSource = transfer_utils.filterCheckedTreeNodes(data, value);
        newTarget = transfer_utils.getTargetNodes(newSource, data);
      }

      setState({
        source: toConsumableArray._toConsumableArray(newSource),
        target: toConsumableArray._toConsumableArray(newTarget)
      });
      setCheckeds({
        source: [],
        target: []
      });
    }
  }, [value, data, isTargetControlled, tree]);
  React.useEffect(function () {
    var source = state.source,
        target = state.target;

    if (isCheckedControlled && Array.isArray(checked)) {
      var newSourceChecked = source.filter(function (item) {
        return !item.disabled && checked.includes(item.value);
      }).map(function (item) {
        return item.value;
      });
      var newTargetChecked = target.filter(function (item) {
        return !item.disabled && checked.includes(item.value);
      }).map(function (item) {
        return item.value;
      });
      setCheckeds({
        source: newSourceChecked,
        target: newTargetChecked
      });
    }
  }, [checked, state, isCheckedControlled]);
  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"](transferClassName, (_classnames = {}, defineProperty._defineProperty(_classnames, "".concat(transferClassName, "__search"), search), defineProperty._defineProperty(_classnames, "".concat(transferClassName, "__pagination"), pagination), defineProperty._defineProperty(_classnames, "".concat(transferClassName, "__footer"), footer), defineProperty._defineProperty(_classnames, "".concat(transferClassName, "--with-tree"), tree), _classnames))
  }, /* @__PURE__ */React__default["default"].createElement(transfer_TransferList["default"], {
    className: "".concat(transferClassName, "__list-source"),
    data: sourceData,
    search: search,
    checked: checkeds.source,
    empty: SourceEmptyCmp,
    disabled: sourceDisable,
    pagination: sourcePagonation,
    title: sourceTitle,
    footer: sourceFooter,
    transferItem: sourceTransferItem,
    content: sourceContent,
    onCheckbox: function onCheckbox(value2) {
      return handleCheckChange(value2, "source");
    },
    onSearch: function onSearch(val) {
      return setSearchState(_objectSpread(_objectSpread({}, searchState), {}, {
        source: val
      }));
    },
    tree: tree,
    showCheckAll: showCheckAllSource
  }), OperationsCmp(), /* @__PURE__ */React__default["default"].createElement(transfer_TransferList["default"], {
    className: "".concat(transferClassName, "__list-target"),
    data: targetData,
    search: search,
    checked: checkeds.target,
    empty: TargetEmptyCmp,
    disabled: targetDisable,
    pagination: targetPagonation,
    title: targetTitle,
    footer: targetFooter,
    transferItem: targetTransferItem,
    content: targetContent,
    onCheckbox: function onCheckbox(value2) {
      return handleCheckChange(value2, "target");
    },
    onSearch: function onSearch(val) {
      return setSearchState(_objectSpread(_objectSpread({}, searchState), {}, {
        target: val
      }));
    },
    tree: tree,
    showCheckAll: showCheckAllTarget
  }));
};

Transfer.displayName = "Transfer";
Transfer.defaultProps = transfer_defaultProps.transferDefaultProps;

exports["default"] = Transfer;
//# sourceMappingURL=Transfer.js.map
