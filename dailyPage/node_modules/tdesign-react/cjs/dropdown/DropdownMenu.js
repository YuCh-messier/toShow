/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-3415b40f.js');
var React = require('react');
var classNames = require('classnames');
var tdesignIconsReact = require('tdesign-icons-react');
var hooks_useConfig = require('../hooks/useConfig.js');
var divider_index = require('../divider/index.js');
var dropdown_DropdownItem = require('./DropdownItem.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-bbbce181.js');
require('../_chunks/dep-4c1144f0.js');
require('../_chunks/dep-be113066.js');
require('../_chunks/dep-7affd9c7.js');
require('../_chunks/dep-c15e2539.js');
require('../_chunks/dep-1ad27019.js');
require('../_chunks/dep-6c4c2f3e.js');
require('../_chunks/dep-b282bced.js');
require('../_chunks/dep-b8187df5.js');
require('../_chunks/dep-6b7adfaa.js');
require('../_chunks/dep-bdb568fa.js');
require('../_chunks/dep-3c510ebe.js');
require('../_chunks/dep-ffd983b8.js');
require('../_chunks/dep-bafabd9b.js');
require('../_chunks/dep-29ecaf93.js');
require('../_chunks/dep-28bf72fc.js');
require('../_chunks/dep-72f2b815.js');
require('../_chunks/dep-46b250c3.js');
require('../_chunks/dep-6f0ad8f9.js');
require('../_chunks/dep-901b688e.js');
require('../_chunks/dep-92d05577.js');
require('../_chunks/dep-6aeda844.js');
require('../_chunks/dep-39147135.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');
require('../divider/Divider.js');
require('../_chunks/dep-e675c809.js');
require('../divider/defaultProps.js');
require('../_util/useRipple.js');
require('../_util/useAnimation.js');
require('../_util/setStyle.js');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-23aa4ed2.js');
require('../_util/easing.js');
require('./defaultProps.js');
require('../_util/helper.js');
require('../_chunks/dep-8c98b84c.js');
require('../_chunks/dep-789d4bfb.js');
require('../_chunks/dep-c33ee4fc.js');
require('../_chunks/dep-93234904.js');
require('../_chunks/dep-f6abffca.js');
require('../_chunks/dep-f31114fd.js');
require('../_chunks/dep-eb2281b7.js');
require('../_chunks/dep-6d1aecc8.js');
require('../_chunks/dep-8173fd05.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var DropdownMenu = function DropdownMenu(props) {
  var _props$options = props.options,
      options = _props$options === void 0 ? [] : _props$options,
      _props$maxHeight = props.maxHeight,
      maxHeight = _props$maxHeight === void 0 ? 300 : _props$maxHeight,
      _props$minColumnWidth = props.minColumnWidth,
      minColumnWidth = _props$minColumnWidth === void 0 ? 10 : _props$minColumnWidth,
      _props$maxColumnWidth = props.maxColumnWidth,
      maxColumnWidth = _props$maxColumnWidth === void 0 ? 160 : _props$maxColumnWidth,
      direction = props.direction;

  var _useConfig = hooks_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var dropdownClass = "".concat(classPrefix, "-dropdown");
  var dropdownMenuClass = "".concat(dropdownClass, "__menu");

  var _useGlobalIcon = hooks_useGlobalIcon["default"]({
    ChevronRightIcon: tdesignIconsReact.ChevronRightIcon,
    ChevronLeftIcon: tdesignIconsReact.ChevronLeftIcon
  }),
      ChevronRightIcon = _useGlobalIcon.ChevronRightIcon,
      ChevronLeftIcon = _useGlobalIcon.ChevronLeftIcon;

  var handleItemClick = function handleItemClick(options2) {
    var _data$onClick, _props$onClick;

    var data = options2.data,
        context = options2.context;
    data === null || data === void 0 ? void 0 : (_data$onClick = data.onClick) === null || _data$onClick === void 0 ? void 0 : _data$onClick.call(data, data, context);
    (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, data, context);
  };

  var renderOptions = function renderOptions(data) {
    var _data$forEach;

    var arr = [];
    var renderContent;
    (_data$forEach = data.forEach) === null || _data$forEach === void 0 ? void 0 : _data$forEach.call(data, function (menu, idx) {
      var optionItem = _objectSpread({}, menu);

      if (optionItem.children) {
        var _classNames;

        optionItem.children = renderOptions(optionItem.children);
        renderContent = /* @__PURE__ */React__default["default"].createElement("div", {
          key: idx
        }, /* @__PURE__ */React__default["default"].createElement(dropdown_DropdownItem["default"], {
          className: classNames__default["default"]("".concat(dropdownClass, "__item"), "".concat(dropdownClass, "__item--suffix")),
          value: optionItem.value,
          theme: optionItem.theme,
          active: optionItem.active,
          prefixIcon: optionItem.prefixIcon,
          disabled: optionItem.disabled,
          minColumnWidth: minColumnWidth,
          maxColumnWidth: maxColumnWidth,
          isSubmenu: true
        }, /* @__PURE__ */React__default["default"].createElement("div", {
          className: "".concat(dropdownClass, "__item-content")
        }, direction === "right" ? /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, /* @__PURE__ */React__default["default"].createElement("span", {
          className: "".concat(dropdownClass, "__item-text")
        }, optionItem.content), /* @__PURE__ */React__default["default"].createElement(ChevronRightIcon, {
          className: "".concat(dropdownClass, "__item-direction"),
          size: "16"
        })) : /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, /* @__PURE__ */React__default["default"].createElement(ChevronLeftIcon, {
          className: "".concat(dropdownClass, "__item-direction"),
          size: "16"
        }), /* @__PURE__ */React__default["default"].createElement("span", {
          className: "".concat(dropdownClass, "__item-text")
        }, optionItem.content))), /* @__PURE__ */React__default["default"].createElement("div", {
          className: classNames__default["default"]("".concat(dropdownClass, "__submenu"), (_classNames = {}, defineProperty._defineProperty(_classNames, "".concat(dropdownClass, "__submenu--disabled"), optionItem.disabled), defineProperty._defineProperty(_classNames, "".concat(dropdownClass, "__submenu--").concat(direction), direction), _classNames)),
          style: {
            top: "".concat(idx * 30, "px")
          }
        }, /* @__PURE__ */React__default["default"].createElement("ul", null, optionItem.children))), optionItem.divider ? /* @__PURE__ */React__default["default"].createElement(divider_index.Divider, null) : null);
      } else {
        renderContent = /* @__PURE__ */React__default["default"].createElement("div", {
          key: idx
        }, /* @__PURE__ */React__default["default"].createElement(dropdown_DropdownItem["default"], {
          className: "".concat(dropdownClass, "__item"),
          value: optionItem.value,
          theme: optionItem.theme,
          active: optionItem.active,
          prefixIcon: optionItem.prefixIcon,
          disabled: optionItem.disabled,
          minColumnWidth: minColumnWidth,
          maxColumnWidth: maxColumnWidth,
          onClick: optionItem.disabled || optionItem.children ? function () {
            return null;
          } : function (value, context) {
            return handleItemClick({
              data: optionItem,
              context: context
            });
          }
        }, /* @__PURE__ */React__default["default"].createElement("span", {
          className: "".concat(dropdownClass, "-text")
        }, optionItem.content)), optionItem.divider ? /* @__PURE__ */React__default["default"].createElement(divider_index.Divider, null) : null);
      }

      arr.push(renderContent);
    });
    return arr;
  };

  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"](dropdownMenuClass, "".concat(dropdownMenuClass, "--").concat(direction)),
    style: {
      maxHeight: "".concat(maxHeight, "px")
    }
  }, renderOptions(options));
};

DropdownMenu.displayName = "DropdownMenu";

exports["default"] = DropdownMenu;
//# sourceMappingURL=DropdownMenu.js.map
