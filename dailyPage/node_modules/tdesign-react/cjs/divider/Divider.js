/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-3415b40f.js');
var objectWithoutProperties = require('../_chunks/dep-e675c809.js');
var React = require('react');
var classNames = require('classnames');
var hooks_useConfig = require('../hooks/useConfig.js');
var divider_defaultProps = require('./defaultProps.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-bbbce181.js');
require('../_chunks/dep-4c1144f0.js');
require('../_chunks/dep-be113066.js');
require('../_chunks/dep-7affd9c7.js');
require('../_chunks/dep-c15e2539.js');
require('../_chunks/dep-1ad27019.js');
require('../_chunks/dep-6c4c2f3e.js');
require('../_chunks/dep-b282bced.js');
require('../_chunks/dep-b8187df5.js');
require('../_chunks/dep-6b7adfaa.js');
require('../_chunks/dep-bdb568fa.js');
require('../_chunks/dep-3c510ebe.js');
require('../_chunks/dep-ffd983b8.js');
require('../_chunks/dep-bafabd9b.js');
require('../_chunks/dep-29ecaf93.js');
require('../_chunks/dep-28bf72fc.js');
require('../_chunks/dep-72f2b815.js');
require('../_chunks/dep-46b250c3.js');
require('../_chunks/dep-6f0ad8f9.js');
require('../_chunks/dep-901b688e.js');
require('../_chunks/dep-92d05577.js');
require('../_chunks/dep-6aeda844.js');
require('../_chunks/dep-39147135.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var _excluded = ["layout", "dashed", "align", "className", "style", "children", "content"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var Divider = function Divider(props) {
  var _classNames;

  var layout = props.layout,
      dashed = props.dashed,
      align = props.align,
      className = props.className,
      style = props.style,
      children = props.children,
      content = props.content,
      otherDividerProps = objectWithoutProperties._objectWithoutProperties(props, _excluded);

  var _useConfig = hooks_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var childrenNode = content || children;
  var showText = layout !== "vertical" && !!childrenNode;
  var dividerClassNames = classNames__default["default"]("".concat(classPrefix, "-divider"), className, (_classNames = {}, defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-divider--").concat(layout), layout), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-divider--dashed"), !!dashed), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-divider--with-text"), showText), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-divider--with-text-").concat(align), showText), _classNames));
  return /* @__PURE__ */React__default["default"].createElement("div", _objectSpread(_objectSpread({}, otherDividerProps), {}, {
    className: dividerClassNames,
    style: style
  }), showText ? /* @__PURE__ */React__default["default"].createElement("span", {
    className: "".concat(classPrefix, "-divider__inner-text")
  }, childrenNode) : null);
};

Divider.displayName = "Divider";
Divider.defaultProps = divider_defaultProps.dividerDefaultProps;

exports["default"] = Divider;
//# sourceMappingURL=Divider.js.map
