/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-3415b40f.js');
var objectWithoutProperties = require('../_chunks/dep-e675c809.js');
var slicedToArray = require('../_chunks/dep-8c98b84c.js');
var React = require('react');
var classNames = require('classnames');
var tdesignIconsReact = require('tdesign-icons-react');
var reactTransitionGroup = require('react-transition-group');
var _util_noop = require('../_util/noop.js');
var _util_renderTNode = require('../_util/renderTNode.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var locale_LocalReceiver = require('../locale/LocalReceiver.js');
var alert_defaultProps = require('./defaultProps.js');
var _util_composeRefs = require('../_util/composeRefs.js');
require('../_chunks/dep-789d4bfb.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-bbbce181.js');
require('../_chunks/dep-4c1144f0.js');
require('../_chunks/dep-be113066.js');
require('../_chunks/dep-7affd9c7.js');
require('../_chunks/dep-c15e2539.js');
require('../_chunks/dep-1ad27019.js');
require('../_chunks/dep-6c4c2f3e.js');
require('../_chunks/dep-b282bced.js');
require('../_chunks/dep-b8187df5.js');
require('../_chunks/dep-6b7adfaa.js');
require('../_chunks/dep-bdb568fa.js');
require('../_chunks/dep-3c510ebe.js');
require('../_chunks/dep-ffd983b8.js');
require('../_chunks/dep-bafabd9b.js');
require('../_chunks/dep-29ecaf93.js');
require('../_chunks/dep-28bf72fc.js');
require('../_chunks/dep-72f2b815.js');
require('../_chunks/dep-46b250c3.js');
require('../_chunks/dep-6f0ad8f9.js');
require('../_chunks/dep-901b688e.js');
require('../_chunks/dep-92d05577.js');
require('../_chunks/dep-6aeda844.js');
require('../_chunks/dep-39147135.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var _excluded = ["message", "title", "operation", "theme", "icon", "close", "maxLine", "onClose", "className", "onClosed"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var transitionTime = 200;
var Alert = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _useConfig = hooks_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("alert"),
      _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
      local = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var _useGlobalIcon = hooks_useGlobalIcon["default"]({
    CloseIcon: tdesignIconsReact.CloseIcon,
    InfoCircleFilledIcon: tdesignIconsReact.InfoCircleFilledIcon,
    CheckCircleFilledIcon: tdesignIconsReact.CheckCircleFilledIcon,
    ErrorCircleFilledIcon: tdesignIconsReact.ErrorCircleFilledIcon
  }),
      CloseIcon = _useGlobalIcon.CloseIcon,
      InfoCircleFilledIcon = _useGlobalIcon.InfoCircleFilledIcon,
      CheckCircleFilledIcon = _useGlobalIcon.CheckCircleFilledIcon,
      ErrorCircleFilledIcon = _useGlobalIcon.ErrorCircleFilledIcon;

  var message = props.message,
      title = props.title,
      operation = props.operation,
      theme = props.theme,
      icon = props.icon,
      close = props.close,
      maxLine = props.maxLine,
      onClose = props.onClose,
      className = props.className,
      _props$onClosed = props.onClosed,
      onClosed = _props$onClosed === void 0 ? _util_noop["default"] : _props$onClosed,
      alertProps = objectWithoutProperties._objectWithoutProperties(props, _excluded);

  var _React$useState = React__default["default"].useState(false),
      _React$useState2 = slicedToArray._slicedToArray(_React$useState, 2),
      closed = _React$useState2[0],
      setClosed = _React$useState2[1];

  var _React$useState3 = React__default["default"].useState(false),
      _React$useState4 = slicedToArray._slicedToArray(_React$useState3, 2),
      collapsed = _React$useState4[0],
      setCollapsed = _React$useState4[1];

  var iconMap = {
    success: CheckCircleFilledIcon,
    info: InfoCircleFilledIcon,
    error: ErrorCircleFilledIcon,
    warning: ErrorCircleFilledIcon
  };

  var handleClose = function handleClose(e) {
    setClosed(true);
    onClose === null || onClose === void 0 ? void 0 : onClose({
      e: e
    });
  };

  var handleCollapse = function handleCollapse() {
    setCollapsed(!collapsed);
  };

  var renderIconNode = function renderIconNode() {
    if ( /*#__PURE__*/React__default["default"].isValidElement(icon)) {
      return /*#__PURE__*/React__default["default"].cloneElement(icon, {
        className: classNames__default["default"](defineProperty._defineProperty({}, icon.props.className, icon.props.className))
      });
    }

    return /*#__PURE__*/React__default["default"].createElement(iconMap[theme] || iconMap.info);
  };

  var renderMessage = function renderMessage() {
    if (+maxLine > 0 && Array.isArray(message)) {
      return /* @__PURE__ */React__default["default"].createElement("div", {
        className: "".concat(classPrefix, "-alert__description")
      }, message.map(function (item, index) {
        if (!collapsed) {
          if (index < maxLine) {
            return /* @__PURE__ */React__default["default"].createElement("div", {
              key: index
            }, item);
          }
        } else {
          return /* @__PURE__ */React__default["default"].createElement("div", {
            key: index
          }, item);
        }

        return true;
      }), +maxLine > 0 ? /* @__PURE__ */React__default["default"].createElement("div", {
        className: "".concat(classPrefix, "-alert__collapse"),
        onClick: handleCollapse
      }, !collapsed ? t(local.expandText) : t(local.collapseText)) : null);
    }

    return /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(classPrefix, "-alert__description")
    }, message);
  };

  var renderClose = function renderClose() {
    return /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(classPrefix, "-alert__close"),
      onClick: handleClose
    }, typeof close === "boolean" ? /* @__PURE__ */React__default["default"].createElement(CloseIcon, null) : _util_renderTNode["default"](close));
  };

  var nodeRef = React.useRef();
  return /* @__PURE__ */React__default["default"].createElement(reactTransitionGroup.CSSTransition, {
    "in": !closed,
    unmountOnExit: true,
    classNames: {
      exitActive: "".concat(classPrefix, "-alert--closing")
    },
    nodeRef: nodeRef,
    timeout: transitionTime,
    onExited: onClosed
  }, /* @__PURE__ */React__default["default"].createElement("div", _objectSpread({
    ref: _util_composeRefs["default"](ref, nodeRef),
    className: classNames__default["default"]("".concat(classPrefix, "-alert"), "".concat(classPrefix, "-alert--").concat(theme), className)
  }, alertProps), /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-alert__icon")
  }, renderIconNode()), /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-alert__content")
  }, title ? /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-alert__title")
  }, title) : null, /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-alert__message")
  }, renderMessage(), operation ? /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-alert__operation")
  }, operation) : null)), close ? renderClose() : null));
});
Alert.displayName = "Alert";
Alert.defaultProps = alert_defaultProps.alertDefaultProps;

exports["default"] = Alert;
//# sourceMappingURL=Alert.js.map
