/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-3415b40f.js');
var _typeof = require('../_chunks/dep-6c4c2f3e.js');
var slicedToArray = require('../_chunks/dep-8c98b84c.js');
var React = require('react');
var classNames = require('classnames');
var isFunction = require('../_chunks/dep-c15e2539.js');
var isString = require('../_chunks/dep-23aa4ed2.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useControlled = require('../hooks/useControlled.js');
var slider_utils_handleNumber = require('./utils/handleNumber.js');
var inputNumber_InputNumber = require('../input-number/InputNumber.js');
var slider_SliderHandleButton = require('./SliderHandleButton.js');
var _util_number = require('../_util/number.js');
var slider_defaultProps = require('./defaultProps.js');
require('../_chunks/dep-789d4bfb.js');
require('../_chunks/dep-1ad27019.js');
require('../_chunks/dep-b282bced.js');
require('../_chunks/dep-72f2b815.js');
require('../_chunks/dep-3c510ebe.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-bbbce181.js');
require('../_chunks/dep-4c1144f0.js');
require('../_chunks/dep-be113066.js');
require('../_chunks/dep-7affd9c7.js');
require('../_chunks/dep-b8187df5.js');
require('../_chunks/dep-6b7adfaa.js');
require('../_chunks/dep-bdb568fa.js');
require('../_chunks/dep-ffd983b8.js');
require('../_chunks/dep-bafabd9b.js');
require('../_chunks/dep-29ecaf93.js');
require('../_chunks/dep-28bf72fc.js');
require('../_chunks/dep-46b250c3.js');
require('../_chunks/dep-6f0ad8f9.js');
require('../_chunks/dep-901b688e.js');
require('../_chunks/dep-92d05577.js');
require('../_chunks/dep-6aeda844.js');
require('../_chunks/dep-39147135.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');
require('../_chunks/dep-f31114fd.js');
require('../_chunks/dep-eb2281b7.js');
require('../_chunks/dep-6d1aecc8.js');
require('../_chunks/dep-93234904.js');
require('../_chunks/dep-f6abffca.js');
require('../_util/noop.js');
require('tdesign-icons-react');
require('../input/index.js');
require('../input/Input.js');
require('../_chunks/dep-e675c809.js');
require('../_util/useLayoutEffect.js');
require('../_util/dom.js');
require('raf');
require('../_util/easing.js');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../hooks/useGlobalIcon.js');
require('../_common/js/utils/helper.js');
require('../_chunks/dep-0944d665.js');
require('../input/InputGroup.js');
require('../locale/LocalReceiver.js');
require('../input/defaultProps.js');
require('../button/index.js');
require('../button/Button.js');
require('../_util/useRipple.js');
require('../_util/useAnimation.js');
require('../_util/setStyle.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../common/Portal.js');
require('react-dom');
require('../loading/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../button/defaultProps.js');
require('../input-number/useInputNumber.js');
require('../_util/useCommonClassName.js');
require('../_common/js/input-number/number.js');
require('../_chunks/dep-49f84ee3.js');
require('../_common/js/input-number/large-number.js');
require('../_common/js/log/log.js');
require('../input-number/defaultProps.js');
require('../tooltip/Tooltip.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../popup/hooks/useTrigger.js');
require('react-is');
require('../popup/utils/ref.js');
require('../_util/composeRefs.js');
require('../popup/utils/transition.js');
require('../_util/useMutationObserver.js');
require('../_chunks/dep-d26534d4.js');
require('../_chunks/dep-8afae264.js');
require('../_util/useWindowSize.js');
require('../popup/defaultProps.js');
require('../tooltip/defaultProps.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var LEFT_NODE = 0;
var RIGHT_NODE = 1;
var Slider = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _classNames, _style;

  var _useConfig = hooks_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var disabled = props.disabled,
      inputNumberProps = props.inputNumberProps,
      label = props.label,
      layout = props.layout,
      marks = props.marks,
      max = props.max,
      min = props.min,
      range = props.range,
      step = props.step,
      tooltipProps = props.tooltipProps,
      className = props.className,
      style = props.style;
  var sliderRef = React.useRef();

  var _useControlled = hooks_useControlled["default"](props, "value", props.onChange),
      _useControlled2 = slicedToArray._slicedToArray(_useControlled, 2),
      value = _useControlled2[0],
      onChange = _useControlled2[1];

  var isVertical = layout === "vertical";
  var renderValue = Array.isArray(value) ? value : [min, value];
  var start = (renderValue[LEFT_NODE] - min) / (max - min);
  var width = (renderValue[RIGHT_NODE] - renderValue[LEFT_NODE]) / (max - min);
  var end = start + width;
  var dots = React.useMemo(function () {
    if (Array.isArray(marks)) {
      if (marks.some(function (mark) {
        return typeof mark !== "number";
      })) {
        console.warn('The props "marks" only support number!');
        return [];
      }

      return marks.map(function (mark) {
        return {
          value: mark,
          position: (mark - min) / (max - min),
          label: mark
        };
      });
    }

    if (marks && _typeof._typeof(marks) === "object") {
      var result = [];
      Object.keys(marks).forEach(function (key) {
        var numberKey = Number(key);

        if (typeof numberKey !== "number") {
          console.warn('The props "marks" key only support number!');
        } else {
          result.push({
            value: numberKey,
            label: marks[numberKey],
            position: (numberKey - min) / max
          });
        }
      });
      return result;
    }

    return [];
  }, [max, min, marks]);
  var allDots = React.useMemo(function () {
    var result = [];

    for (var i = min; i <= max; i = _util_number.accAdd(i, step)) {
      result.push({
        value: i,
        position: (i - min) / (max - min)
      });
    }

    return result;
  }, [max, min, step]);
  var startDirection = isVertical ? "bottom" : "left";
  var stepDirection = isVertical ? "top" : "left";
  var sizeKey = isVertical ? "height" : "width";
  var renderDots = isVertical ? dots.map(function (item) {
    return _objectSpread(_objectSpread({}, item), {}, {
      position: 1 - item.position
    });
  }) : dots;

  var handleInputChange = function handleInputChange(newValue, nodeIndex) {
    var safeValue = Number(newValue.toFixed(32));
    var resultValue = Math.max(Math.min(max, safeValue), min);
    if (nodeIndex === LEFT_NODE && value && safeValue > value[RIGHT_NODE]) resultValue = value[RIGHT_NODE];
    if (nodeIndex === RIGHT_NODE && value && safeValue < value[LEFT_NODE]) resultValue = value[LEFT_NODE];

    if (Array.isArray(value)) {
      var arrValue = value.slice();
      arrValue[nodeIndex] = resultValue;
      onChange(arrValue);
    } else {
      onChange(resultValue);
    }
  };

  var createInput = function createInput(nodeIndex) {
    var inputProps = _typeof._typeof(inputNumberProps) === "object" ? inputNumberProps : {};
    var currentValue = renderValue[nodeIndex];
    return /* @__PURE__ */React__default["default"].createElement(inputNumber_InputNumber["default"], _objectSpread(_objectSpread({
      value: currentValue,
      onChange: function onChange(v) {
        if (typeof v !== "undefined") {
          handleInputChange(Number(v), nodeIndex);
        }
      },
      className: classNames__default["default"]("".concat(classPrefix, "-slider-input"), {
        "is-vertical": isVertical
      }),
      disabled: disabled
    }, inputProps), {}, {
      theme: "column"
    }));
  };

  var nearbyValueChange = function nearbyValueChange(value2) {
    var buttonBias = Math.abs(value2 - renderValue[LEFT_NODE]) > Math.abs(value2 - renderValue[RIGHT_NODE]) ? RIGHT_NODE : LEFT_NODE;
    handleInputChange(value2, buttonBias);
  };

  var setPosition = function setPosition(position, nodeIndex) {
    var index = 0;
    var minDistance = 1;

    for (var i = 0; i < allDots.length; i++) {
      var diff = Math.abs(allDots[i].position - position);

      if (minDistance > diff) {
        index = i;
        minDistance = diff;
      }
    }

    var value2 = allDots[index].value;

    if (nodeIndex === void 0 && range) {
      nearbyValueChange(value2);
    } else {
      handleInputChange(value2, nodeIndex);
    }
  };

  var onSliderChange = function onSliderChange(event, nodeIndex) {
    if (disabled) return;
    var clientKey = isVertical ? "clientY" : "clientX";
    var sliderPositionInfo = sliderRef.current.getBoundingClientRect();
    var sliderOffset = sliderPositionInfo[startDirection];
    var position = (event[clientKey] - sliderOffset) / sliderPositionInfo[sizeKey] * (isVertical ? -1 : 1);
    setPosition(position, nodeIndex);
  };

  var handleClickMarks = function handleClickMarks(event, value2) {
    event.stopPropagation();
    nearbyValueChange(value2);
  };

  var createHandleButton = function createHandleButton(nodeIndex, style2) {
    var currentValue = renderValue[nodeIndex];
    var tipLabel = currentValue;
    if (isFunction.isFunction_1(label)) tipLabel = label({
      value: currentValue,
      position: nodeIndex === LEFT_NODE ? "start" : "end"
    });
    if (isString.isString_1(label)) tipLabel = label.replace(/\$\{value\}/g, currentValue.toString());
    return /* @__PURE__ */React__default["default"].createElement(slider_SliderHandleButton["default"], {
      toolTipProps: _objectSpread({
        content: tipLabel
      }, tooltipProps),
      hideTips: label === false,
      classPrefix: classPrefix,
      style: style2,
      onChange: function onChange(e) {
        return onSliderChange(e, nodeIndex);
      }
    });
  };

  return /* @__PURE__ */React__default["default"].createElement("div", {
    style: _objectSpread({}, style),
    className: classNames__default["default"]("".concat(classPrefix, "-slider__container"), {
      "is-vertical": isVertical
    }),
    ref: ref
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    ref: sliderRef,
    className: classNames__default["default"]("".concat(classPrefix, "-slider"), className, (_classNames = {}, defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-slider--vertical"), isVertical), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-slider--with-input"), inputNumberProps), _classNames)),
    onClick: onSliderChange
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(classPrefix, "-slider__rail"))
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    style: (_style = {}, defineProperty._defineProperty(_style, startDirection, slider_utils_handleNumber.numberToPercent(start)), defineProperty._defineProperty(_style, sizeKey, slider_utils_handleNumber.numberToPercent(width)), _style),
    className: classNames__default["default"]("".concat(classPrefix, "-slider__track"))
  }), range ? createHandleButton(LEFT_NODE, defineProperty._defineProperty({}, startDirection, slider_utils_handleNumber.numberToPercent(start))) : null, createHandleButton(RIGHT_NODE, defineProperty._defineProperty({}, startDirection, slider_utils_handleNumber.numberToPercent(end))), /* @__PURE__ */React__default["default"].createElement("div", null, renderDots.map(function (_ref) {
    var position = _ref.position,
        value2 = _ref.value;
    return /* @__PURE__ */React__default["default"].createElement("div", {
      key: value2,
      style: defineProperty._defineProperty({}, stepDirection, slider_utils_handleNumber.numberToPercent(position)),
      className: classNames__default["default"]("".concat(classPrefix, "-slider__stop"))
    });
  })), /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(classPrefix, "-slider__mark"))
  }, renderDots.map(function (_ref2) {
    var position = _ref2.position,
        value2 = _ref2.value,
        label2 = _ref2.label;
    return /* @__PURE__ */React__default["default"].createElement("div", {
      key: value2,
      onClick: function onClick(event) {
        return handleClickMarks(event, value2);
      },
      style: defineProperty._defineProperty({}, stepDirection, slider_utils_handleNumber.numberToPercent(position)),
      className: classNames__default["default"]("".concat(classPrefix, "-slider__mark-text"))
    }, label2);
  })))), inputNumberProps ? /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(classPrefix, "-slider__input-container"), {
      "is-vertical": isVertical
    })
  }, range && createInput(LEFT_NODE), range && /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-slider__center-line")
  }), createInput(RIGHT_NODE)) : null);
});
Slider.displayName = "Slider";
Slider.defaultProps = slider_defaultProps.sliderDefaultProps;

exports["default"] = Slider;
//# sourceMappingURL=Slider.js.map
