/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var slicedToArray = require('../_chunks/dep-8c98b84c.js');
var _typeof = require('../_chunks/dep-6c4c2f3e.js');
var React = require('react');
var debounce = require('../_chunks/dep-d26534d4.js');
require('../_chunks/dep-789d4bfb.js');
require('../_chunks/dep-b282bced.js');
require('../_chunks/dep-1ad27019.js');
require('../_chunks/dep-8afae264.js');
require('../_chunks/dep-f6abffca.js');
require('../_chunks/dep-3c510ebe.js');

function useWindowSize() {
  var validWindow = (typeof window === "undefined" ? "undefined" : _typeof._typeof(window)) === "object";
  var getSize = React.useCallback(function () {
    return {
      width: validWindow ? window.innerWidth : void 0,
      height: validWindow ? window.innerHeight : void 0
    };
  }, [validWindow]);

  var _useState = React.useState(getSize()),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      size = _useState2[0],
      setSize = _useState2[1];

  React.useEffect(function () {
    function handleResize() {
      setSize(getSize());
    }

    var debounceResize = debounce.debounce_1(handleResize, 400);

    if (validWindow) {
      window.addEventListener("resize", debounceResize);
      return function () {
        window.removeEventListener("resize", debounceResize);
        debounceResize.cancel();
      };
    }
  }, [getSize, validWindow]);
  return size;
}

exports["default"] = useWindowSize;
//# sourceMappingURL=useWindowSize.js.map
