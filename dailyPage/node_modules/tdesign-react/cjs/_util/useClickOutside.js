/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var hooks_useConfig = require('../hooks/useConfig.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-3415b40f.js');
require('../_chunks/dep-bbbce181.js');
require('../_chunks/dep-4c1144f0.js');
require('../_chunks/dep-be113066.js');
require('../_chunks/dep-7affd9c7.js');
require('../_chunks/dep-c15e2539.js');
require('../_chunks/dep-1ad27019.js');
require('../_chunks/dep-6c4c2f3e.js');
require('../_chunks/dep-b282bced.js');
require('../_chunks/dep-b8187df5.js');
require('../_chunks/dep-6b7adfaa.js');
require('../_chunks/dep-bdb568fa.js');
require('../_chunks/dep-3c510ebe.js');
require('../_chunks/dep-ffd983b8.js');
require('../_chunks/dep-bafabd9b.js');
require('../_chunks/dep-29ecaf93.js');
require('../_chunks/dep-28bf72fc.js');
require('../_chunks/dep-72f2b815.js');
require('../_chunks/dep-46b250c3.js');
require('../_chunks/dep-6f0ad8f9.js');
require('../_chunks/dep-901b688e.js');
require('../_chunks/dep-92d05577.js');
require('../_chunks/dep-6aeda844.js');
require('../_chunks/dep-39147135.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');

function useClickOutside(refs, handler, includePopup) {
  var _useConfig = hooks_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var POPUP_SELECTOR = ".".concat(classPrefix, "-popup");
  React.useEffect(function () {
    var listener = function listener(event) {
      if (!Array.isArray(refs)) {
        return;
      }

      var elements = [];

      if (includePopup) {
        document.querySelectorAll(POPUP_SELECTOR).forEach(function (ele) {
          elements.push(ele);
        });
      }

      elements = Array.from(new Set(elements));

      if (refs.find(function (ref) {
        var _ref$current;

        return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(event.target);
      }) || elements.find(function (el) {
        return el === null || el === void 0 ? void 0 : el.contains(event.target);
      })) {
        return;
      }

      handler(event);
    };

    document.addEventListener("mousedown", listener);
    document.addEventListener("touchstart", listener);
    return function () {
      document.removeEventListener("mousedown", listener);
      document.removeEventListener("touchstart", listener);
    };
  }, [refs, handler, includePopup]);
}

exports["default"] = useClickOutside;
//# sourceMappingURL=useClickOutside.js.map
