/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../_chunks/dep-3415b40f.js');
var slicedToArray = require('../../_chunks/dep-8c98b84c.js');
var React = require('react');
var classNames = require('classnames');
var tdesignIconsReact = require('tdesign-icons-react');
var hooks_useConfig = require('../../hooks/useConfig.js');
var hooks_useGlobalIcon = require('../../hooks/useGlobalIcon.js');
require('../../_chunks/dep-789d4bfb.js');
require('../../config-provider/ConfigContext.js');
require('../../_chunks/dep-bbbce181.js');
require('../../_chunks/dep-4c1144f0.js');
require('../../_chunks/dep-be113066.js');
require('../../_chunks/dep-7affd9c7.js');
require('../../_chunks/dep-c15e2539.js');
require('../../_chunks/dep-1ad27019.js');
require('../../_chunks/dep-6c4c2f3e.js');
require('../../_chunks/dep-b282bced.js');
require('../../_chunks/dep-b8187df5.js');
require('../../_chunks/dep-6b7adfaa.js');
require('../../_chunks/dep-bdb568fa.js');
require('../../_chunks/dep-3c510ebe.js');
require('../../_chunks/dep-ffd983b8.js');
require('../../_chunks/dep-bafabd9b.js');
require('../../_chunks/dep-29ecaf93.js');
require('../../_chunks/dep-28bf72fc.js');
require('../../_chunks/dep-72f2b815.js');
require('../../_chunks/dep-46b250c3.js');
require('../../_chunks/dep-6f0ad8f9.js');
require('../../_chunks/dep-901b688e.js');
require('../../_chunks/dep-92d05577.js');
require('../../_chunks/dep-6aeda844.js');
require('../../_chunks/dep-39147135.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../_common/js/global-config/default-config.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function usePageNumber(props) {
  var _classNames, _classNames5;

  var _useConfig = hooks_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var _useGlobalIcon = hooks_useGlobalIcon["default"]({
    EllipsisIcon: tdesignIconsReact.EllipsisIcon,
    ChevronLeftDoubleIcon: tdesignIconsReact.ChevronLeftDoubleIcon,
    ChevronRightDoubleIcon: tdesignIconsReact.ChevronRightDoubleIcon
  }),
      EllipsisIcon = _useGlobalIcon.EllipsisIcon,
      ChevronLeftDoubleIcon = _useGlobalIcon.ChevronLeftDoubleIcon,
      ChevronRightDoubleIcon = _useGlobalIcon.ChevronRightDoubleIcon;

  var name = "".concat(classPrefix, "-pagination");

  var _useState = React.useState(false),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      hoverPreMore = _useState2[0],
      toggleHoverPreMore = _useState2[1];

  var _useState3 = React.useState(false),
      _useState4 = slicedToArray._slicedToArray(_useState3, 2),
      hoverNextMore = _useState4[0],
      toggleHoverNextMore = _useState4[1];

  var showPageNumber = props.showPageNumber,
      maxPageBtn = props.maxPageBtn,
      disabled = props.disabled,
      current = props.current,
      pageCount = props.pageCount,
      foldedMaxPageBtn = props.foldedMaxPageBtn,
      changeCurrent = props.changeCurrent,
      pageEllipsisMode = props.pageEllipsisMode;
  var isMidEllipsis = pageEllipsisMode === "mid";
  var pivot = Math.ceil((foldedMaxPageBtn - 1) / 2);
  var pageList = React.useMemo(function () {
    var isPrevMoreShow = 2 + pivot < current;
    var isNextMoreShow = pageCount - 1 - pivot > current;
    var array = [];
    var start;
    var end;

    if (pageCount > maxPageBtn) {
      if (isPrevMoreShow && isNextMoreShow) {
        start = current - pivot;
        end = current + pivot;
      } else {
        var foldedStart = isMidEllipsis ? 2 : 1;
        var foldedEnd = isMidEllipsis ? pageCount - 1 : pageCount;
        start = isPrevMoreShow ? pageCount - foldedMaxPageBtn + 1 : foldedStart;
        end = isPrevMoreShow ? foldedEnd : foldedMaxPageBtn;
      }
    } else {
      start = 1;
      end = pageCount;
    }

    for (var i = start; i <= end; i++) {
      array.push(i);
    }

    return array;
  }, [current, pageCount, foldedMaxPageBtn, isMidEllipsis, maxPageBtn, pivot]);
  var isFolded = pageCount > maxPageBtn;
  var pageNumberContrl = showPageNumber && /* @__PURE__ */React__default["default"].createElement("ul", {
    className: "".concat(name, "__pager")
  }, isFolded && isMidEllipsis && /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, /* @__PURE__ */React__default["default"].createElement("li", {
    key: 1,
    className: classNames__default["default"]("".concat(name, "__number"), (_classNames = {}, defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-is-current"), current === 1), _classNames)),
    onClick: function onClick() {
      return changeCurrent(1);
    }
  }, "1"), 2 + pivot < current && /* @__PURE__ */React__default["default"].createElement("li", {
    className: classNames__default["default"]("".concat(name, "__number"), "".concat(name, "__number--more"), defineProperty._defineProperty({}, "".concat(classPrefix, "-is-disabled"), disabled)),
    onMouseEnter: function onMouseEnter() {
      return toggleHoverPreMore(true);
    },
    onMouseLeave: function onMouseLeave() {
      return toggleHoverPreMore(false);
    },
    onClick: function onClick() {
      return changeCurrent(current - foldedMaxPageBtn);
    }
  }, !hoverPreMore ? /* @__PURE__ */React__default["default"].createElement(EllipsisIcon, null) : /* @__PURE__ */React__default["default"].createElement(ChevronLeftDoubleIcon, null))), pageList.map(function (item) {
    var _classNames3;

    return /* @__PURE__ */React__default["default"].createElement("li", {
      key: item,
      className: classNames__default["default"]("".concat(name, "__number"), (_classNames3 = {}, defineProperty._defineProperty(_classNames3, "".concat(classPrefix, "-is-disabled"), disabled), defineProperty._defineProperty(_classNames3, "".concat(classPrefix, "-is-current"), current === item), _classNames3)),
      onClick: function onClick() {
        return changeCurrent(item);
      }
    }, item);
  }), isFolded && isMidEllipsis && /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, pageCount - 1 - pivot > current && /* @__PURE__ */React__default["default"].createElement("li", {
    className: classNames__default["default"]("".concat(name, "__number"), "".concat(name, "__number--more"), defineProperty._defineProperty({}, "".concat(classPrefix, "-is-disabled"), disabled)),
    onMouseEnter: function onMouseEnter() {
      return toggleHoverNextMore(true);
    },
    onMouseLeave: function onMouseLeave() {
      return toggleHoverNextMore(false);
    },
    onClick: function onClick() {
      return changeCurrent(current + foldedMaxPageBtn);
    }
  }, !hoverNextMore ? /* @__PURE__ */React__default["default"].createElement(EllipsisIcon, null) : /* @__PURE__ */React__default["default"].createElement(ChevronRightDoubleIcon, null)), /* @__PURE__ */React__default["default"].createElement("li", {
    key: pageCount,
    className: classNames__default["default"]("".concat(name, "__number"), (_classNames5 = {}, defineProperty._defineProperty(_classNames5, "".concat(classPrefix, "-is-disabled"), disabled), defineProperty._defineProperty(_classNames5, "".concat(classPrefix, "-is-current"), current === pageCount), _classNames5)),
    onClick: function onClick() {
      return changeCurrent(pageCount);
    }
  }, pageCount)));
  return {
    pageNumberContrl: pageNumberContrl
  };
}

exports["default"] = usePageNumber;
//# sourceMappingURL=usePageNumber.js.map
