/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _typeof = require('../_chunks/dep-6c4c2f3e.js');
var defineProperty = require('../_chunks/dep-3415b40f.js');
var React = require('react');
var isFunction = require('../_chunks/dep-c15e2539.js');
var get = require('../_chunks/dep-f0b85a46.js');
var classNames = require('classnames');
var table_utils = require('./utils.js');
var table_hooks_useFixed = require('./hooks/useFixed.js');
var table_hooks_useClassName = require('./hooks/useClassName.js');
var table_Ellipsis = require('./Ellipsis.js');
var table_hooks_useLazyLoad = require('./hooks/useLazyLoad.js');
var table_hooks_useRowspanAndColspan = require('./hooks/useRowspanAndColspan.js');
require('../_chunks/dep-1ad27019.js');
require('../_chunks/dep-b282bced.js');
require('../_chunks/dep-cc5ddaf7.js');
require('../_chunks/dep-72f2b815.js');
require('../_chunks/dep-f6abffca.js');
require('../_chunks/dep-3c510ebe.js');
require('../_chunks/dep-be113066.js');
require('../_chunks/dep-7affd9c7.js');
require('../_chunks/dep-b8187df5.js');
require('../_chunks/dep-93234904.js');
require('../_chunks/dep-8c98b84c.js');
require('../_chunks/dep-789d4bfb.js');
require('../_common/js/utils/helper.js');
require('../_chunks/dep-0944d665.js');
require('../_chunks/dep-e675c809.js');
require('../_common/js/log/log.js');
require('../_common/js/utils/getScrollbarWidth.js');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-23aa4ed2.js');
require('../_util/easing.js');
require('../hooks/useDebounce.js');
require('../_chunks/dep-d26534d4.js');
require('../_chunks/dep-8afae264.js');
require('../_util/usePersistFn.js');
require('../hooks/useConfig.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-bbbce181.js');
require('../_chunks/dep-4c1144f0.js');
require('../_chunks/dep-6b7adfaa.js');
require('../_chunks/dep-bdb568fa.js');
require('../_chunks/dep-ffd983b8.js');
require('../_chunks/dep-bafabd9b.js');
require('../_chunks/dep-29ecaf93.js');
require('../_chunks/dep-28bf72fc.js');
require('../_chunks/dep-46b250c3.js');
require('../_chunks/dep-6f0ad8f9.js');
require('../_chunks/dep-901b688e.js');
require('../_chunks/dep-92d05577.js');
require('../_chunks/dep-6aeda844.js');
require('../_chunks/dep-39147135.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');
require('../tooltip/index.js');
require('../tooltip/Tooltip.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../hooks/useControlled.js');
require('../_chunks/dep-f31114fd.js');
require('../_chunks/dep-eb2281b7.js');
require('../_chunks/dep-6d1aecc8.js');
require('../_util/noop.js');
require('../_util/useAnimation.js');
require('../common/Portal.js');
require('react-dom');
require('../popup/hooks/useTrigger.js');
require('react-is');
require('../popup/utils/ref.js');
require('../_util/composeRefs.js');
require('../popup/utils/transition.js');
require('../_util/useMutationObserver.js');
require('../_util/useWindowSize.js');
require('../popup/defaultProps.js');
require('../tooltip/defaultProps.js');
require('../tooltip/TooltipLite.js');
require('../_util/useSwitch.js');
require('../_common/js/utils/getPosition.js');
require('../_common/js/utils/observe.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var TABLE_PROPS = ["rowKey", "rowClassName", "columns", "fixedRows", "footData", "rowAttributes", "rowspanAndColspan", "scroll", "cellEmptyContent", "onCellClick", "onRowClick", "onRowDblclick", "onRowMouseover", "onRowMousedown", "onRowMouseenter", "onRowMouseleave", "onRowMouseup"];
var ROW_LISTENERS = ["click", "dblclick", "mouseover", "mousedown", "mouseenter", "mouseleave", "mouseup"];
function renderCell(params, extra) {
  var col = params.col,
      row = params.row,
      rowIndex = params.rowIndex;

  if (col.colKey === "serial-number") {
    return rowIndex + 1;
  }

  if (isFunction.isFunction_1(col.cell)) {
    return col.cell(params);
  }

  if (isFunction.isFunction_1(col.render)) {
    return col.render(_objectSpread(_objectSpread({}, params), {}, {
      type: "cell"
    }));
  }

  var r = col.cell || col.render || get.get_1(row, col.colKey);
  if (![void 0, "", null].includes(r)) return r;
  if (extra !== null && extra !== void 0 && extra.cellEmptyContent) return extra.cellEmptyContent;
  return r;
}
function TR(props) {
  var _props$columns;

  var row = props.row,
      rowKey = props.rowKey,
      rowIndex = props.rowIndex,
      rowClassName = props.rowClassName,
      rowAttributes = props.rowAttributes,
      dataLength = props.dataLength,
      fixedRows = props.fixedRows,
      scroll = props.scroll,
      tableContentElm = props.tableContentElm,
      rowAndColFixedPosition = props.rowAndColFixedPosition;
  var trRef = React.useRef();

  var _useClassName = table_hooks_useClassName["default"](),
      tdEllipsisClass = _useClassName.tdEllipsisClass,
      tableBaseClass = _useClassName.tableBaseClass,
      tableColFixedClasses = _useClassName.tableColFixedClasses,
      tableRowFixedClasses = _useClassName.tableRowFixedClasses,
      tdAlignClasses = _useClassName.tdAlignClasses,
      tableDraggableClasses = _useClassName.tableDraggableClasses;

  var trStyles = table_hooks_useFixed.getRowFixedStyles(get.get_1(row, rowKey || "id"), rowIndex, dataLength, fixedRows, rowAndColFixedPosition, tableRowFixedClasses);
  var trAttributes = React.useMemo(function () {
    return table_utils.formatRowAttributes(rowAttributes, {
      row: row,
      rowIndex: rowIndex,
      type: "body"
    }) || {};
  }, [row, rowAttributes, rowIndex]);
  var classes = React.useMemo(function () {
    var customClasses = table_utils.formatRowClassNames(rowClassName, {
      row: row,
      rowIndex: rowIndex,
      type: "body"
    }, rowKey || "id");
    return [trStyles === null || trStyles === void 0 ? void 0 : trStyles.classes, customClasses];
  }, [row, rowClassName, rowIndex, rowKey, trStyles === null || trStyles === void 0 ? void 0 : trStyles.classes]);
  var useLazyLoadParams = React.useMemo(function () {
    return _objectSpread(_objectSpread({}, scroll), {}, {
      rowIndex: rowIndex
    });
  }, [scroll, rowIndex]);

  var _useLazyLoad = table_hooks_useLazyLoad["default"](tableContentElm, trRef.current, useLazyLoadParams),
      hasLazyLoadHolder = _useLazyLoad.hasLazyLoadHolder,
      tRowHeight = _useLazyLoad.tRowHeight;

  function renderEllipsisCell(cellParams, params) {
    var cellNode = params.cellNode;
    var col = cellParams.col;
    var content = isFunction.isFunction_1(col.ellipsis) ? col.ellipsis(cellParams) : void 0;

    if (_typeof._typeof(col.ellipsis) === "object" && isFunction.isFunction_1(col.ellipsis.content)) {
      content = col.ellipsis.content(cellParams);
    }

    var tooltipProps = {};

    if (_typeof._typeof(col.ellipsis) === "object") {
      tooltipProps = "props" in col.ellipsis ? col.ellipsis.props : col.ellipsis || void 0;
    }

    var tableElement = props.tableElm;
    return /* @__PURE__ */React__default["default"].createElement(table_Ellipsis["default"], {
      placement: "top",
      attach: tableElement ? function () {
        return tableElement;
      } : void 0,
      popupContent: content,
      tooltipProps: tooltipProps,
      overlayClassName: props.ellipsisOverlayClassName,
      classPrefix: props.classPrefix
    }, cellNode);
  }

  function renderTd(params, extra) {
    var _ref;

    var col = params.col,
        colIndex = params.colIndex,
        rowIndex2 = params.rowIndex;
    var cellSpans = extra.cellSpans,
        dataLength2 = extra.dataLength,
        rowAndColFixedPosition2 = extra.rowAndColFixedPosition;
    var cellNode = renderCell(params, {
      cellEmptyContent: props.cellEmptyContent
    });
    var tdStyles = table_hooks_useFixed.getColumnFixedStyles(col, colIndex, rowAndColFixedPosition2, tableColFixedClasses);
    var customClasses = table_utils.formatClassNames(col.className, _objectSpread(_objectSpread({}, params), {}, {
      type: "td"
    }));
    var classes2 = [tdStyles.classes, customClasses, (_ref = {}, defineProperty._defineProperty(_ref, tdEllipsisClass, col.ellipsis), defineProperty._defineProperty(_ref, tableBaseClass.tdLastRow, rowIndex2 + cellSpans.rowspan === dataLength2), defineProperty._defineProperty(_ref, tableBaseClass.tdFirstCol, colIndex === 0 && props.rowspanAndColspan), defineProperty._defineProperty(_ref, tdAlignClasses[col.align], col.align && col.align !== "left"), defineProperty._defineProperty(_ref, tableDraggableClasses.handle, col.colKey === "drag"), _ref)];

    var onClick = function onClick(e) {
      var _props$onCellClick;

      var p = _objectSpread(_objectSpread({}, params), {}, {
        e: e
      });

      (_props$onCellClick = props.onCellClick) === null || _props$onCellClick === void 0 ? void 0 : _props$onCellClick.call(props, p);
    };

    var normalAttrs = isFunction.isFunction_1(col.attrs) ? col.attrs(_objectSpread(_objectSpread({}, params), {}, {
      type: "td"
    })) : col.attrs;

    var attrs = _objectSpread(_objectSpread({}, normalAttrs), {}, {
      rowSpan: cellSpans.rowspan,
      colSpan: cellSpans.colspan
    });

    return /* @__PURE__ */React__default["default"].createElement("td", _objectSpread(_objectSpread({
      key: col.colKey + colIndex,
      className: classNames__default["default"](classes2),
      style: tdStyles.style
    }, attrs), {}, {
      onClick: onClick
    }), col.ellipsis ? renderEllipsisCell(params, {
      cellNode: cellNode
    }) : cellNode);
  }

  var columnVNodeList = (_props$columns = props.columns) === null || _props$columns === void 0 ? void 0 : _props$columns.map(function (col, colIndex) {
    var cellSpans = {};
    var params = {
      row: row,
      col: col,
      rowIndex: rowIndex,
      colIndex: colIndex
    };
    var spanState = null;

    if (props.skipSpansMap.size) {
      var _spanState, _spanState2;

      var cellKey = table_hooks_useRowspanAndColspan.getCellKey(row, props.rowKey, col.colKey, colIndex);
      spanState = props.skipSpansMap.get(cellKey) || {};
      ((_spanState = spanState) === null || _spanState === void 0 ? void 0 : _spanState.rowspan) > 1 && (cellSpans.rowspan = spanState.rowspan);
      ((_spanState2 = spanState) === null || _spanState2 === void 0 ? void 0 : _spanState2.colspan) > 1 && (cellSpans.colspan = spanState.colspan);
      if (spanState.skipped) return null;
    }

    return renderTd(params, {
      dataLength: dataLength,
      rowAndColFixedPosition: rowAndColFixedPosition,
      columnLength: props.columns.length,
      cellSpans: cellSpans,
      cellEmptyContent: props.cellEmptyContent
    });
  });
  var rowParams = {
    row: row,
    index: rowIndex
  };
  return /* @__PURE__ */React__default["default"].createElement("tr", _objectSpread(_objectSpread({
    ref: trRef
  }, trAttributes), {}, {
    style: trStyles === null || trStyles === void 0 ? void 0 : trStyles.style,
    className: classNames__default["default"](classes),
    onClick: function onClick(e) {
      var _props$onRowClick;

      return (_props$onRowClick = props.onRowClick) === null || _props$onRowClick === void 0 ? void 0 : _props$onRowClick.call(props, _objectSpread(_objectSpread({}, rowParams), {}, {
        e: e
      }));
    },
    onDoubleClick: function onDoubleClick(e) {
      var _props$onRowDblclick;

      return (_props$onRowDblclick = props.onRowDblclick) === null || _props$onRowDblclick === void 0 ? void 0 : _props$onRowDblclick.call(props, _objectSpread(_objectSpread({}, rowParams), {}, {
        e: e
      }));
    },
    onMouseDown: function onMouseDown(e) {
      var _props$onRowMousedown;

      return (_props$onRowMousedown = props.onRowMousedown) === null || _props$onRowMousedown === void 0 ? void 0 : _props$onRowMousedown.call(props, _objectSpread(_objectSpread({}, rowParams), {}, {
        e: e
      }));
    },
    onMouseEnter: function onMouseEnter(e) {
      var _props$onRowMouseente;

      return (_props$onRowMouseente = props.onRowMouseenter) === null || _props$onRowMouseente === void 0 ? void 0 : _props$onRowMouseente.call(props, _objectSpread(_objectSpread({}, rowParams), {}, {
        e: e
      }));
    },
    onMouseLeave: function onMouseLeave(e) {
      var _props$onRowMouseleav;

      return (_props$onRowMouseleav = props.onRowMouseleave) === null || _props$onRowMouseleav === void 0 ? void 0 : _props$onRowMouseleav.call(props, _objectSpread(_objectSpread({}, rowParams), {}, {
        e: e
      }));
    },
    onMouseUp: function onMouseUp(e) {
      var _props$onRowMouseup;

      return (_props$onRowMouseup = props.onRowMouseup) === null || _props$onRowMouseup === void 0 ? void 0 : _props$onRowMouseup.call(props, _objectSpread(_objectSpread({}, rowParams), {}, {
        e: e
      }));
    },
    onMouseOver: function onMouseOver(e) {
      var _props$onRowMouseover;

      return (_props$onRowMouseover = props.onRowMouseover) === null || _props$onRowMouseover === void 0 ? void 0 : _props$onRowMouseover.call(props, _objectSpread(_objectSpread({}, rowParams), {}, {
        e: e
      }));
    }
  }), hasLazyLoadHolder ? [/* @__PURE__ */React__default["default"].createElement("td", {
    key: rowIndex,
    style: {
      height: "".concat(tRowHeight, "px"),
      border: "none"
    }
  })] : columnVNodeList);
}
TR.displayName = "TR";

exports.ROW_LISTENERS = ROW_LISTENERS;
exports.TABLE_PROPS = TABLE_PROPS;
exports["default"] = TR;
exports.renderCell = renderCell;
//# sourceMappingURL=TR.js.map
