/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-3415b40f.js');
var slicedToArray = require('../_chunks/dep-8c98b84c.js');
var React = require('react');
var camelCase = require('../_chunks/dep-c33ee4fc.js');
var get = require('../_chunks/dep-f0b85a46.js');
var pick = require('../_chunks/dep-64a370bf.js');
var classNames = require('classnames');
var table_TR = require('./TR.js');
var locale_LocalReceiver = require('../locale/LocalReceiver.js');
var table_hooks_useClassName = require('./hooks/useClassName.js');
var table_hooks_useRowspanAndColspan = require('./hooks/useRowspanAndColspan.js');
require('../_chunks/dep-789d4bfb.js');
require('../_chunks/dep-93234904.js');
require('../_chunks/dep-1ad27019.js');
require('../_chunks/dep-6c4c2f3e.js');
require('../_chunks/dep-72f2b815.js');
require('../_chunks/dep-f6abffca.js');
require('../_chunks/dep-3c510ebe.js');
require('../_chunks/dep-f31114fd.js');
require('../_chunks/dep-eb2281b7.js');
require('../_chunks/dep-6d1aecc8.js');
require('../_chunks/dep-8173fd05.js');
require('../_chunks/dep-cc5ddaf7.js');
require('../_chunks/dep-be113066.js');
require('../_chunks/dep-7affd9c7.js');
require('../_chunks/dep-c15e2539.js');
require('../_chunks/dep-b282bced.js');
require('../_chunks/dep-b8187df5.js');
require('../_chunks/dep-b5d52e6f.js');
require('../_chunks/dep-bafabd9b.js');
require('../_chunks/dep-29ecaf93.js');
require('../_chunks/dep-46b250c3.js');
require('../_chunks/dep-28bf72fc.js');
require('../_chunks/dep-bdb568fa.js');
require('../_chunks/dep-5cdbc06c.js');
require('../_chunks/dep-7745815b.js');
require('../_chunks/dep-92d05577.js');
require('./utils.js');
require('./hooks/useFixed.js');
require('../_common/js/utils/helper.js');
require('../_chunks/dep-0944d665.js');
require('../_chunks/dep-e675c809.js');
require('../_common/js/log/log.js');
require('../_common/js/utils/getScrollbarWidth.js');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-23aa4ed2.js');
require('../_util/easing.js');
require('../hooks/useDebounce.js');
require('../_chunks/dep-d26534d4.js');
require('../_chunks/dep-8afae264.js');
require('../_util/usePersistFn.js');
require('./Ellipsis.js');
require('../tooltip/index.js');
require('../tooltip/Tooltip.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../hooks/useControlled.js');
require('../_util/noop.js');
require('../_util/useAnimation.js');
require('../hooks/useConfig.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-bbbce181.js');
require('../_chunks/dep-4c1144f0.js');
require('../_chunks/dep-6b7adfaa.js');
require('../_chunks/dep-ffd983b8.js');
require('../_chunks/dep-6f0ad8f9.js');
require('../_chunks/dep-901b688e.js');
require('../_chunks/dep-6aeda844.js');
require('../_chunks/dep-39147135.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_common/js/global-config/default-config.js');
require('../common/Portal.js');
require('react-dom');
require('../popup/hooks/useTrigger.js');
require('react-is');
require('../popup/utils/ref.js');
require('../_util/composeRefs.js');
require('../popup/utils/transition.js');
require('../_util/useMutationObserver.js');
require('../_util/useWindowSize.js');
require('../popup/defaultProps.js');
require('../tooltip/defaultProps.js');
require('../tooltip/TooltipLite.js');
require('../_util/useSwitch.js');
require('../_common/js/utils/getPosition.js');
require('./hooks/useLazyLoad.js');
require('../_common/js/utils/observe.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var ROW_AND_TD_LISTENERS = table_TR.ROW_LISTENERS.concat("cell-click");
var extendTableProps = ["rowKey", "rowClassName", "rowAttributes", "loading", "empty", "fixedRows", "firstFullRow", "lastFullRow", "rowspanAndColspan", "scroll", "cellEmptyContent", "onCellClick", "onPageChange", "onRowClick", "onRowDblclick", "onRowMouseover", "onRowMousedown", "onRowMouseenter", "onRowMouseleave", "onRowMouseup", "onScroll", "onScrollX", "onScrollY"];
function TBody(props) {
  var data = props.data,
      columns = props.columns,
      rowKey = props.rowKey,
      firstFullRow = props.firstFullRow,
      lastFullRow = props.lastFullRow;

  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("table"),
      _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
      global = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var _useClassName = table_hooks_useClassName["default"](),
      tableFullRowClasses = _useClassName.tableFullRowClasses,
      tableBaseClass = _useClassName.tableBaseClass;

  var _useRowspanAndColspan = table_hooks_useRowspanAndColspan["default"](data, columns, rowKey, props.rowspanAndColspan),
      skipSpansMap = _useRowspanAndColspan.skipSpansMap;

  var tbodyClasses = React.useMemo(function () {
    return [tableBaseClass.body];
  }, [tableBaseClass.body]);
  var hasFullRowConfig = React.useMemo(function () {
    return firstFullRow || lastFullRow;
  }, [firstFullRow, lastFullRow]);

  var renderEmpty = function renderEmpty(columns2) {
    return /* @__PURE__ */React__default["default"].createElement("tr", {
      className: classNames__default["default"]([tableBaseClass.emptyRow, defineProperty._defineProperty({}, tableFullRowClasses.base, props.isWidthOverflow)])
    }, /* @__PURE__ */React__default["default"].createElement("td", {
      colSpan: columns2.length
    }, /* @__PURE__ */React__default["default"].createElement("div", {
      className: classNames__default["default"]([tableBaseClass.empty, defineProperty._defineProperty({}, tableFullRowClasses.innerFullRow, props.isWidthOverflow)]),
      style: props.isWidthOverflow ? {
        width: "".concat(props.tableWidth, "px")
      } : {}
    }, props.empty || t(global.empty))));
  };

  var getFullRow = function getFullRow(columnLength2, type) {
    var tType = camelCase.camelCase_1(type);
    var fullRowNode = {
      "first-full-row": firstFullRow,
      "last-full-row": lastFullRow
    }[type];
    if (!fullRowNode) return null;
    var isFixedToLeft = props.isWidthOverflow && columns.find(function (col) {
      return col.fixed === "left";
    });
    var classes = [tableFullRowClasses.base, tableFullRowClasses[tType]];
    return /* @__PURE__ */React__default["default"].createElement("tr", {
      className: classNames__default["default"](classes)
    }, /* @__PURE__ */React__default["default"].createElement("td", {
      colSpan: columnLength2
    }, /* @__PURE__ */React__default["default"].createElement("div", {
      className: classNames__default["default"](defineProperty._defineProperty({}, tableFullRowClasses.innerFullRow, isFixedToLeft)),
      style: isFixedToLeft ? {
        width: "".concat(props.tableWidth, "px")
      } : {}
    }, /* @__PURE__ */React__default["default"].createElement("div", {
      className: tableFullRowClasses.innerFullElement
    }, fullRowNode))));
  };

  var columnLength = columns.length;
  var dataLength = data.length;
  var trNodeList = [];
  var properties = ["classPrefix", "ellipsisOverlayClassName", "rowAndColFixedPosition", "scroll", "tableElm", "tableContentElm", "trs", "bufferSize", "isVirtual", "rowHeight", "scrollType"];
  data === null || data === void 0 ? void 0 : data.forEach(function (row, rowIndex) {
    var trProps = _objectSpread(_objectSpread({}, pick.pick_1(props, table_TR.TABLE_PROPS)), {}, {
      rowKey: props.rowKey || "id",
      row: row,
      columns: columns,
      rowIndex: rowIndex,
      dataLength: dataLength,
      skipSpansMap: skipSpansMap,
      classPrefix: props.classPrefix,
      ellipsisOverlayClassName: props.ellipsisOverlayClassName
    }, pick.pick_1(props, properties));

    if (props.onCellClick) {
      trProps.onCellClick = props.onCellClick;
    }

    var trNode = /* @__PURE__ */React__default["default"].createElement(table_TR["default"], _objectSpread(_objectSpread({
      key: get.get_1(row, props.rowKey || "id") + rowIndex
    }, trProps), {}, {
      onRowMounted: props.handleRowMounted
    }));
    trNodeList.push(trNode);

    if (props.renderExpandedRow) {
      var p = {
        row: row,
        index: rowIndex,
        columns: columns,
        tableWidth: props.tableWidth,
        isWidthOverflow: props.isWidthOverflow
      };
      var expandedContent = props.renderExpandedRow(p);
      expandedContent && trNodeList.push(expandedContent);
    }
  });
  var list = /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, getFullRow(columnLength, "first-full-row"), trNodeList, getFullRow(columnLength, "last-full-row"));
  var isEmpty = !(data !== null && data !== void 0 && data.length) && !props.loading && !hasFullRowConfig;
  var translate = "translate(0, ".concat(props.translateY, "px)");
  var posStyle = {
    transform: translate,
    "-ms-transform": translate,
    "-moz-transform": translate,
    "-webkit-transform": translate
  };
  return /* @__PURE__ */React__default["default"].createElement("tbody", {
    className: classNames__default["default"](tbodyClasses),
    style: props.isVirtual && _objectSpread({}, posStyle)
  }, isEmpty ? renderEmpty(columns) : list);
}
TBody.displayName = "TBody";

exports.ROW_AND_TD_LISTENERS = ROW_AND_TD_LISTENERS;
exports["default"] = TBody;
exports.extendTableProps = extendTableProps;
//# sourceMappingURL=TBody.js.map
