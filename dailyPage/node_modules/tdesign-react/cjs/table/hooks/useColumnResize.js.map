{"version":3,"file":"useColumnResize.js","sources":["../../../src/table/hooks/useColumnResize.tsx"],"sourcesContent":["import { useState, useRef, MutableRefObject, CSSProperties } from 'react';\nimport isNumber from 'lodash/isNumber';\nimport { BaseTableCol, TableRowData } from '../type';\nimport { RecalculateColumnWidthFunc } from '../interface';\nimport setThWidthListByColumnDrag from '../../_common/js/table/set-column-width-by-drag';\nimport recalculateColumnWidth from '../../_common/js/table/recalculate-column-width';\n\nconst DEFAULT_MIN_WIDTH = 80;\nconst DEFAULT_MAX_WIDTH = 600;\n\nexport default function useColumnResize(\n  tableContentRef: MutableRefObject<HTMLDivElement>,\n  refreshTable: () => void,\n  getThWidthList: () => { [colKeys: string]: number },\n  updateThWidthList: (data: { [colKeys: string]: number }) => void,\n) {\n  const resizeLineRef = useRef<HTMLDivElement>();\n  const notCalculateWidthCols = useRef<string[]>([]);\n  const effectColMap = useRef<{ [colKey: string]: any }>({});\n\n  // 递归查找列宽度变化后，受影响的相关列\n  const setEffectColMap = (nodes: BaseTableCol<TableRowData>[], parent: BaseTableCol<TableRowData> | null) => {\n    if (!nodes) return;\n    nodes.forEach((n, index) => {\n      const parentPrevCol = parent ? effectColMap.current[parent.colKey].prev : nodes[index + 1];\n      const parentNextCol = parent ? effectColMap.current[parent.colKey].next : nodes[index - 1];\n      const prev = index === 0 ? parentPrevCol : nodes[index - 1];\n      const next = index === nodes.length - 1 ? parentNextCol : nodes[index + 1];\n      effectColMap.current[n.colKey] = {\n        prev,\n        next,\n      };\n      setEffectColMap(n.children, n);\n    });\n  };\n\n  const resizeLineParams = {\n    isDragging: false,\n    draggingCol: null as HTMLElement,\n    draggingStart: 0,\n    effectCol: null as 'next' | 'prev' | null,\n  };\n\n  const [resizeLineStyle, setResizeLineStyle] = useState<CSSProperties>({\n    display: 'none',\n    left: '10px',\n    height: '10px',\n    bottom: '0',\n  });\n\n  const setNotCalculateWidthCols = (colKeys: string[]) => {\n    notCalculateWidthCols.current = colKeys;\n  };\n\n  let resizeLineLeft = '';\n\n  // 表格列宽拖拽事件\n  // 只在表头显示拖拽图标\n  const onColumnMouseover = (e: MouseEvent, col: BaseTableCol<TableRowData>) => {\n    if (!resizeLineRef.current) return;\n\n    const target = (e.target as HTMLElement).closest('th');\n    const targetBoundRect = target.getBoundingClientRect();\n    if (!resizeLineParams.isDragging) {\n      // 当离右边框的距离不超过 8 时，显示拖拽图标\n      const distance = 8;\n      if (targetBoundRect.right - e.pageX <= distance) {\n        const colResizable = col.resizable ?? true;\n        if (colResizable) {\n          target.style.cursor = 'col-resize';\n          resizeLineParams.draggingCol = target;\n          resizeLineParams.effectCol = 'next';\n          return;\n        }\n      } else if (e.pageX - targetBoundRect.left <= distance) {\n        const prevEl = target.previousElementSibling;\n        if (prevEl) {\n          const effectPrevCol = effectColMap.current[col.colKey].prev;\n          const colResizable = effectPrevCol.resizable ?? true;\n          if (colResizable) {\n            target.style.cursor = 'col-resize';\n            resizeLineParams.draggingCol = prevEl as HTMLElement;\n            resizeLineParams.effectCol = 'prev';\n            return;\n          }\n        }\n      }\n      // 重置记录值\n      target.style.cursor = '';\n      resizeLineParams.draggingCol = null;\n      resizeLineParams.effectCol = null;\n    }\n  };\n\n  // 调整表格列宽\n  const onColumnMousedown = (e: MouseEvent, col: BaseTableCol<TableRowData>) => {\n    // 非 resize 的点击，不做处理\n    if (!resizeLineParams.draggingCol) return;\n\n    const getMinMaxColWidth = (col: BaseTableCol<TableRowData>, effectPrevCol: BaseTableCol<TableRowData>) => {\n      let targetCol = null;\n      if (resizeLineParams.effectCol === 'next') {\n        targetCol = col;\n      } else {\n        targetCol = effectPrevCol;\n      }\n      const propMinWidth = isNumber(targetCol.minWidth) ? targetCol.minWidth : parseFloat(targetCol.minWidth);\n      return {\n        minColWidth: Math.max(targetCol.resize?.minWidth || DEFAULT_MIN_WIDTH, propMinWidth || DEFAULT_MIN_WIDTH),\n        maxColWidth: targetCol.resize?.maxWidth || DEFAULT_MAX_WIDTH,\n      };\n    };\n\n    const target = resizeLineParams.draggingCol;\n    const targetBoundRect = target.getBoundingClientRect();\n    const tableBoundRect = tableContentRef.current?.getBoundingClientRect();\n    const resizeLinePos = targetBoundRect.right - tableBoundRect.left;\n    const colLeft = targetBoundRect.left - tableBoundRect.left;\n    const effectNextCol = effectColMap.current[col.colKey].next;\n    const effectPrevCol = effectColMap.current[col.colKey].prev;\n    const { minColWidth, maxColWidth } = getMinMaxColWidth(col, effectPrevCol);\n    const minResizeLineLeft = colLeft + minColWidth;\n    const maxResizeLineLeft = colLeft + maxColWidth;\n\n    // 开始拖拽，记录下鼠标起始位置\n    resizeLineParams.isDragging = true;\n    resizeLineParams.draggingStart = e.pageX || 0;\n\n    const parent = tableContentRef.current.parentElement.getBoundingClientRect();\n    const resizeLineBottom = `${parent.bottom - tableBoundRect.bottom}px`;\n\n    // 初始化 resizeLine 标记线\n    if (resizeLineRef?.current) {\n      setResizeLineStyle({\n        display: 'block',\n        left: `${resizeLinePos}px`,\n        height: `${tableBoundRect.bottom - targetBoundRect.top}px`,\n        bottom: resizeLineBottom,\n      });\n    }\n\n    const onDragOver: EventListener = (e: MouseEvent) => {\n      // 计算新的列宽，新列宽不得小于最小列宽\n      if (resizeLineParams.isDragging) {\n        const left = resizeLinePos + e.x - resizeLineParams.draggingStart;\n        const lineLeft = `${Math.min(Math.max(left, minResizeLineLeft), maxResizeLineLeft)}px`;\n        setResizeLineStyle({\n          display: 'block',\n          left: lineLeft,\n          height: `${tableBoundRect.bottom - targetBoundRect.top}px`,\n          bottom: resizeLineBottom,\n        });\n        resizeLineLeft = lineLeft;\n      }\n    };\n\n    // 拖拽时鼠标可能会超出 table 范围，需要给 document 绑定拖拽相关事件\n    const onDragEnd = () => {\n      if (resizeLineParams.isDragging) {\n        // 结束拖拽，更新列宽\n        let width = Math.ceil(parseInt(resizeLineLeft, 10) - colLeft) || 0;\n        // 为了避免精度问题，导致 width 宽度超出 [minColWidth, maxColWidth] 的范围，需要对比目标宽度和最小/最大宽度\n        if (width <= minColWidth) {\n          width = minColWidth;\n        } else if (width >= maxColWidth) {\n          width = maxColWidth;\n        }\n        // 更新列宽\n        if (resizeLineParams.effectCol === 'next') {\n          setThWidthListByColumnDrag<BaseTableCol<TableRowData>>(\n            col,\n            width,\n            effectNextCol,\n            { getThWidthList, DEFAULT_MIN_WIDTH },\n            (updateMap, notCalculateCols) => {\n              updateThWidthList(updateMap);\n              setNotCalculateWidthCols(notCalculateCols);\n            },\n          );\n        } else if (resizeLineParams.effectCol === 'prev') {\n          setThWidthListByColumnDrag<BaseTableCol<TableRowData>>(\n            effectPrevCol,\n            width,\n            col,\n            { getThWidthList, DEFAULT_MIN_WIDTH },\n            (updateMap, notCalculateCols) => {\n              updateThWidthList(updateMap);\n              setNotCalculateWidthCols(notCalculateCols);\n            },\n          );\n        }\n\n        // 恢复设置\n        resizeLineParams.isDragging = false;\n        resizeLineParams.draggingCol = null;\n        resizeLineParams.effectCol = null;\n        target.style.cursor = '';\n        setResizeLineStyle({\n          ...resizeLineStyle,\n          display: 'none',\n          left: '0',\n        });\n        document.removeEventListener('mousemove', onDragOver);\n        document.removeEventListener('mouseup', onDragEnd);\n        document.onselectstart = null;\n        document.ondragstart = null;\n      }\n\n      refreshTable();\n    };\n\n    document.addEventListener('mouseup', onDragEnd);\n    document.addEventListener('mousemove', onDragOver);\n\n    // 禁用鼠标的选中文字和拖放\n    document.onselectstart = () => false;\n    document.ondragstart = () => false;\n  };\n\n  const recalculateColWidth: RecalculateColumnWidthFunc = (\n    columns: BaseTableCol<TableRowData>[],\n    thWidthList: { [colKey: string]: number },\n    tableLayout: string,\n    tableElmWidth: number,\n  ): void => {\n    recalculateColumnWidth<BaseTableCol<TableRowData>>(\n      columns,\n      thWidthList,\n      tableLayout,\n      tableElmWidth,\n      notCalculateWidthCols.current,\n      (widthMap) => {\n        updateThWidthList(widthMap);\n        if (notCalculateWidthCols.current.length) {\n          notCalculateWidthCols.current = [];\n        }\n      },\n    );\n  };\n\n  return {\n    resizeLineRef,\n    resizeLineStyle,\n    onColumnMouseover,\n    onColumnMousedown,\n    recalculateColWidth,\n    setEffectColMap,\n  };\n}\n"],"names":["DEFAULT_MIN_WIDTH","DEFAULT_MAX_WIDTH","useColumnResize","tableContentRef","refreshTable","getThWidthList","updateThWidthList","resizeLineRef","useRef","notCalculateWidthCols","effectColMap","setEffectColMap","nodes","parent","forEach","n","index","parentPrevCol","current","colKey","prev","parentNextCol","next","length","children","resizeLineParams","isDragging","draggingCol","draggingStart","effectCol","useState","display","left","height","bottom","_slicedToArray","resizeLineStyle","setResizeLineStyle","setNotCalculateWidthCols","colKeys","resizeLineLeft","onColumnMouseover","e","col","target","closest","targetBoundRect","getBoundingClientRect","distance","right","pageX","colResizable","resizable","style","cursor","prevEl","previousElementSibling","effectPrevCol","onColumnMousedown","getMinMaxColWidth","targetCol","propMinWidth","isNumber","minWidth","parseFloat","minColWidth","Math","max","resize","maxColWidth","maxWidth","tableBoundRect","resizeLinePos","colLeft","effectNextCol","minResizeLineLeft","maxResizeLineLeft","parentElement","resizeLineBottom","top","onDragOver","x","lineLeft","min","onDragEnd","width","ceil","parseInt","setThWidthListByColumnDrag","updateMap","notCalculateCols","document","removeEventListener","onselectstart","ondragstart","addEventListener","recalculateColWidth","columns","thWidthList","tableLayout","tableElmWidth","recalculateColumnWidth","widthMap"],"mappings":"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"}