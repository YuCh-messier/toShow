{"version":3,"file":"BaseTable.js","sources":["../../src/table/BaseTable.tsx"],"sourcesContent":["import React, { useRef, useMemo, useImperativeHandle, forwardRef, useEffect, useState, WheelEvent } from 'react';\nimport pick from 'lodash/pick';\nimport classNames from 'classnames';\nimport TBody, { extendTableProps } from './TBody';\nimport { Affix } from '../affix';\nimport { ROW_LISTENERS } from './TR';\nimport THead from './THead';\nimport TFoot from './TFoot';\nimport useTableHeader from './hooks/useTableHeader';\nimport useColumnResize from './hooks/useColumnResize';\nimport useFixed from './hooks/useFixed';\nimport useAffix from './hooks/useAffix';\nimport usePagination from './hooks/usePagination';\nimport Loading from '../loading';\nimport { BaseTableProps, BaseTableRef } from './interface';\nimport useStyle, { formatCSSUnit } from './hooks/useStyle';\nimport useClassName from './hooks/useClassName';\nimport { getAffixProps } from './utils';\nimport log from '../_common/js/log';\nimport { baseTableDefaultProps } from './defaultProps';\n\nimport { Styles } from '../common';\nimport { TableRowData } from './type';\n\nexport const BASE_TABLE_EVENTS = ['page-change', 'cell-click', 'scroll', 'scrollX', 'scrollY'];\nexport const BASE_TABLE_ALL_EVENTS = ROW_LISTENERS.map((t) => `row-${t}`).concat(BASE_TABLE_EVENTS);\n\nexport interface TableListeners {\n  [key: string]: Function;\n}\n\nconst BaseTable = forwardRef<BaseTableRef, BaseTableProps>((props, ref) => {\n  const { tableLayout, height, data, columns, style, headerAffixedTop, bordered, resizable } = props;\n  const tableRef = useRef<HTMLDivElement>();\n  const tableElmRef = useRef<HTMLTableElement>();\n  const [tableFootHeight, setTableFootHeight] = useState(0);\n  const { classPrefix, virtualScrollClasses, tableLayoutClasses, tableBaseClass, tableColFixedClasses } =\n    useClassName();\n  // 表格基础样式类\n  const { tableClasses, sizeClassNames, tableContentStyles, tableElementStyles } = useStyle(props);\n  const { isMultipleHeader, spansAndLeafNodes, thList } = useTableHeader({ columns: props.columns });\n  const finalColumns = useMemo(\n    () => spansAndLeafNodes?.leafColumns || columns,\n    [spansAndLeafNodes?.leafColumns, columns],\n  );\n\n  // 固定表头和固定列逻辑\n  const {\n    scrollbarWidth,\n    tableWidth,\n    tableElmWidth,\n    tableContentRef,\n    isFixedHeader,\n    isWidthOverflow,\n    isFixedColumn,\n    thWidthList,\n    showColumnShadow,\n    rowAndColFixedPosition,\n    setData,\n    refreshTable,\n    emitScrollEvent,\n    setUseFixedTableElmRef,\n    updateColumnFixedShadow,\n    getThWidthList,\n    updateThWidthList,\n    setRecalculateColWidthFuncRef,\n    addTableResizeObserver,\n  } = useFixed(props, finalColumns);\n\n  // 1. 表头吸顶；2. 表尾吸底；3. 底部滚动条吸底；4. 分页器吸底\n  const {\n    affixHeaderRef,\n    affixFooterRef,\n    horizontalScrollbarRef,\n    paginationRef,\n    showAffixHeader,\n    showAffixFooter,\n    showAffixPagination,\n    onHorizontalScroll,\n    setTableContentRef,\n    updateAffixHeaderOrFooter,\n  } = useAffix(props);\n\n  const { dataSource, isPaginateData, renderPagination } = usePagination(props);\n\n  // 列宽拖拽逻辑\n  const columnResizeParams = useColumnResize(tableContentRef, refreshTable, getThWidthList, updateThWidthList);\n  const { resizeLineRef, resizeLineStyle, recalculateColWidth, setEffectColMap } = columnResizeParams;\n  setRecalculateColWidthFuncRef(recalculateColWidth);\n\n  const dynamicBaseTableClasses = classNames(\n    tableClasses.concat({\n      [tableBaseClass.headerFixed]: isFixedHeader,\n      [tableBaseClass.columnFixed]: isFixedColumn,\n      [tableBaseClass.widthOverflow]: isWidthOverflow,\n      [tableBaseClass.multipleHeader]: isMultipleHeader,\n      [tableColFixedClasses.leftShadow]: showColumnShadow.left,\n      [tableColFixedClasses.rightShadow]: showColumnShadow.right,\n      [tableBaseClass.columnResizableTable]: props.resizable,\n    }),\n  );\n\n  const tableElmClasses = classNames([\n    [tableLayoutClasses[tableLayout || 'fixed']],\n    { [tableBaseClass.fullHeight]: height },\n  ]);\n\n  const isVirtual = useMemo(\n    () => props.scroll?.type === 'virtual' && props.data?.length > (props.scroll?.threshold || 100),\n    [props.data?.length, props.scroll?.threshold, props.scroll?.type],\n  );\n\n  const showRightDivider = useMemo(\n    () => props.bordered && isFixedHeader && ((isMultipleHeader && isWidthOverflow) || !isMultipleHeader),\n    [isFixedHeader, isMultipleHeader, isWidthOverflow, props.bordered],\n  );\n\n  useEffect(() => {\n    setUseFixedTableElmRef(tableElmRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tableElmRef]);\n\n  useEffect(() => {\n    setData(isPaginateData ? dataSource : props.data);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.data, dataSource, isPaginateData]);\n\n  const [lastLeafColumns, setLastLeafColumns] = useState(props.columns || []);\n  useEffect(() => {\n    if (lastLeafColumns.map((t) => t.colKey).join() !== spansAndLeafNodes.leafColumns.map((t) => t.colKey).join()) {\n      props.onLeafColumnsChange?.(spansAndLeafNodes.leafColumns);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      setLastLeafColumns(spansAndLeafNodes.leafColumns);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [spansAndLeafNodes.leafColumns]);\n\n  useEffect(() => {\n    setEffectColMap(thList[0], null);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [thList]);\n\n  useImperativeHandle(ref, () => ({\n    tableElement: tableRef.current,\n    tableHtmlElement: tableElmRef.current,\n    tableContentElement: tableContentRef.current,\n    affixHeaderElement: affixHeaderRef.current,\n    refreshTable,\n  }));\n\n  const onFixedChange = () => {\n    const timer = setTimeout(() => {\n      onHorizontalScroll();\n      updateAffixHeaderOrFooter();\n      clearTimeout(timer);\n    }, 0);\n  };\n\n  let lastScrollY = 0;\n  const onInnerVirtualScroll = (e: WheelEvent<HTMLDivElement>) => {\n    const target = e.target as HTMLElement;\n    const top = target.scrollTop;\n    // 排除横向滚动出发的纵向虚拟滚动计算\n    if (lastScrollY !== top) {\n      // TODO\n      // isVirtual.value && handleVirtualScroll();\n    } else {\n      lastScrollY = 0;\n      updateColumnFixedShadow(target);\n    }\n    lastScrollY = top;\n    emitScrollEvent(e);\n  };\n\n  // used for top margin\n  const getTFootHeight = () => {\n    if (!tableElmRef.current) return;\n    const timer = setTimeout(() => {\n      const height = tableElmRef.current?.querySelector('tfoot')?.getBoundingClientRect().height;\n      setTableFootHeight(height);\n      clearTimeout(timer);\n    });\n  };\n\n  useEffect(() => {\n    setTableContentRef(tableContentRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tableContentRef]);\n\n  useEffect(\n    () => addTableResizeObserver(tableRef.current),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [tableRef],\n  );\n\n  useEffect(getTFootHeight, [tableElmRef]);\n\n  const newData = isPaginateData ? dataSource : data;\n\n  if (resizable && tableLayout === 'auto') {\n    log.warn('Table', 'table-layout can not be `auto` for resizable column table, set `table-layout: fixed` please.');\n  }\n\n  const defaultColWidth = props.tableLayout === 'fixed' && isWidthOverflow ? '100px' : undefined;\n  const colgroup = (\n    <colgroup>\n      {finalColumns.map((col) => {\n        const style: Styles = { width: formatCSSUnit(thWidthList.current[col.colKey] || col.width) || defaultColWidth };\n        if (col.minWidth) {\n          style.minWidth = formatCSSUnit(col.minWidth);\n        }\n        return <col key={col.colKey} style={style} />;\n      })}\n    </colgroup>\n  );\n\n  const headProps = {\n    isFixedHeader,\n    rowAndColFixedPosition,\n    isMultipleHeader,\n    bordered: props.bordered,\n    spansAndLeafNodes,\n    thList,\n    thWidthList: thWidthList.current,\n    resizable: props.resizable,\n    columnResizeParams,\n    classPrefix,\n    ellipsisOverlayClassName: props.size !== 'medium' ? sizeClassNames[props.size] : '',\n  };\n\n  // 多级表头左边线缺失\n  const affixedLeftBorder = props.bordered ? 1 : 0;\n\n  /**\n   * Affixed Header\n   */\n  const renderFixedHeader = () => {\n    // onlyVirtualScrollBordered 用于浏览器兼容性处理，只有 chrome 需要调整 bordered，FireFox 和 Safari 不需要\n    const onlyVirtualScrollBordered =\n      !!(isVirtual && !headerAffixedTop && bordered) && /Chrome/.test(navigator?.userAgent);\n    const borderWidth = bordered && onlyVirtualScrollBordered ? 1 : 0;\n    const affixHeaderWrapHeight =\n      (affixHeaderRef.current?.getBoundingClientRect().height || 0) - scrollbarWidth - borderWidth;\n    // 两类场景：1. 虚拟滚动，永久显示表头，直到表头消失在可视区域； 2. 表头吸顶，根据滚动情况判断是否显示吸顶表头\n    const headerOpacity = headerAffixedTop ? Number(showAffixHeader) : 1;\n    const affixHeaderWrapHeightStyle = {\n      width: `${tableWidth.current}px`,\n      height: `${affixHeaderWrapHeight}px`,\n      opacity: headerOpacity,\n      marginTop: onlyVirtualScrollBordered ? `${borderWidth}px` : 0,\n    };\n    const affixedHeader = Boolean(props.headerAffixedTop && tableWidth.current) && (\n      <div\n        ref={affixHeaderRef}\n        style={{ width: `${tableWidth.current - affixedLeftBorder}px`, opacity: headerOpacity }}\n        className={classNames([\n          'scrollbar',\n          { [tableBaseClass.affixedHeaderElm]: props.headerAffixedTop || isVirtual },\n        ])}\n      >\n        <table\n          className={classNames(tableElmClasses)}\n          style={{ ...tableElementStyles, width: `${tableElmWidth.current}px` }}\n        >\n          {colgroup}\n          {props.showHeader && <THead {...headProps} />}\n        </table>\n      </div>\n    );\n\n    // 添加这一层，是为了隐藏表头的横向滚动条。如果以后不需要照顾 IE 10 以下的项目，则可直接移除这一层\n    // 彼时，可更为使用 CSS 样式中的 .hideScrollbar()\n    const affixHeaderWithWrap = (\n      <div className={tableBaseClass.affixedHeaderWrap} style={affixHeaderWrapHeightStyle}>\n        {affixedHeader}\n      </div>\n    );\n    return affixHeaderWithWrap;\n  };\n\n  const renderAffixedHeader = () => {\n    if (!props.showHeader) return null;\n    return (\n      !!(isVirtual || props.headerAffixedTop) &&\n      (props.headerAffixedTop ? (\n        <Affix\n          offsetTop={0}\n          {...getAffixProps(props.headerAffixedTop, props.headerAffixProps)}\n          onFixedChange={onFixedChange}\n        >\n          {renderFixedHeader()}\n        </Affix>\n      ) : (\n        isFixedHeader && renderFixedHeader()\n      ))\n    );\n  };\n\n  /**\n   * Affixed Footer\n   */\n  const renderAffixedFooter = () => {\n    let marginScrollbarWidth = isWidthOverflow ? scrollbarWidth : 0;\n    if (bordered) {\n      marginScrollbarWidth += 1;\n    }\n    // Hack: Affix 组件，marginTop 临时使用 负 margin 定位位置\n    const affixedFooter = Boolean(props.footerAffixedBottom && props.footData?.length && tableWidth.current) && (\n      <Affix\n        className={tableBaseClass.affixedFooterWrap}\n        onFixedChange={onFixedChange}\n        offsetBottom={marginScrollbarWidth || 0}\n        {...getAffixProps(props.footerAffixedBottom)}\n        style={{ marginTop: `${-1 * (tableFootHeight + marginScrollbarWidth)}px` }}\n      >\n        <div\n          ref={affixFooterRef}\n          style={{ width: `${tableWidth.current - affixedLeftBorder}px`, opacity: Number(showAffixFooter) }}\n          className={classNames([\n            'scrollbar',\n            { [tableBaseClass.affixedFooterElm]: props.footerAffixedBottom || isVirtual },\n          ])}\n        >\n          <table className={tableElmClasses} style={{ ...tableElementStyles, width: `${tableElmWidth.current}px` }}>\n            {colgroup}\n            <TFoot\n              rowKey={props.rowKey}\n              isFixedHeader={isFixedHeader}\n              rowAndColFixedPosition={rowAndColFixedPosition}\n              footData={props.footData}\n              columns={spansAndLeafNodes?.leafColumns || columns}\n              rowAttributes={props.rowAttributes}\n              rowClassName={props.rowClassName}\n              thWidthList={thWidthList.current}\n              footerSummary={props.footerSummary}\n              rowspanAndColspanInFooter={props.rowspanAndColspanInFooter}\n            ></TFoot>\n          </table>\n        </div>\n      </Affix>\n    );\n    return affixedFooter;\n  };\n\n  const translate = `translate(0, ${0}px)`;\n  const virtualStyle = {\n    transform: translate,\n    '-ms-transform': translate,\n    '-moz-transform': translate,\n    '-webkit-transform': translate,\n  };\n  const tableBodyProps = {\n    classPrefix,\n    ellipsisOverlayClassName: props.size !== 'medium' ? sizeClassNames[props.size] : '',\n    rowAndColFixedPosition,\n    showColumnShadow,\n    // data: isVirtual ? visibleData : data,\n    data: newData,\n    columns: spansAndLeafNodes?.leafColumns || columns,\n    tableElm: tableRef.current,\n    tableContentElm: tableContentRef.current,\n    tableWidth: tableWidth.current,\n    isWidthOverflow,\n    rowKey: props.rowKey || 'id',\n    // 虚拟滚动相关属性\n    // isVirtual,\n    // translateY: translateY,\n    // scrollType: scrollType,\n    // rowHeight: rowHeight,\n    // trs: trs,\n    // bufferSize: bufferSize,\n    scroll: props.scroll,\n    // handleRowMounted: handleRowMounted,\n    cellEmptyContent: props.cellEmptyContent,\n    renderExpandedRow: props.renderExpandedRow,\n    ...pick(props, extendTableProps),\n  };\n  const tableContent = (\n    <div\n      ref={tableContentRef}\n      className={tableBaseClass.content}\n      style={tableContentStyles}\n      onScroll={onInnerVirtualScroll}\n    >\n      {isVirtual && <div className={virtualScrollClasses.cursor} style={virtualStyle} />}\n      <table ref={tableElmRef} className={classNames(tableElmClasses)} style={tableElementStyles}>\n        {colgroup}\n        {props.showHeader && <THead {...headProps} />}\n        <TBody {...tableBodyProps} />\n        <TFoot\n          rowKey={props.rowKey}\n          isFixedHeader={isFixedHeader}\n          rowAndColFixedPosition={rowAndColFixedPosition}\n          footData={props.footData}\n          columns={spansAndLeafNodes?.leafColumns || columns}\n          rowAttributes={props.rowAttributes}\n          rowClassName={props.rowClassName}\n          thWidthList={thWidthList.current}\n          footerSummary={props.footerSummary}\n          rowspanAndColspanInFooter={props.rowspanAndColspanInFooter}\n        ></TFoot>\n      </table>\n    </div>\n  );\n\n  const { loading, loadingProps } = props;\n  const customLoadingText = loading;\n  const loadingContent = loading !== undefined && (\n    <Loading\n      loading={!!loading}\n      text={customLoadingText}\n      attach={() => tableRef.current}\n      showOverlay\n      size=\"small\"\n      {...loadingProps}\n    ></Loading>\n  );\n\n  const { topContent, bottomContent } = props;\n  const pagination = (\n    <div ref={paginationRef} className={tableBaseClass.paginationWrap} style={{ opacity: Number(showAffixPagination) }}>\n      {renderPagination()}\n    </div>\n  );\n  const bottom = !!bottomContent && <div className={tableBaseClass.bottomContent}>{bottomContent}</div>;\n\n  return (\n    <div ref={tableRef} className={classNames(dynamicBaseTableClasses)} style={{ position: 'relative', ...style }}>\n      {!!topContent && <div className={tableBaseClass.topContent}>{topContent}</div>}\n\n      {renderAffixedHeader()}\n\n      {tableContent}\n\n      {renderAffixedFooter()}\n\n      {loadingContent}\n\n      {showRightDivider && (\n        <div\n          className={tableBaseClass.scrollbarDivider}\n          style={{\n            right: `${scrollbarWidth}px`,\n            height: `${tableContentRef.current?.getBoundingClientRect().height}px`,\n          }}\n        ></div>\n      )}\n\n      {bottom}\n\n      {/* 吸底的滚动条 */}\n      {props.horizontalScrollAffixedBottom && (\n        <Affix\n          offsetBottom={0}\n          {...getAffixProps(props.horizontalScrollAffixedBottom)}\n          style={{ marginTop: `-${scrollbarWidth * 2}px` }}\n        >\n          <div\n            ref={horizontalScrollbarRef}\n            className={classNames(['scrollbar', tableBaseClass.obviousScrollbar])}\n            style={{\n              width: `${tableWidth.current}px`,\n              overflow: 'auto',\n              opacity: Number(showAffixFooter),\n            }}\n          >\n            <div style={{ width: `${tableElmWidth.current}px`, height: '5px' }}></div>\n          </div>\n        </Affix>\n      )}\n\n      {/* 吸底的分页器 */}\n      {props.paginationAffixedBottom ? (\n        <Affix offsetBottom={0} {...getAffixProps(props.paginationAffixedBottom)}>\n          {pagination}\n        </Affix>\n      ) : (\n        pagination\n      )}\n\n      {/* 调整列宽时的指示线。由于层级需要比较高，因而放在根节点，避免被吸顶表头覆盖。非必要情况，请勿调整辅助线位置 */}\n      <div ref={resizeLineRef} className={tableBaseClass.resizeLine} style={resizeLineStyle}></div>\n    </div>\n  );\n});\n\nBaseTable.displayName = 'BaseTable';\n\nBaseTable.defaultProps = baseTableDefaultProps;\n\nexport default BaseTable as <T extends TableRowData = TableRowData>(\n  props: BaseTableProps<T> & {\n    ref?: React.Ref<BaseTableRef>;\n  },\n) => React.ReactElement;\n"],"names":["BASE_TABLE_EVENTS","BASE_TABLE_ALL_EVENTS","ROW_LISTENERS","map","t","concat","BaseTable","forwardRef","props","ref","tableLayout","height","data","columns","style","headerAffixedTop","bordered","resizable","tableRef","useRef","tableElmRef","useState","_slicedToArray","tableFootHeight","setTableFootHeight","useClassName","classPrefix","virtualScrollClasses","tableLayoutClasses","tableBaseClass","tableColFixedClasses","useStyle","tableClasses","sizeClassNames","tableContentStyles","tableElementStyles","useTableHeader","isMultipleHeader","spansAndLeafNodes","thList","finalColumns","useMemo","leafColumns","useFixed","scrollbarWidth","tableWidth","tableElmWidth","tableContentRef","isFixedHeader","isWidthOverflow","isFixedColumn","thWidthList","showColumnShadow","rowAndColFixedPosition","setData","refreshTable","emitScrollEvent","setUseFixedTableElmRef","updateColumnFixedShadow","getThWidthList","updateThWidthList","setRecalculateColWidthFuncRef","addTableResizeObserver","useAffix","affixHeaderRef","affixFooterRef","horizontalScrollbarRef","paginationRef","showAffixHeader","showAffixFooter","showAffixPagination","onHorizontalScroll","setTableContentRef","updateAffixHeaderOrFooter","usePagination","dataSource","isPaginateData","renderPagination","columnResizeParams","useColumnResize","resizeLineRef","resizeLineStyle","recalculateColWidth","setEffectColMap","dynamicBaseTableClasses","classNames","headerFixed","columnFixed","_defineProperty","widthOverflow","multipleHeader","leftShadow","left","rightShadow","right","columnResizableTable","tableElmClasses","fullHeight","isVirtual","scroll","type","length","threshold","showRightDivider","useEffect","current","lastLeafColumns","setLastLeafColumns","colKey","join","onLeafColumnsChange","useImperativeHandle","tableElement","tableHtmlElement","tableContentElement","affixHeaderElement","onFixedChange","timer","setTimeout","clearTimeout","lastScrollY","onInnerVirtualScroll","e","target","top","scrollTop","getTFootHeight","querySelector","getBoundingClientRect","newData","log","warn","defaultColWidth","colgroup","React","createElement","col","width","formatCSSUnit","minWidth","key","headProps","ellipsisOverlayClassName","size","affixedLeftBorder","renderFixedHeader","onlyVirtualScrollBordered","test","navigator","userAgent","borderWidth","affixHeaderWrapHeight","headerOpacity","Number","affixHeaderWrapHeightStyle","opacity","marginTop","affixedHeader","Boolean","className","affixedHeaderElm","showHeader","THead","affixHeaderWithWrap","affixedHeaderWrap","renderAffixedHeader","Affix","offsetTop","getAffixProps","headerAffixProps","renderAffixedFooter","marginScrollbarWidth","affixedFooter","footerAffixedBottom","footData","affixedFooterWrap","offsetBottom","affixedFooterElm","TFoot","rowKey","rowAttributes","rowClassName","footerSummary","rowspanAndColspanInFooter","translate","virtualStyle","transform","tableBodyProps","tableElm","tableContentElm","cellEmptyContent","renderExpandedRow","pick","extendTableProps","tableContent","content","onScroll","cursor","TBody","loading","loadingProps","customLoadingText","loadingContent","Loading","text","attach","showOverlay","topContent","bottomContent","pagination","paginationWrap","bottom","position","scrollbarDivider","horizontalScrollAffixedBottom","obviousScrollbar","overflow","paginationAffixedBottom","resizeLine","displayName","defaultProps","baseTableDefaultProps"],"mappings":"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"}