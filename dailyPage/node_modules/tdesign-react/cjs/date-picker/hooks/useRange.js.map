{"version":3,"file":"useRange.js","sources":["../../../src/date-picker/hooks/useRange.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { CalendarIcon as TdCalendarIcon } from 'tdesign-icons-react';\nimport dayjs from 'dayjs';\nimport classNames from 'classnames';\nimport useConfig from '../../hooks/useConfig';\nimport useGlobalIcon from '../../hooks/useGlobalIcon';\nimport { RangeInputRefInterface } from '../../range-input';\nimport { TdDateRangePickerProps, DateValue } from '../type';\nimport { isValidDate, formatDate, getDefaultFormat, parseToDayjs } from '../../_common/js/date-picker/format';\nimport useRangeValue from './useRangeValue';\n\nexport const PARTIAL_MAP = { first: 'start', second: 'end' };\n\nexport default function useRange(props: TdDateRangePickerProps) {\n  const { classPrefix, datePicker: globalDatePickerConfig } = useConfig();\n  const { CalendarIcon } = useGlobalIcon({ CalendarIcon: TdCalendarIcon });\n  const name = `${classPrefix}-date-range-picker`;\n\n  const isMountedRef = useRef(false);\n  const inputRef = useRef<RangeInputRefInterface>();\n\n  const {\n    value,\n    onChange,\n    time,\n    setTime,\n    month,\n    setMonth,\n    year,\n    setYear,\n    cacheValue,\n    setCacheValue,\n    isFirstValueSelected,\n    setIsFirstValueSelected,\n  } = useRangeValue(props);\n\n  const { format, timeFormat, valueType } = getDefaultFormat({\n    mode: props.mode,\n    format: props.format,\n    valueType: props.valueType,\n    enableTimePicker: props.enableTimePicker,\n  });\n\n  const [popupVisible, setPopupVisible] = useState(false);\n  const [isHoverCell, setIsHoverCell] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0); // 确定当前选中的输入框序号\n  // 未真正选中前可能不断变更输入框的内容\n  const [inputValue, setInputValue] = useState(formatDate(value, { format }));\n\n  // input 设置\n  const rangeInputProps = {\n    ...props.rangeInputProps,\n    ref: inputRef,\n    separator: props.separator ?? globalDatePickerConfig.rangeSeparator,\n    clearable: props.clearable,\n    prefixIcon: props.prefixIcon,\n    readonly: !props.allowInput,\n    placeholder: props.placeholder ?? globalDatePickerConfig.placeholder[props.mode],\n    activeIndex: popupVisible ? activeIndex : undefined,\n    suffixIcon: props.suffixIcon ?? <CalendarIcon />,\n    className: classNames({\n      [`${name}__input--placeholder`]: isHoverCell,\n    }),\n    onClick: ({ position }) => {\n      setActiveIndex(position === 'first' ? 0 : 1);\n    },\n    onClear: ({ e }) => {\n      e.stopPropagation();\n      setPopupVisible(false);\n      onChange([], { dayjsValue: [], trigger: 'clear' });\n    },\n    onBlur: (newVal: string[], { e, position }) => {\n      props.onBlur?.({ value: newVal, partial: PARTIAL_MAP[position], e });\n    },\n    onFocus: (newVal: string[], { e, position }) => {\n      props.onFocus?.({ value: newVal, partial: PARTIAL_MAP[position], e });\n      setActiveIndex(position === 'first' ? 0 : 1);\n    },\n    onChange: (newVal: string[], { e, position }) => {\n      const index = position === 'first' ? 0 : 1;\n\n      props.onInput?.({ input: newVal[index], value, partial: PARTIAL_MAP[position], e });\n      setInputValue(newVal);\n\n      // 跳过不符合格式化的输入框内容\n      if (!isValidDate(newVal, format)) return;\n      const newYear = [];\n      const newMonth = [];\n      const newTime = [];\n      newVal.forEach((v, i) => {\n        newYear.push(dayjs(v).year() || year[i]);\n        newMonth.push(dayjs(v).month() || month[i]);\n        newTime.push(dayjs(v).format(timeFormat) || time[i]);\n      });\n      setYear(newYear);\n      setMonth(newMonth);\n      setTime(newTime);\n    },\n    onEnter: (newVal: string[]) => {\n      if (!isValidDate(newVal, format) && !isValidDate(value, format)) return;\n\n      setPopupVisible(false);\n      if (isValidDate(newVal, format)) {\n        onChange(formatDate(newVal, { format, targetFormat: valueType }) as DateValue[], {\n          dayjsValue: newVal.map((v) => parseToDayjs(v, format)),\n          trigger: 'enter',\n        });\n      } else if (isValidDate(value, format)) {\n        setInputValue(formatDate(value, { format }));\n      } else {\n        setInputValue([]);\n      }\n    },\n  };\n\n  // popup 设置\n  const popupProps = {\n    expandAnimation: true,\n    ...props.popupProps,\n    overlayInnerStyle: props.popupProps?.overlayInnerStyle ?? { width: 'auto' },\n    overlayClassName: classNames(props.popupProps?.overlayClassName, `${name}__panel-container`),\n    onVisibleChange: (visible: boolean, context) => {\n      // 输入框点击不关闭面板\n      if (context.trigger === 'trigger-element-click') {\n        const indexMap = { 0: 'first', 1: 'second' };\n        inputRef.current.focus({ position: indexMap[activeIndex] });\n        return setPopupVisible(true);\n      }\n\n      setPopupVisible(visible);\n    },\n  };\n\n  // 输入框响应 value 变化\n  useEffect(() => {\n    if (!value) {\n      setInputValue([]);\n      return;\n    }\n    if (!isValidDate(value, format)) return;\n\n    setInputValue(formatDate(value, { format }));\n    // eslint-disable-next-line\n  }, [value]);\n\n  // activeIndex 变化自动 focus 对应输入框\n  useEffect(() => {\n    if (!isMountedRef.current) {\n      isMountedRef.current = true;\n      return;\n    }\n    const indexMap = { 0: 'first', 1: 'second' };\n    inputRef.current.focus({ position: indexMap[activeIndex] });\n    // eslint-disable-next-line\n  }, [activeIndex]);\n\n  return {\n    year,\n    month,\n    value,\n    time,\n    inputValue,\n    popupVisible,\n    rangeInputProps,\n    popupProps,\n    isHoverCell,\n    onChange,\n    setYear,\n    setMonth,\n    setTime,\n    setIsHoverCell,\n    setInputValue,\n    setPopupVisible,\n    activeIndex,\n    setActiveIndex,\n    isFirstValueSelected,\n    setIsFirstValueSelected,\n    cacheValue,\n    setCacheValue,\n  };\n}\n"],"names":["PARTIAL_MAP","first","second","useRange","props","useConfig","classPrefix","globalDatePickerConfig","datePicker","useGlobalIcon","CalendarIcon","TdCalendarIcon","name","isMountedRef","useRef","inputRef","useRangeValue","value","onChange","time","setTime","month","setMonth","year","setYear","cacheValue","setCacheValue","isFirstValueSelected","setIsFirstValueSelected","getDefaultFormat","mode","format","valueType","enableTimePicker","timeFormat","useState","_slicedToArray","popupVisible","setPopupVisible","isHoverCell","setIsHoverCell","activeIndex","setActiveIndex","formatDate","inputValue","setInputValue","rangeInputProps","ref","separator","rangeSeparator","clearable","prefixIcon","readonly","allowInput","placeholder","suffixIcon","React","createElement","className","classNames","_defineProperty","onClick","position","onClear","e","stopPropagation","dayjsValue","trigger","onBlur","newVal","partial","onFocus","index","onInput","input","isValidDate","newYear","newMonth","newTime","forEach","v","i","push","dayjs","onEnter","targetFormat","map","parseToDayjs","popupProps","expandAnimation","overlayInnerStyle","width","overlayClassName","onVisibleChange","visible","context","indexMap","current","focus","useEffect"],"mappings":"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"}