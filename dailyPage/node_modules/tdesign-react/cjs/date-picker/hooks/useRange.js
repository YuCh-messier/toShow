/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../_chunks/dep-3415b40f.js');
var slicedToArray = require('../../_chunks/dep-8c98b84c.js');
var React = require('react');
var tdesignIconsReact = require('tdesign-icons-react');
var dayjs = require('dayjs');
var classNames = require('classnames');
var hooks_useConfig = require('../../hooks/useConfig.js');
var hooks_useGlobalIcon = require('../../hooks/useGlobalIcon.js');
var _common_js_datePicker_format = require('../../_common/js/date-picker/format.js');
var datePicker_hooks_useRangeValue = require('./useRangeValue.js');
require('../../_chunks/dep-789d4bfb.js');
require('../../config-provider/ConfigContext.js');
require('../../_chunks/dep-bbbce181.js');
require('../../_chunks/dep-4c1144f0.js');
require('../../_chunks/dep-be113066.js');
require('../../_chunks/dep-7affd9c7.js');
require('../../_chunks/dep-c15e2539.js');
require('../../_chunks/dep-1ad27019.js');
require('../../_chunks/dep-6c4c2f3e.js');
require('../../_chunks/dep-b282bced.js');
require('../../_chunks/dep-b8187df5.js');
require('../../_chunks/dep-6b7adfaa.js');
require('../../_chunks/dep-bdb568fa.js');
require('../../_chunks/dep-3c510ebe.js');
require('../../_chunks/dep-ffd983b8.js');
require('../../_chunks/dep-bafabd9b.js');
require('../../_chunks/dep-29ecaf93.js');
require('../../_chunks/dep-28bf72fc.js');
require('../../_chunks/dep-72f2b815.js');
require('../../_chunks/dep-46b250c3.js');
require('../../_chunks/dep-6f0ad8f9.js');
require('../../_chunks/dep-901b688e.js');
require('../../_chunks/dep-92d05577.js');
require('../../_chunks/dep-6aeda844.js');
require('../../_chunks/dep-39147135.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../_common/js/global-config/default-config.js');
require('../../_common/js/date-picker/utils.js');
require('../../_chunks/dep-de26ea20.js');
require('../../_chunks/dep-8afae264.js');
require('../../_chunks/dep-f6abffca.js');
require('../../_chunks/dep-6d1aecc8.js');
require('../../_common/js/log/log.js');
require('../../hooks/useControlled.js');
require('../../_chunks/dep-f31114fd.js');
require('../../_chunks/dep-eb2281b7.js');
require('../../_chunks/dep-93234904.js');
require('../../_util/noop.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var PARTIAL_MAP = {
  first: "start",
  second: "end"
};
function useRange(props) {
  var _props$separator, _props$placeholder, _props$suffixIcon, _props$popupProps$ove, _props$popupProps, _props$popupProps2;

  var _useConfig = hooks_useConfig["default"](),
      classPrefix = _useConfig.classPrefix,
      globalDatePickerConfig = _useConfig.datePicker;

  var _useGlobalIcon = hooks_useGlobalIcon["default"]({
    CalendarIcon: tdesignIconsReact.CalendarIcon
  }),
      CalendarIcon = _useGlobalIcon.CalendarIcon;

  var name = "".concat(classPrefix, "-date-range-picker");
  var isMountedRef = React.useRef(false);
  var inputRef = React.useRef();

  var _useRangeValue = datePicker_hooks_useRangeValue["default"](props),
      value = _useRangeValue.value,
      onChange = _useRangeValue.onChange,
      time = _useRangeValue.time,
      setTime = _useRangeValue.setTime,
      month = _useRangeValue.month,
      setMonth = _useRangeValue.setMonth,
      year = _useRangeValue.year,
      setYear = _useRangeValue.setYear,
      cacheValue = _useRangeValue.cacheValue,
      setCacheValue = _useRangeValue.setCacheValue,
      isFirstValueSelected = _useRangeValue.isFirstValueSelected,
      setIsFirstValueSelected = _useRangeValue.setIsFirstValueSelected;

  var _getDefaultFormat = _common_js_datePicker_format.getDefaultFormat({
    mode: props.mode,
    format: props.format,
    valueType: props.valueType,
    enableTimePicker: props.enableTimePicker
  }),
      format = _getDefaultFormat.format,
      timeFormat = _getDefaultFormat.timeFormat,
      valueType = _getDefaultFormat.valueType;

  var _useState = React.useState(false),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      popupVisible = _useState2[0],
      setPopupVisible = _useState2[1];

  var _useState3 = React.useState(false),
      _useState4 = slicedToArray._slicedToArray(_useState3, 2),
      isHoverCell = _useState4[0],
      setIsHoverCell = _useState4[1];

  var _useState5 = React.useState(0),
      _useState6 = slicedToArray._slicedToArray(_useState5, 2),
      activeIndex = _useState6[0],
      setActiveIndex = _useState6[1];

  var _useState7 = React.useState(_common_js_datePicker_format.formatDate(value, {
    format: format
  })),
      _useState8 = slicedToArray._slicedToArray(_useState7, 2),
      inputValue = _useState8[0],
      setInputValue = _useState8[1];

  var rangeInputProps = _objectSpread(_objectSpread({}, props.rangeInputProps), {}, {
    ref: inputRef,
    separator: (_props$separator = props.separator) !== null && _props$separator !== void 0 ? _props$separator : globalDatePickerConfig.rangeSeparator,
    clearable: props.clearable,
    prefixIcon: props.prefixIcon,
    readonly: !props.allowInput,
    placeholder: (_props$placeholder = props.placeholder) !== null && _props$placeholder !== void 0 ? _props$placeholder : globalDatePickerConfig.placeholder[props.mode],
    activeIndex: popupVisible ? activeIndex : void 0,
    suffixIcon: (_props$suffixIcon = props.suffixIcon) !== null && _props$suffixIcon !== void 0 ? _props$suffixIcon : /* @__PURE__ */React__default["default"].createElement(CalendarIcon, null),
    className: classNames__default["default"](defineProperty._defineProperty({}, "".concat(name, "__input--placeholder"), isHoverCell)),
    onClick: function onClick(_ref) {
      var position = _ref.position;
      setActiveIndex(position === "first" ? 0 : 1);
    },
    onClear: function onClear(_ref2) {
      var e = _ref2.e;
      e.stopPropagation();
      setPopupVisible(false);
      onChange([], {
        dayjsValue: [],
        trigger: "clear"
      });
    },
    onBlur: function onBlur(newVal, _ref3) {
      var _props$onBlur;

      var e = _ref3.e,
          position = _ref3.position;
      (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 ? void 0 : _props$onBlur.call(props, {
        value: newVal,
        partial: PARTIAL_MAP[position],
        e: e
      });
    },
    onFocus: function onFocus(newVal, _ref4) {
      var _props$onFocus;

      var e = _ref4.e,
          position = _ref4.position;
      (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 ? void 0 : _props$onFocus.call(props, {
        value: newVal,
        partial: PARTIAL_MAP[position],
        e: e
      });
      setActiveIndex(position === "first" ? 0 : 1);
    },
    onChange: function onChange(newVal, _ref5) {
      var _props$onInput;

      var e = _ref5.e,
          position = _ref5.position;
      var index = position === "first" ? 0 : 1;
      (_props$onInput = props.onInput) === null || _props$onInput === void 0 ? void 0 : _props$onInput.call(props, {
        input: newVal[index],
        value: value,
        partial: PARTIAL_MAP[position],
        e: e
      });
      setInputValue(newVal);
      if (!_common_js_datePicker_format.isValidDate(newVal, format)) return;
      var newYear = [];
      var newMonth = [];
      var newTime = [];
      newVal.forEach(function (v, i) {
        newYear.push(dayjs__default["default"](v).year() || year[i]);
        newMonth.push(dayjs__default["default"](v).month() || month[i]);
        newTime.push(dayjs__default["default"](v).format(timeFormat) || time[i]);
      });
      setYear(newYear);
      setMonth(newMonth);
      setTime(newTime);
    },
    onEnter: function onEnter(newVal) {
      if (!_common_js_datePicker_format.isValidDate(newVal, format) && !_common_js_datePicker_format.isValidDate(value, format)) return;
      setPopupVisible(false);

      if (_common_js_datePicker_format.isValidDate(newVal, format)) {
        onChange(_common_js_datePicker_format.formatDate(newVal, {
          format: format,
          targetFormat: valueType
        }), {
          dayjsValue: newVal.map(function (v) {
            return _common_js_datePicker_format.parseToDayjs(v, format);
          }),
          trigger: "enter"
        });
      } else if (_common_js_datePicker_format.isValidDate(value, format)) {
        setInputValue(_common_js_datePicker_format.formatDate(value, {
          format: format
        }));
      } else {
        setInputValue([]);
      }
    }
  });

  var popupProps = _objectSpread(_objectSpread({
    expandAnimation: true
  }, props.popupProps), {}, {
    overlayInnerStyle: (_props$popupProps$ove = (_props$popupProps = props.popupProps) === null || _props$popupProps === void 0 ? void 0 : _props$popupProps.overlayInnerStyle) !== null && _props$popupProps$ove !== void 0 ? _props$popupProps$ove : {
      width: "auto"
    },
    overlayClassName: classNames__default["default"]((_props$popupProps2 = props.popupProps) === null || _props$popupProps2 === void 0 ? void 0 : _props$popupProps2.overlayClassName, "".concat(name, "__panel-container")),
    onVisibleChange: function onVisibleChange(visible, context) {
      if (context.trigger === "trigger-element-click") {
        var indexMap = {
          0: "first",
          1: "second"
        };
        inputRef.current.focus({
          position: indexMap[activeIndex]
        });
        return setPopupVisible(true);
      }

      setPopupVisible(visible);
    }
  });

  React.useEffect(function () {
    if (!value) {
      setInputValue([]);
      return;
    }

    if (!_common_js_datePicker_format.isValidDate(value, format)) return;
    setInputValue(_common_js_datePicker_format.formatDate(value, {
      format: format
    }));
  }, [value]);
  React.useEffect(function () {
    if (!isMountedRef.current) {
      isMountedRef.current = true;
      return;
    }

    var indexMap = {
      0: "first",
      1: "second"
    };
    inputRef.current.focus({
      position: indexMap[activeIndex]
    });
  }, [activeIndex]);
  return {
    year: year,
    month: month,
    value: value,
    time: time,
    inputValue: inputValue,
    popupVisible: popupVisible,
    rangeInputProps: rangeInputProps,
    popupProps: popupProps,
    isHoverCell: isHoverCell,
    onChange: onChange,
    setYear: setYear,
    setMonth: setMonth,
    setTime: setTime,
    setIsHoverCell: setIsHoverCell,
    setInputValue: setInputValue,
    setPopupVisible: setPopupVisible,
    activeIndex: activeIndex,
    setActiveIndex: setActiveIndex,
    isFirstValueSelected: isFirstValueSelected,
    setIsFirstValueSelected: setIsFirstValueSelected,
    cacheValue: cacheValue,
    setCacheValue: setCacheValue
  };
}

exports.PARTIAL_MAP = PARTIAL_MAP;
exports["default"] = useRange;
//# sourceMappingURL=useRange.js.map
