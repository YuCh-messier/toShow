/**
 * tdesign v0.42.2
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var toConsumableArray = require('../../_chunks/dep-0944d665.js');
var slicedToArray = require('../../_chunks/dep-8c98b84c.js');
var React = require('react');
var locale_LocalReceiver = require('../../locale/LocalReceiver.js');
var hooks_useConfig = require('../../hooks/useConfig.js');
var select_index = require('../../select/index.js');
var jumper_index = require('../../jumper/index.js');
require('../../_chunks/dep-789d4bfb.js');
require('../../_chunks/dep-3415b40f.js');
require('../../config-provider/ConfigContext.js');
require('../../_chunks/dep-bbbce181.js');
require('../../_chunks/dep-4c1144f0.js');
require('../../_chunks/dep-be113066.js');
require('../../_chunks/dep-7affd9c7.js');
require('../../_chunks/dep-c15e2539.js');
require('../../_chunks/dep-1ad27019.js');
require('../../_chunks/dep-6c4c2f3e.js');
require('../../_chunks/dep-b282bced.js');
require('../../_chunks/dep-b8187df5.js');
require('../../_chunks/dep-6b7adfaa.js');
require('../../_chunks/dep-bdb568fa.js');
require('../../_chunks/dep-3c510ebe.js');
require('../../_chunks/dep-ffd983b8.js');
require('../../_chunks/dep-bafabd9b.js');
require('../../_chunks/dep-29ecaf93.js');
require('../../_chunks/dep-28bf72fc.js');
require('../../_chunks/dep-72f2b815.js');
require('../../_chunks/dep-46b250c3.js');
require('../../_chunks/dep-6f0ad8f9.js');
require('../../_chunks/dep-901b688e.js');
require('../../_chunks/dep-92d05577.js');
require('../../_chunks/dep-6aeda844.js');
require('../../_chunks/dep-39147135.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../_common/js/global-config/default-config.js');
require('../../select/base/Select.js');
require('../../_chunks/dep-e675c809.js');
require('classnames');
require('../../_chunks/dep-f0b85a46.js');
require('../../_chunks/dep-cc5ddaf7.js');
require('../../_chunks/dep-f6abffca.js');
require('../../_chunks/dep-93234904.js');
require('../../hooks/useControlled.js');
require('../../_chunks/dep-f31114fd.js');
require('../../_chunks/dep-eb2281b7.js');
require('../../_chunks/dep-6d1aecc8.js');
require('../../_util/noop.js');
require('../../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../../select/util/helper.js');
require('../../select/base/OptionGroup.js');
require('../../select/defaultProps.js');
require('../../select/base/Option.js');
require('../../_chunks/dep-49f84ee3.js');
require('../../_chunks/dep-23aa4ed2.js');
require('../../_util/useRipple.js');
require('../../_util/useAnimation.js');
require('../../_util/setStyle.js');
require('../../_util/dom.js');
require('raf');
require('../../_util/easing.js');
require('../../common/FakeArrow.js');
require('../../loading/index.js');
require('../../loading/Loading.js');
require('../../common/Portal.js');
require('react-dom');
require('../../loading/gradient.js');
require('../../_common/js/loading/circle-adapter.js');
require('../../_common/js/utils/set-style.js');
require('../../_common/js/utils/helper.js');
require('../../loading/defaultProps.js');
require('../../loading/plugin.js');
require('../../select-input/index.js');
require('../../select-input/SelectInput.js');
require('../../popup/index.js');
require('../../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../../popup/hooks/useTrigger.js');
require('react-is');
require('../../popup/utils/ref.js');
require('../../_util/composeRefs.js');
require('../../popup/utils/transition.js');
require('../../_util/useMutationObserver.js');
require('../../_chunks/dep-d26534d4.js');
require('../../_chunks/dep-8afae264.js');
require('../../_util/useWindowSize.js');
require('../../popup/defaultProps.js');
require('../../select-input/useSingle.js');
require('../../_chunks/dep-64a370bf.js');
require('../../_chunks/dep-b5d52e6f.js');
require('../../_chunks/dep-5cdbc06c.js');
require('../../_chunks/dep-7745815b.js');
require('../../input/index.js');
require('../../input/Input.js');
require('tdesign-icons-react');
require('../../_util/useLayoutEffect.js');
require('../../hooks/useGlobalIcon.js');
require('../../input/InputGroup.js');
require('../../input/defaultProps.js');
require('../../select-input/useMultiple.js');
require('../../tag-input/index.js');
require('../../tag-input/TagInput.js');
require('../../_util/useDragSorter.js');
require('../../tag-input/useTagScroll.js');
require('../../tag-input/useTagList.js');
require('../../tag/index.js');
require('../../tag/Tag.js');
require('../../tag/CheckTag.js');
require('../../tag/defaultProps.js');
require('../../tag-input/useHover.js');
require('../../tag-input/defaultProps.js');
require('../../select-input/useOverlayInnerStyle.js');
require('../../select-input/defaultProps.js');
require('../../select/base/PopupContent.js');
require('../../jumper/Jumper.js');
require('../../button/index.js');
require('../../button/Button.js');
require('../../button/defaultProps.js');
require('../../jumper/defaultProps.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var useDatePickerLocalConfig = function useDatePickerLocalConfig() {
  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("datePicker"),
      _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
      local = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  return {
    months: t(local.months),
    nextYear: t(local.nextYear),
    preYear: t(local.preYear),
    nextMonth: t(local.nextMonth),
    preMonth: t(local.preMonth),
    preDecade: t(local.preDecade),
    nextDecade: t(local.nextDecade),
    now: t(local.now)
  };
};

var DatePickerHeader = function DatePickerHeader(props) {
  var _useConfig = hooks_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var mode = props.mode,
      year = props.year,
      month = props.month,
      onMonthChange = props.onMonthChange,
      onYearChange = props.onYearChange,
      onJumperClick = props.onJumperClick;

  var _useDatePickerLocalCo = useDatePickerLocalConfig(),
      now = _useDatePickerLocalCo.now,
      months = _useDatePickerLocalCo.months,
      preMonth = _useDatePickerLocalCo.preMonth,
      preYear = _useDatePickerLocalCo.preYear,
      nextMonth = _useDatePickerLocalCo.nextMonth,
      nextYear = _useDatePickerLocalCo.nextYear,
      preDecade = _useDatePickerLocalCo.preDecade,
      nextDecade = _useDatePickerLocalCo.nextDecade;

  var scrollAnchorRef = React.useRef("default");
  var monthOptions = months.map(function (item, index) {
    return {
      label: item,
      value: index
    };
  });
  var initOptions = React.useCallback(function (year2) {
    var options = [];

    if (mode === "year") {
      var extraYear = year2 % 10;
      var minYear = year2 - extraYear - 100;
      var maxYear = year2 - extraYear + 100;

      for (var i = minYear; i <= maxYear; i += 10) {
        options.push({
          label: "".concat(i, " - ").concat(i + 9),
          value: i + extraYear
        });
      }
    } else {
      options.push({
        label: "".concat(year2),
        value: year2
      });

      for (var _i = 1; _i <= 10; _i++) {
        options.push({
          label: "".concat(year2 + _i),
          value: year2 + _i
        });
        options.unshift({
          label: "".concat(year2 - _i),
          value: year2 - _i
        });
      }
    }

    return options;
  }, [mode]);

  var _useState = React.useState(initOptions(year)),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      yearOptions = _useState2[0],
      setYearOptions = _useState2[1];

  var nearestYear = React.useMemo(function () {
    var _yearOptions$find;

    return ((_yearOptions$find = yearOptions.find(function (option) {
      return option.value - year <= 9 && option.value - year >= 0;
    })) === null || _yearOptions$find === void 0 ? void 0 : _yearOptions$find.value) || year;
  }, [yearOptions, year]);
  React.useEffect(function () {
    var yearRange = initOptions(year);
    setYearOptions(yearRange);
  }, [initOptions, year]);

  function loadMoreYear(year2, type) {
    var options = [];

    if (mode === "year") {
      var extraYear = year2 % 10;

      if (type === "add") {
        for (var i = year2 - extraYear + 10; i <= year2 - extraYear + 50; i += 10) {
          options.push({
            label: "".concat(i, " - ").concat(i + 9),
            value: i
          });
        }
      } else {
        for (var _i2 = year2 - extraYear - 1; _i2 > year2 - extraYear - 50; _i2 -= 10) {
          options.unshift({
            label: "".concat(_i2 - 9, " - ").concat(_i2),
            value: _i2
          });
        }
      }
    } else if (type === "add") {
      for (var _i3 = year2 + 1; _i3 <= year2 + 10; _i3++) {
        options.push({
          label: "".concat(_i3),
          value: _i3
        });
      }
    } else {
      for (var _i4 = year2 - 1; _i4 > year2 - 10; _i4--) {
        options.unshift({
          label: "".concat(_i4),
          value: _i4
        });
      }
    }

    return options;
  }

  var labelMap = {
    year: {
      prev: preDecade,
      current: now,
      next: nextDecade
    },
    month: {
      prev: preYear,
      current: now,
      next: nextYear
    },
    date: {
      prev: preMonth,
      current: now,
      next: nextMonth
    }
  };
  var headerClassName = "".concat(classPrefix, "-date-picker__header");
  var showMonthPicker = mode === "date" || mode === "week";

  function handlePanelTopClick(e) {
    var _e$stopPropagation, _e$nativeEvent, _e$nativeEvent$stopIm;

    e === null || e === void 0 ? void 0 : (_e$stopPropagation = e.stopPropagation) === null || _e$stopPropagation === void 0 ? void 0 : _e$stopPropagation.call(e);
    e === null || e === void 0 ? void 0 : (_e$nativeEvent = e.nativeEvent) === null || _e$nativeEvent === void 0 ? void 0 : (_e$nativeEvent$stopIm = _e$nativeEvent.stopImmediatePropagation) === null || _e$nativeEvent$stopIm === void 0 ? void 0 : _e$nativeEvent$stopIm.call(_e$nativeEvent);
    var firstYear = yearOptions[0].value;
    var options = loadMoreYear(firstYear, "reduce");
    setYearOptions([].concat(toConsumableArray._toConsumableArray(options), toConsumableArray._toConsumableArray(yearOptions)));
  }

  function handlePanelBottomClick(e) {
    var _e$stopPropagation2, _e$nativeEvent2;

    e === null || e === void 0 ? void 0 : (_e$stopPropagation2 = e.stopPropagation) === null || _e$stopPropagation2 === void 0 ? void 0 : _e$stopPropagation2.call(e);
    e === null || e === void 0 ? void 0 : (_e$nativeEvent2 = e.nativeEvent) === null || _e$nativeEvent2 === void 0 ? void 0 : _e$nativeEvent2.stopImmediatePropagation();
    var lastYear = yearOptions.slice(-1)[0].value;
    var options = loadMoreYear(lastYear, "add");
    setYearOptions([].concat(toConsumableArray._toConsumableArray(yearOptions), toConsumableArray._toConsumableArray(options)));
  }

  function handleScroll(_ref) {
    var e = _ref.e;

    if (e.target.scrollTop === 0) {
      handlePanelTopClick();
      scrollAnchorRef.current = "top";
    } else if (e.target.scrollTop === e.target.scrollHeight - e.target.clientHeight) {
      handlePanelBottomClick();
      scrollAnchorRef.current = "bottom";
    }
  }

  function handleUpdateScrollTop(content) {
    if (scrollAnchorRef.current === "top") {
      content.scrollTop = 30 * 10;
    } else if (scrollAnchorRef.current === "bottom") {
      content.scrollTop = content.scrollHeight - 30 * 10;
    } else {
      var firstSelectedNode = content.querySelector(".".concat(classPrefix, "-is-selected"));

      if (firstSelectedNode) {
        var _getComputedStyle = getComputedStyle(firstSelectedNode),
            paddingBottom = _getComputedStyle.paddingBottom;

        var _getComputedStyle2 = getComputedStyle(content),
            marginBottom = _getComputedStyle2.marginBottom;

        var elementBottomHeight = parseInt(paddingBottom, 10) + parseInt(marginBottom, 10);
        var updateValue = firstSelectedNode.offsetTop - content.offsetTop - (content.clientHeight - firstSelectedNode.clientHeight) + elementBottomHeight;
        content.scrollTop = updateValue;
      }
    }
  }

  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: headerClassName
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(headerClassName, "-controller")
  }, showMonthPicker && /* @__PURE__ */React__default["default"].createElement(select_index.Select, {
    className: "".concat(headerClassName, "-controller-month"),
    value: month,
    options: monthOptions,
    onChange: function onChange(val) {
      return onMonthChange(val);
    },
    popupProps: {
      attach: function attach(triggerElement) {
        return triggerElement.parentNode;
      },
      overlayClassName: "".concat(headerClassName, "-controller-month-popup")
    }
  }), /* @__PURE__ */React__default["default"].createElement(select_index.Select, {
    className: "".concat(headerClassName, "-controller-year"),
    value: mode === "year" ? nearestYear : year,
    options: yearOptions,
    onChange: function onChange(val) {
      return onYearChange(val);
    },
    onPopupVisibleChange: function onPopupVisibleChange(visible) {
      if (!visible) scrollAnchorRef.current = "default";
    },
    popupProps: {
      onScroll: handleScroll,
      updateScrollTop: handleUpdateScrollTop,
      attach: function attach(triggerElement) {
        return triggerElement.parentNode;
      },
      overlayClassName: "".concat(headerClassName, "-controller-year-popup")
    },
    panelTopContent: /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(classPrefix, "-select-option"),
      onClick: handlePanelTopClick
    }, "..."),
    panelBottomContent: /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(classPrefix, "-select-option"),
      onClick: handlePanelBottomClick
    }, "...")
  })), /* @__PURE__ */React__default["default"].createElement(jumper_index.Jumper, {
    tips: labelMap[mode],
    size: "small",
    onChange: onJumperClick
  }));
};

DatePickerHeader.displayName = "DatePickerHeader";

exports["default"] = DatePickerHeader;
//# sourceMappingURL=Header.js.map
